{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\components\\custom\\user-choose.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\components\\custom\\user-choose.vue","mtime":1564969187189},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\less-loader\\dist\\cjs.js","mtime":1564973047851},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.clear {\r\n  font-size: 12px;\r\n  margin-left: 15px;\r\n  color: #40a9ff;\r\n  cursor: pointer;\r\n}\r\n.collapse {\r\n  font-size: 12px;\r\n  margin-top: 15px;\r\n  width: 500px;\r\n}\r\n.drawer-footer {\r\n  z-index: 10;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  border-top: 1px solid #e8e8e8;\r\n  padding: 10px 16px;\r\n  text-align: right;\r\n  background: #fff;\r\n}\r\n.select-count {\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  color: #40a9ff;\r\n}\r\n",{"version":3,"sources":["user-choose.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user-choose.vue","sourceRoot":"src/views/components/custom","sourcesContent":["<template>\r\n  <div>\r\n    <Button @click=\"userModalVisible=true\" :icon=\"icon\">{{buttonText}}</Button>\r\n    <span @click=\"clearSelectUser\" class=\"clear\">清空已选</span>\r\n    <Collapse simple class=\"collapse\">\r\n      <Panel name=\"1\">\r\n        已选择\r\n        <span class=\"select-count\">{{selectUsers.length}}</span> 人\r\n        <p slot=\"content\">\r\n          <Tag\r\n            v-for=\"(item, i) in selectUsers\"\r\n            :key=\"i\"\r\n            :name=\"item.id\"\r\n            color=\"default\"\r\n            closable\r\n            @on-close=\"handleCancelUser\"\r\n          >{{item.username}}</Tag>\r\n        </p>\r\n      </Panel>\r\n    </Collapse>\r\n    <Drawer title=\"选择用户\" closable v-model=\"userModalVisible\" width=\"800\" draggable>\r\n      <Form\r\n        ref=\"searchUserForm\"\r\n        :model=\"searchUserForm\"\r\n        inline\r\n        :label-width=\"55\"\r\n        class=\"search-form\"\r\n      >\r\n        <Form-item label=\"用户名\" prop=\"username\">\r\n          <Input\r\n            type=\"text\"\r\n            v-model=\"searchUserForm.username\"\r\n            clearable\r\n            placeholder=\"请输入用户名\"\r\n            style=\"width: 200px\"\r\n          />\r\n        </Form-item>\r\n        <Form-item label=\"部门\" prop=\"department\">\r\n          <department-choose @on-select=\"handleSelectDep\" ref=\"dep\"></department-choose>\r\n        </Form-item>\r\n        <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n          <Button @click=\"handleSearchUser\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n          <Button @click=\"handleResetUser\">重置</Button>\r\n        </Form-item>\r\n      </Form>\r\n      <Table :loading=\"userLoading\" border :columns=\"userColumns\" :data=\"userData\" ref=\"userTable\"></Table>\r\n      <Row type=\"flex\" justify=\"end\" class=\"code-row-bg page\" style=\"margin: 10px 0;\">\r\n        <Page\r\n          :current=\"searchUserForm.pageNumber\"\r\n          :total=\"totalUser\"\r\n          :page-size=\"searchUserForm.pageSize\"\r\n          @on-change=\"changeUserPage\"\r\n          @on-page-size-change=\"changeUserPageSize\"\r\n          :page-size-opts=\"[9,18,36]\"\r\n          size=\"small\"\r\n          show-total\r\n          show-elevator\r\n          show-sizer\r\n        ></Page>\r\n      </Row>\r\n      <div class=\"drawer-footer\">\r\n        已选择\r\n        <span class=\"select-count\">{{selectUsers.length}}</span> 人\r\n        <Button @click=\"clearSelectUser\" style=\"margin-left:10px\">清空已选</Button>\r\n        <Button @click=\"setSelectAllUser\" type=\"info\" style=\"margin-left:10px\">勾选全部</Button>\r\n        <Button @click=\"userModalVisible=false\" type=\"primary\" style=\"margin-left:10px\">关闭</Button>\r\n      </div>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUserListData, getDictDataByType } from \"@/api/index\";\r\nimport departmentChoose from \"./department-choose\";\r\nexport default {\r\n  name: \"userChoose\",\r\n  components: {\r\n    departmentChoose\r\n  },\r\n  props: {\r\n    buttonText: {\r\n      type: String,\r\n      default: \"选择用户\"\r\n    },\r\n    icon: {\r\n      type: String,\r\n      default: \"md-person-add\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userLoading: true,\r\n      userModalVisible: false,\r\n      selectUsers: [],\r\n      searchUserForm: {\r\n        username: \"\",\r\n        type: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 9, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\" // 默认排序方式\r\n      },\r\n      userColumns: [\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"username\",\r\n          width: 145,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"avatar\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\"Avatar\", {\r\n              props: {\r\n                src: params.row.avatar\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          title: \"所属部门\",\r\n          key: \"departmentTitle\",\r\n          width: 120\r\n        },\r\n        {\r\n          title: \"手机\",\r\n          key: \"mobile\",\r\n          width: 115,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\",\r\n          width: 180,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"性别\",\r\n          key: \"sex\",\r\n          width: 70,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictSex.forEach(e => {\r\n              if (e.value == params.row.sex) {\r\n                re = e.title;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          key: \"type\",\r\n          align: \"center\",\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.type === 1) {\r\n              re = \"管理员\";\r\n            } else if (params.row.type === 0) {\r\n              re = \"普通用户\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 120,\r\n          render: (h, params) => {\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"green\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"red\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          sortType: \"desc\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 130,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.chooseUser(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"添加该用户\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      userData: [],\r\n      totalUser: 0,\r\n      dictMessageType: []\r\n    };\r\n  },\r\n  methods: {\r\n    getDictDataType() {\r\n      getDictDataByType(\"message_type\").then(res => {\r\n        if (res.success) {\r\n          this.dictMessageType = res.result;\r\n        }\r\n      });\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"sex\").then(res => {\r\n        if (res.success) {\r\n          this.dictSex = res.result;\r\n        }\r\n      });\r\n    },\r\n    handleSelectDep(v) {\r\n      this.searchUserForm.departmentId = v;\r\n    },\r\n    changeUserPage(v) {\r\n      this.searchUserForm.pageNumber = v;\r\n      this.getUserDataList();\r\n    },\r\n    changeUserPageSize(v) {\r\n      this.searchUserForm.pageSize = v;\r\n      this.getUserDataList();\r\n    },\r\n    getUserDataList() {\r\n      this.userLoading = true;\r\n      getUserListData(this.searchUserForm).then(res => {\r\n        this.userLoading = false;\r\n        if (res.success === true) {\r\n          this.userData = res.result.content;\r\n          this.totalUser = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearchUser() {\r\n      this.searchUserForm.pageNumber = 1;\r\n      this.searchUserForm.pageSize = 9;\r\n      this.getUserDataList();\r\n    },\r\n    handleResetUser() {\r\n      this.$refs.searchUserForm.resetFields();\r\n      this.searchUserForm.pageNumber = 1;\r\n      this.searchUserForm.pageSize = 9;\r\n      this.$refs.dep.clearSelect();\r\n      this.searchUserForm.departmentId = \"\";\r\n      // 重新加载数据\r\n      this.getUserDataList();\r\n    },\r\n    setSelectUser(v) {\r\n      this.selectUsers = v;\r\n      // this.$emit(\"on-change\", this.selectUsers);\r\n    },\r\n    setSelectAllUser() {\r\n      let data = [];\r\n      this.userData.forEach(e => {\r\n        let u = {\r\n          id: e.id,\r\n          username: e.username\r\n        };\r\n        data.push(u);\r\n      });\r\n      this.selectUsers = data;\r\n      this.$emit(\"on-change\", data);\r\n    },\r\n    chooseUser(v) {\r\n      // 去重\r\n      let that = this;\r\n      let flag = true;\r\n      this.selectUsers.forEach(e => {\r\n        if (v.id == e.id) {\r\n          that.$Message.warning(\"已经添加过啦，请勿重复选择\");\r\n          flag = false;\r\n        }\r\n      });\r\n      if (flag) {\r\n        let u = {\r\n          id: v.id,\r\n          username: v.username\r\n        };\r\n        this.selectUsers.push(u);\r\n        this.$emit(\"on-change\", this.selectUsers);\r\n        this.$Message.success(`添加用户 ${v.username} 成功`);\r\n      }\r\n    },\r\n    clearSelectUser() {\r\n      this.selectUsers = [];\r\n      this.$emit(\"on-change\", this.selectUsers);\r\n    },\r\n    handleCancelUser(e, id) {\r\n      // 删除所选用户\r\n      let newArray = [];\r\n      this.selectUsers.forEach(e => {\r\n        if (id != e.id) {\r\n          newArray.push(e);\r\n        }\r\n      });\r\n      this.selectUsers = newArray;\r\n      this.$emit(\"on-change\", this.selectUsers);\r\n      this.$Message.success(\"删除所选用户成功\");\r\n    }\r\n  },\r\n  created() {\r\n    this.getDictDataType();\r\n    this.getUserDataList();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.clear {\r\n  font-size: 12px;\r\n  margin-left: 15px;\r\n  color: #40a9ff;\r\n  cursor: pointer;\r\n}\r\n.collapse {\r\n  font-size: 12px;\r\n  margin-top: 15px;\r\n  width: 500px;\r\n}\r\n.drawer-footer {\r\n  z-index: 10;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  border-top: 1px solid #e8e8e8;\r\n  padding: 10px 16px;\r\n  text-align: right;\r\n  background: #fff;\r\n}\r\n.select-count {\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  color: #40a9ff;\r\n}\r\n</style>\r\n\r\n"]}]}