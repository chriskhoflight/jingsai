{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\contentManage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\contentManage.vue","mtime":1564969515800},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\less-loader\\dist\\cjs.js","mtime":1564973047851},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n@import \"./contentManage.less\";\r\n",{"version":3,"sources":["contentManage.vue"],"names":[],"mappings":";AACA","file":"contentManage.vue","sourceRoot":"src/views/lsbusiness/publish","sourcesContent":["<style lang=\"less\">\r\n@import \"./contentManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          <!-- 搜索框表单 -->\r\n          <Row>\r\n            <Form\r\n              ref=\"searchForm\"\r\n              :model=\"searchForm\"\r\n              inline\r\n              :label-width=\"70\"\r\n              class=\"search-form\"\r\n            >\r\n              <Form-item label=\"标题\" prop=\"title\">\r\n                <Input\r\n                  type=\"text\"\r\n                  v-model.trim=\"searchForm.title\"\r\n                  clearable\r\n                  placeholder=\"请输入标题\"\r\n                  style=\"width: 200px\"\r\n                />\r\n              </Form-item>\r\n              <Form-item label=\"内容类别\" prop=\"contentType\">\r\n                <Select\r\n                  v-model.trim=\"searchForm.contentType\"\r\n                  placeholder=\"请选择\"\r\n                  clearable\r\n                  style=\"width: 200px\"\r\n                >\r\n                  <Option\r\n                    v-for=\"(item, i) in dictContentType\"\r\n                    :key=\"i\"\r\n                    :value=\"item.value\"\r\n                  >{{item.title}}</Option>\r\n                </Select>\r\n              </Form-item>\r\n              <span v-if=\"drop\">\r\n                <br />\r\n                <Form-item label=\"作者\" prop=\"author\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    v-model.trim=\"searchForm.author\"\r\n                    clearable\r\n                    placeholder=\"请输入作者\"\r\n                    style=\"width: 200px\"\r\n                  />\r\n                </Form-item>\r\n                <Form-item label=\"发布时间\">\r\n                  <DatePicker\r\n                    v-model=\"selectDate\"\r\n                    type=\"daterange\"\r\n                    format=\"yyyy-MM-dd\"\r\n                    clearable\r\n                    @on-change=\"selectDateRange\"\r\n                    placeholder=\"选择发布起始时间\"\r\n                    style=\"width: 200px\"\r\n                  ></DatePicker>\r\n                </Form-item>\r\n                <br />\r\n                <Form-item prop=\"isPublication\" label=\"已发布\">\r\n                  <Select\r\n                    v-model=\"searchForm.isPublication\"\r\n                    placeholder=\"请选择\"\r\n                    clearable\r\n                    style=\"width: 100px\"\r\n                  >\r\n                    <Option :value=\"0\">否</Option>\r\n                    <Option :value=\"1\">是</Option>\r\n                  </Select>\r\n                </Form-item>\r\n                <Form-item prop=\"isTop\" label=\"已置顶\">\r\n                  <Select\r\n                    v-model=\"searchForm.isTop\"\r\n                    placeholder=\"请选择\"\r\n                    clearable\r\n                    style=\"width: 100px\"\r\n                  >\r\n                    <Option :value=\"0\">否</Option>\r\n                    <Option :value=\"1\">是</Option>\r\n                  </Select>\r\n                </Form-item>\r\n              </span>\r\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n                <Button @click=\"handleReset\">重置</Button>\r\n                <!-- 展开折叠其它搜索条件 -->\r\n                <a class=\"drop-down\" @click=\"dropDown\">\r\n                  {{dropDownContent}}\r\n                  <Icon :type=\"dropDownIcon\"></Icon>\r\n                </a>\r\n              </Form-item>\r\n            </Form>\r\n          </Row>\r\n\r\n          <!-- 操作 -->\r\n          <Row class=\"operation\">\r\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\">发布内容</Button>\r\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Alert show-icon>\r\n              已选择\r\n              <span class=\"select-count\">{{selectCount}}</span> 项\r\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n            </Alert>\r\n          </Row>\r\n\r\n          <!-- 内容表格 :columns-表头，:data-表内数据-->\r\n          <Row>\r\n            <Table\r\n              :loading=\"loading\"\r\n              border\r\n              :columns=\"columns\"\r\n              :data=\"data\"\r\n              sortable=\"custom\"\r\n              @on-sort-change=\"changeSort\"\r\n              @on-selection-change=\"showSelect\"\r\n              ref=\"table\"\r\n            ></Table>\r\n          </Row>\r\n\r\n          <!-- 分页 -->\r\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n            <Page\r\n              :current=\"searchForm.pageNumber\"\r\n              :total=\"total\"\r\n              :page-size=\"searchForm.pageSize\"\r\n              @on-change=\"changePage\"\r\n              @on-page-size-change=\"changePageSize\"\r\n              :page-size-opts=\"[10,20,50]\"\r\n              size=\"small\"\r\n              show-total\r\n              show-elevator\r\n              show-sizer\r\n            ></Page>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getWechatContentList,\r\n  // 批量删除\r\n  deleteContent,\r\n} from \"@/api/publishContent\";\r\nimport {\r\n  getDictDataByType\r\n} from \"@/api/index\";\r\n// import expandRow from \"./expand.vue\";\r\nimport \"./see\";\r\nimport Publish from \"./publish.vue\";\r\n// 动态路由\r\nimport { otherRouter } from \"@/router/router\";\r\nexport default {\r\n  name: \"contentManage\",\r\n  components: {\r\n    // expandRow,\r\n  },\r\n  data() {\r\n    return {\r\n      // 返回内容列表重载数据\r\n      // 表格数据加载中\r\n      loading: true,\r\n      // 折叠搜索表单\r\n      drop: false,\r\n      dropDownContent: \"展开\",\r\n      dropDownIcon: \"ios-arrow-down\",\r\n      selectCount: 0,\r\n      // 保存表格中复选框被选中的记录\r\n      selectList: [],\r\n      // 搜索表单\r\n      searchForm: {\r\n        //WechatContetn\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublicatin: \"\",\r\n        isTop: \"\",\r\n        seoDescription: \"\",\r\n        seoKeywords: \"\",\r\n        seoTitle: \"\",\r\n        introductionImg: \"\",\r\n        content: \"\",\r\n        url: \"\",\r\n        contentType: \"\",\r\n        // PageVO\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n        sort: \"createTime\",\r\n        order: \"desc\",\r\n        // searchVO=selectDate\r\n        startDate: \"\",\r\n        endDate: \"\"\r\n      },\r\n      selectDate: null,\r\n      submitLoading: false,\r\n      // 内容表格\r\n      columns: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        // 详情箭头\r\n        // {\r\n        //   type: \"expand\",\r\n        //   width: 50,\r\n        //   fixed: \"left\",\r\n        //   render: (h, params) => {\r\n        //     return h(expandRow, {\r\n        //       props: {\r\n        //         row: params.row\r\n        //       }\r\n        //     });\r\n        //   }\r\n        // },\r\n        // 行号\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"标题\",\r\n          key: \"title\",\r\n          minWidth: 100,\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"作者\",\r\n          key: \"author\",\r\n          width: 120\r\n        },\r\n        {\r\n          title: \"发布时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          sortType: \"desc\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"内容类别\",\r\n          key: \"contentType\",\r\n          width: 120,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictContentType.forEach(e => {\r\n              if (e.value == params.row.contentType) {\r\n                re = e.title;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"已发布\",\r\n          width: 100,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (1 == params.row.isPublication) {\r\n              re = \"是\";\r\n            }\r\n            if (0 == params.row.isPublication) {\r\n              re = \"否\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"已置顶\",\r\n          key: \"isTop\",\r\n          width: 100,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (1 == params.row.isTop) {\r\n              re = \"是\";\r\n            }\r\n            if (0 == params.row.isTop) {\r\n              re = \"否\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 200,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    size: \"small\",\r\n                    type:\"info\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.see(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"查看\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    size: \"small\",\r\n                    type:\"error\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.deleteOneContent(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      // 保存内容表数据\r\n      data: [],\r\n      total: 0,\r\n      // 内容类别\r\n      dictContentType: []\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getContentList();\r\n      this.getDictContentTypeData();\r\n    },\r\n    getDictContentTypeData() {\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"contentType\").then(res => {\r\n        if (res.success) {\r\n          this.dictContentType = res.result;\r\n        }\r\n      });\r\n    },\r\n    // 展开按钮用户事件\r\n    dropDown() {\r\n      if (this.drop) {\r\n        this.dropDownContent = \"展开\";\r\n        this.dropDownIcon = \"ios-arrow-down\";\r\n      } else {\r\n        this.dropDownContent = \"收起\";\r\n        this.dropDownIcon = \"ios-arrow-up\";\r\n      }\r\n      this.drop = !this.drop;\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getContentList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getContentList();\r\n    },\r\n    // 选择发布起始时间\r\n    selectDateRange(v) {\r\n      if (v) {\r\n        this.searchForm.startDate = v[0];\r\n        this.searchForm.endDate = v[1];\r\n      }\r\n    },\r\n    // 发送http请求，多条件搜索用户列表\r\n    getContentList() {\r\n      this.loading = true;\r\n      getWechatContentList(this.searchForm).then(res => {\r\n        this.loading = false;\r\n        if (res.success) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    // 列表搜索\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getContentList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.selectDate = null;\r\n      this.searchForm.startDate = \"\";\r\n      this.searchForm.endDate = \"\";\r\n      // 重新加载数据\r\n      this.getContentList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getContentList();\r\n    },\r\n    // 复选框点击事件\r\n    showSelect(e) {\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    // 批量删除\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          deleteContent(ids).then(res => {\r\n            if (res.success) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.clearSelectAll();\r\n              this.getContentList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    deleteOneContent(e) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        onOk: () => {\r\n          if(this.data.length===1&&this.searchForm.pageNumber>=2){\r\n            this.searchForm.pageNumber-=1\r\n          }\r\n          deleteContent(e.id).then(res => {\r\n            if (res.success) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.getContentList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    add() {\r\n      this.$router.push({ name: \"publishContent\" });\r\n    },\r\n    // 跳转到编辑页\r\n    edit(v) {\r\n      this.$router.push({name: \"editContent\", params: {id: v.id}});\r\n    },\r\n    // 跳转到查看页\r\n    see(v) {\r\n      this.$router.push({ name: \"seeContent\", params: { id: v.id } });\r\n    }\r\n  },\r\n  // watch: {\r\n  //   // 如果路由有变化，会再次执行该方法\r\n  //   '$route.path'(toC,fromC){\r\n  //       console.log(\"newVal is :\"+toC)\r\n  //       if(toC=='seeContent' && fromC=='contentManage'){\r\n  //           this.init();\r\n  //           console.log(\"执行\")\r\n  //       }\r\n\r\n  //   }\r\n  //     },\r\n  watch: {\r\n    \"$route.name\"(to, from) {\r\n      if (to==='contentManage') {\r\n        this.init();\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.init();\r\n  }\r\n};\r\n</script>"]}]}