{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\publish.vue","mtime":1568024242632},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  getContentTypeListData,\r\n  // 批量删除\r\n  saveContent\r\n} from \"@/api/publishContent\";\r\nimport { getDictDataByType } from \"@/api/index\";\r\nimport uploadPicInput from \"@/views/components/custom/upload-pic-input\";\r\nimport VueUeditorWrap from \"vue-ueditor-wrap\";\r\nlet base = process.env.VUE_APP_BASE_API;\r\nlet URL = process.env.NODE_ENV === \"production\" ? \"/rcms-pc-web/\" : \"/\";\r\nexport default {\r\n  name: \"publishContent\",\r\n  components: {\r\n    VueUeditorWrap,\r\n    uploadPicInput\r\n  },\r\n  data() {\r\n    return {\r\n      validModal: false,\r\n      // 表单验证\r\n      ruleValidate: {\r\n        title: [{ required: true, message: \"标题不能为空\", trigger: \"blur\" }],\r\n        author: [{ required: true, message: \"作者不能为空\", trigger: \"blur\" }],\r\n        contentType: [\r\n          { required: true, message: \"内容类别不能为空\", trigger: \"blur\" }\r\n        ],\r\n        seoDescription: [\r\n          { required: true, message: \"摘要不能为空\", trigger: \"blur\" }\r\n        ],\r\n        content: [{ required: true, message: \"正文不能为空\", trigger: \"blur\" }]\r\n      },\r\n      // 内容表单\r\n      contentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: 0,\r\n        isTop: 0,\r\n        seoDescription: \"\",\r\n        seoKeywords: \"\",\r\n        seoTitle: \"\",\r\n        content: \"\",\r\n        url: \"\",\r\n        contentType: \"\",\r\n        introductionImg: \"\",\r\n      },\r\n      // 发布内容类别\r\n      dictContentType: [],\r\n      // 发布按钮加载进度\r\n      submitLoading: false,\r\n      myConfig: {\r\n        //   如果需要上传功能,找后端小伙伴要服务器接口地址\r\n        serverUrl: base + \"/content/uploadToQiniu\",\r\n        // 你的UEditor资源存放的路径,相对于打包后的index.html\r\n        // UEDITOR_HOME_URL: \"/rcms-pc-web/ueditor/\",\r\n        UEDITOR_HOME_URL: URL + \"ueditor/\",\r\n        // 编辑器不自动被内容撑高\r\n        autoHeightEnabled: false,\r\n        // 工具栏是否可以浮动\r\n        autoFloatEnabled: false,\r\n        // 初始容器高度\r\n        initialFrameHeight: 450,\r\n        // 初始容器宽度\r\n        initialFrameWidth: \"100%\",\r\n        // 启动自动保存\r\n        enableAutoSave: true\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleUpload(v) {\r\n      this.contentForm.introductionImg = v;\r\n    },\r\n    init() {\r\n      this.getDictContenTypeData();\r\n    },\r\n    // 重置按钮\r\n    handleReset() {\r\n      this.$refs.contentForm.resetFields();\r\n      this.$Message.success(\"内容已重置\");\r\n    },\r\n    // 获取发布内容类别字典数据\r\n    getDictContenTypeData() {\r\n      getDictDataByType(\"contentType\").then(res => {\r\n        if (res.success === true) {\r\n          this.dictContentType = res.result;\r\n        }\r\n      });\r\n    },\r\n    back() {\r\n      window.history.back();\r\n    },\r\n    submitContent() {\r\n      this.$refs.contentForm.validate(valid => {\r\n        if (valid) {\r\n          if (\r\n            this.contentForm.title == \"\" ||\r\n            this.contentForm.title == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.author == \"\" ||\r\n            this.contentForm.author == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.contentType == \"\" ||\r\n            this.contentForm.contentType == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.content == \"\" ||\r\n            this.contentForm.content == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          this.submitLoading = true;\r\n          this.contentForm.isPublication = Number(\r\n            this.contentForm.isPublication\r\n          );\r\n          this.contentForm.isTop = Number(this.contentForm.isTop);\r\n          saveContent(this.contentForm).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.$refs.contentForm.resetFields();\r\n              this.$router.push({ name: \"contentManage\" });\r\n            }\r\n          });\r\n        } else {\r\n          this.validModal = true;\r\n        }\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    // 如果路由有变化，会再次执行该方法\r\n    // $route: \"init\"\r\n    \"$route.name\"(toC, fromC) {\r\n      if (fromC === \"contentManage\" && toC === \"publishContent\") {\r\n        // this.fetchData();\r\n        // this.getDictContenTypeData();\r\n        this.init();\r\n        // console.log(\"发布页URL:\"+URL);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n    // console.log(\"URL:\"+URL)\r\n  }\r\n};\r\n",null]}