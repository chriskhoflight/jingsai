{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\nav-menu\\navMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\nav-menu\\navMenu.vue","mtime":1564969187189},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"navMenu\",\r\n  data() {\r\n    return {\r\n      singleOpenName: []\r\n    };\r\n  },\r\n  props: {\r\n    menuList: Array,\r\n    iconSize: Number,\r\n    menuTheme: {\r\n      type: String,\r\n      default: \"dark\"\r\n    }\r\n  },\r\n  methods: {\r\n    changeMenu(name) {\r\n      this.$router.push({\r\n          name: name\r\n      });\r\n      this.$emit('on-change', name);\r\n    },\r\n    // handleSelect(name) {\r\n    //     console.log(name);\r\n    //         console.log(this.$router);\r\n    //   this.$emit(\"on-select\", name);\r\n    // },\r\n    itemTitle(item) {\r\n      if (typeof item.title === \"object\") {\r\n        return this.$t(item.title.i18n);\r\n      } else {\r\n        return item.title;\r\n      }\r\n    },\r\n    getOpenedNamesByActiveName(name) {\r\n      return this.$route.matched\r\n        .map(item => item.name)\r\n        .filter(item => item !== name);\r\n    }\r\n  },\r\n  updated() {\r\n    this.$nextTick(() => {\r\n      if (this.$refs.navMenu) {\r\n        this.$refs.navMenu.updateOpened();\r\n      }\r\n    });\r\n  },\r\n  watch: {\r\n    // 监听路由变化\r\n    $route(to, from) {\r\n      this.singleOpenName = [this.$route.matched[0].name];\r\n    }\r\n  },\r\n  mounted() {\r\n    //console.log(this.menuList);\r\n    this.singleOpenName = [this.$route.matched[0].name];\r\n  }\r\n};\r\n",{"version":3,"sources":["navMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"navMenu.vue","sourceRoot":"src/views/components/nav-menu","sourcesContent":["<style lang=\"less\">\r\n</style>\r\n<template>\r\n  <Menu  ref=\"navMenu\"  mode=\"horizontal\"   :active-name=\"$route.name\" :theme=\"menuTheme\"   @on-select=\"changeMenu\">\r\n    <template v-for=\"item in menuList\">\r\n        <!--主键是Main时，布局为左右布局，导航只显示父级，隐藏子级。-->\r\n        <template v-if=\"item.hideChild\">\r\n            <MenuItem :name=\"item.name\" :key=\"'menuitem' + item.name\">\r\n              <Icon :type=\"item.icon || item.icon\" :size=\"iconSize\" :key=\"'menuicon' + item.name\"></Icon>\r\n              <span  :key=\"'title' + item.name\">{{ itemTitle(item) }}</span>\r\n          </MenuItem>\r\n        </template> \r\n        <template v-else>\r\n          <MenuItem v-if=\"item.children.length<=1\" :name=\"item.children[0].name\" :key=\"'menuitem' + item.name\">\r\n              <Icon :type=\"item.children[0].icon || item.icon\" :size=\"iconSize\" :key=\"'menuicon' + item.name\"></Icon>\r\n              <span  :key=\"'title' + item.name\">{{ itemTitle(item.children[0]) }}</span>\r\n          </MenuItem>\r\n\r\n          <Submenu v-if=\"item.children.length > 1\" :name=\"item.name\" :key=\"item.name\">\r\n              <template slot=\"title\">\r\n                  <Icon :type=\"item.icon\" :size=\"iconSize\"></Icon>\r\n                  <span >{{ itemTitle(item) }}</span>\r\n              </template>\r\n              <template v-for=\"child in item.children\">\r\n                  <MenuItem :name=\"child.name\" :key=\"'menuitem' + child.name\" v-if=\"!child.hidden\">\r\n                      <Icon :type=\"child.icon\" :size=\"iconSize\" :key=\"'icon' + child.name\"></Icon>\r\n                      <span  :key=\"'title' + child.name\">{{ itemTitle(child) }}</span>\r\n                  </MenuItem>\r\n              </template>\r\n          </Submenu>\r\n        </template>\r\n      </template>\r\n  </Menu>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"navMenu\",\r\n  data() {\r\n    return {\r\n      singleOpenName: []\r\n    };\r\n  },\r\n  props: {\r\n    menuList: Array,\r\n    iconSize: Number,\r\n    menuTheme: {\r\n      type: String,\r\n      default: \"dark\"\r\n    }\r\n  },\r\n  methods: {\r\n    changeMenu(name) {\r\n      this.$router.push({\r\n          name: name\r\n      });\r\n      this.$emit('on-change', name);\r\n    },\r\n    // handleSelect(name) {\r\n    //     console.log(name);\r\n    //         console.log(this.$router);\r\n    //   this.$emit(\"on-select\", name);\r\n    // },\r\n    itemTitle(item) {\r\n      if (typeof item.title === \"object\") {\r\n        return this.$t(item.title.i18n);\r\n      } else {\r\n        return item.title;\r\n      }\r\n    },\r\n    getOpenedNamesByActiveName(name) {\r\n      return this.$route.matched\r\n        .map(item => item.name)\r\n        .filter(item => item !== name);\r\n    }\r\n  },\r\n  updated() {\r\n    this.$nextTick(() => {\r\n      if (this.$refs.navMenu) {\r\n        this.$refs.navMenu.updateOpened();\r\n      }\r\n    });\r\n  },\r\n  watch: {\r\n    // 监听路由变化\r\n    $route(to, from) {\r\n      this.singleOpenName = [this.$route.matched[0].name];\r\n    }\r\n  },\r\n  mounted() {\r\n    //console.log(this.menuList);\r\n    this.singleOpenName = [this.$route.matched[0].name];\r\n  }\r\n};\r\n</script>\r\n"]}]}