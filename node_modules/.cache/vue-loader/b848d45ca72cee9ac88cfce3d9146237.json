{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\sys\\dict-manage\\dictManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\sys\\dict-manage\\dictManage.vue","mtime":1564969187221},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  getAllDictList,\r\n  addDict,\r\n  editDict,\r\n  deleteDict,\r\n  searchDict,\r\n  getAllDictDataList,\r\n  addDictData,\r\n  editDictData,\r\n  deleteData\r\n} from \"@/api/index\";\r\nimport circleLoading from \"@/views/components/custom/circle-loading.vue\";\r\nexport default {\r\n  name: \"dic-manage\",\r\n  components: {\r\n    circleLoading\r\n  },\r\n  data() {\r\n    return {\r\n      treeLoading: false, // 树加载状态\r\n      maxHeight: \"500px\",\r\n      loading: false, // 表格加载状态\r\n      editTitle: \"\", // 编辑节点名称\r\n      searchKey: \"\", // 搜索树\r\n      expand: true,\r\n      span: 18,\r\n      expandIcon: \"ios-arrow-back\",\r\n      selectNode: {},\r\n      treeData: [], // 树数据\r\n      operationLoading: false, // 操作加载状态\r\n      selectCount: 0, // 多选计数\r\n      selectList: [], // 多选数据\r\n      searchForm: {\r\n        // 搜索框对应data对象\r\n        name: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 10, // 页面大小\r\n        sort: \"sortOrder\", // 默认排序字段\r\n        order: \"asc\" // 默认排序方式\r\n      },\r\n      modalType: 0, // 添加或编辑标识\r\n      modalVisible: false, // 添加或编辑显示\r\n      dictModalVisible: false,\r\n      dictModalTitle: \"\",\r\n      modalTitle: \"\", // 添加或编辑标题\r\n      dictForm: {\r\n        title: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        sortOrder: 0\r\n      },\r\n      form: {\r\n        // 添加或编辑表单对象初始化数据\r\n        title: \"\",\r\n        value: \"\",\r\n        status: 0,\r\n        description: \"\",\r\n        sortOrder: 0\r\n      },\r\n      dictFormValidate: {\r\n        // 表单验证规则\r\n        title: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\r\n        type: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\r\n      },\r\n      formValidate: {\r\n        // 表单验证规则\r\n        title: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\r\n        value: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\r\n      },\r\n      columns: [\r\n        // 表头\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"名称\",\r\n          key: \"title\",\r\n          minWidth: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"数据值\",\r\n          key: \"value\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          key: \"description\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"排序值\",\r\n          key: \"sortOrder\",\r\n          width: 100,\r\n          sortable: true,\r\n          sortType: \"asc\"\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 130,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"green\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"red\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          width: 250,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 160,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      submitLoading: false, // 添加或编辑提交状态\r\n      data: [], //表单数据\r\n      total: 0 // 表单数据总数\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      // 获取树数据\r\n      this.getAllDict();\r\n      // 获取表单数据\r\n      this.getDataList();\r\n    },\r\n    getAllDict() {\r\n      this.treeLoading = true;\r\n      getAllDictList().then(res => {\r\n        this.treeLoading = false;\r\n        if (res.success === true) {\r\n          this.treeData = res.result;\r\n        }\r\n      });\r\n    },\r\n    search() {\r\n      // 搜索树\r\n      if (this.searchKey) {\r\n        this.treeLoading = true;\r\n        searchDict({ key: this.searchKey }).then(res => {\r\n          this.treeLoading = false;\r\n          if (res.success === true) {\r\n            this.treeData = res.result;\r\n          }\r\n        });\r\n      } else {\r\n        // 为空重新加载\r\n        this.getAllDict();\r\n      }\r\n    },\r\n    selectTree(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.selectNode = data;\r\n        this.dictForm = data;\r\n        this.editTitle = data.title + \"(\" + data.type + \")\";\r\n        // 重新加载表\r\n        this.searchForm.pageNumber = 1;\r\n        this.searchForm.pageSize = 10;\r\n        this.getDataList();\r\n      } else {\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      let data = this.$refs.tree.getSelectedNodes()[0];\r\n      if (data) {\r\n        data.selected = false;\r\n      }\r\n      // 取消选择后获取全部数据\r\n      this.selectNode = {};\r\n      this.editTitle = \"\";\r\n      this.getDataList();\r\n    },\r\n    changeSelect(v) {\r\n      this.selectCount = v.length;\r\n      this.selectList = v;\r\n    },\r\n    changeExpand() {\r\n      this.expand = !this.expand;\r\n      if (this.expand) {\r\n        this.expandIcon = \"ios-arrow-back\";\r\n        this.span = 18;\r\n      } else {\r\n        this.expandIcon = \"ios-arrow-forward\";\r\n        this.span = 23;\r\n      }\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getDataList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getDataList();\r\n    },\r\n    getDataList() {\r\n      this.loading = true;\r\n      if (this.selectNode.id) {\r\n        this.searchForm.dictId = this.selectNode.id;\r\n      } else {\r\n        delete this.searchForm.dictId;\r\n      }\r\n      if (!this.searchForm.status) {\r\n        this.searchForm.status = \"\";\r\n      }\r\n      getAllDictDataList(this.searchForm).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getDataList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      // 重新加载数据\r\n      this.getDataList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getDataList();\r\n    },\r\n    showSelect(e) {\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    refreshDict() {\r\n      this.getAllDict();\r\n      this.selectNode = {};\r\n      this.editTitle = \"\";\r\n      this.getDataList();\r\n    },\r\n    handleDropdown(name) {\r\n      if (name == \"editDcit\") {\r\n        if (!this.selectNode.id) {\r\n          this.$Message.warning(\"您还未选择要编辑的字典\");\r\n          return;\r\n        }\r\n        this.editDcit();\r\n      } else if (name == \"delDcit\") {\r\n        this.delDcit();\r\n      } else if (name == \"refreshDcit\") {\r\n        this.refreshDict();\r\n      }\r\n    },\r\n    addDcit() {\r\n      this.modalType = 0;\r\n      this.dictModalTitle = \"添加字典\";\r\n      this.$refs.dictForm.resetFields();\r\n      this.dictModalVisible = true;\r\n    },\r\n    editDcit() {\r\n      this.modalType = 1;\r\n      this.dictModalTitle = \"编辑字典\";\r\n      this.dictModalVisible = true;\r\n    },\r\n    delDcit() {\r\n      if (!this.selectNode.id) {\r\n        this.$Message.warning(\"您还未选择要删除的字典\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        loading: true,\r\n        content: \"您确认要删除 \" + this.selectNode.title + \" ?\",\r\n        onOk: () => {\r\n          // 删除\r\n          deleteDict(this.selectNode.id).then(res => {\r\n            this.$Modal.remove();\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.refreshDict();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    add() {\r\n      if (!this.selectNode.id) {\r\n        this.$Message.warning(\"请先选择一个字典类别\");\r\n        return;\r\n      }\r\n      this.modalType = 0;\r\n      this.modalTitle = \"添加字典 \" + this.editTitle + \" 的数据\";\r\n      this.$refs.form.resetFields();\r\n      this.modalVisible = true;\r\n    },\r\n    edit(v) {\r\n      this.modalType = 1;\r\n      this.modalTitle = \"编辑字典 \" + this.editTitle + \" 的数据\";\r\n      this.$refs.form.resetFields();\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let data = JSON.parse(str);\r\n      this.form = data;\r\n      this.modalVisible = true;\r\n    },\r\n    handelSubmitDict() {\r\n      this.$refs.dictForm.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          if (this.modalType === 0) {\r\n            // 添加 避免编辑后传入id等数据 记得删除\r\n            delete this.dictForm.id;\r\n            addDict(this.dictForm).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getAllDict();\r\n                this.dictModalVisible = false;\r\n              }\r\n            });\r\n          } else if (this.modalType === 1) {\r\n            // 编辑\r\n            editDict(this.dictForm).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getAllDict();\r\n                this.dictModalVisible = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    handelSubmit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          if (this.modalType === 0) {\r\n            // 添加 避免编辑后传入id等数据 记得删除\r\n            delete this.form.id;\r\n            this.form.dictId = this.selectNode.id;\r\n            addDictData(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getDataList();\r\n                this.modalVisible = false;\r\n              }\r\n            });\r\n          } else if (this.modalType === 1) {\r\n            // 编辑\r\n            editDictData(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getDataList();\r\n                this.modalVisible = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除 \" + v.title + \" ?\",\r\n        onOk: () => {\r\n          // 删除\r\n          this.operationLoading = true;\r\n          deleteData(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          // 批量删除\r\n          this.operationLoading = true;\r\n          deleteData(ids).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.clearSelectAll();\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    // 计算高度\r\n    let height = document.documentElement.clientHeight;\r\n    this.maxHeight = Number(height-287) + \"px\";\r\n    this.init();\r\n  }\r\n};\r\n",null]}