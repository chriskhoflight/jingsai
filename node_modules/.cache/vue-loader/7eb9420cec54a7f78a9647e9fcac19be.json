{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\communityInfo\\estateInfo-manage\\estateInfoManage.vue?vue&type=style&index=0&id=3760f270&lang=less&scoped=true&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\communityInfo\\estateInfo-manage\\estateInfoManage.vue","mtime":1565618520437},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\less-loader\\dist\\cjs.js","mtime":1564973047851},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.map {\n  width: 100%;\n  height: 100%;\n  font-size: 14px;\n  #map-core {\n    width: 100%;\n    height: 90%;\n  }\n  .search {\n    display: flex;\n    margin-top: 10px;\n    height: 40px;\n    #r-result {\n      display: flex;\n      height: 20px;\n      line-height: 20px;\n      p {\n        height: 20px;\n        padding-right: 10px;\n      }\n      input {\n        width: 180px;\n        height: 20px;\n      }\n    }\n    .lng-lat {\n      display: flex;\n      .item {\n        display: flex;\n        padding-left: 10px;\n        height: 20px;\n        line-height: 20px;\n        p {\n          height: 20px;\n          padding-right: 10px;\n        }\n        input {\n          width: 100px;\n          height: 20px;\n        }\n        button {\n          color: #fff;\n          height: 28px;\n          width: 60px;\n          background: #40B0FF;\n          border: 1px solid #40B0FF;\n          border-radius: 2px;\n          &:hover {\n            background: #10B0FF;\n            border: 1px solid #10B0FF;\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["estateInfoManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"estateInfoManage.vue","sourceRoot":"src/views/communityInfo/estateInfo-manage","sourcesContent":["<template>\r\n  <div class=\"map\" v-show=\"visible\">\r\n    <div id=\"map-core\"></div>\r\n    <div class=\"search\">\r\n      <div id=\"r-result\">\r\n        <p>搜索定位:</p>\r\n        <input type=\"text\" id=\"suggestId\" value=\"百度\"/>\r\n      </div>\r\n      <div class=\"lng-lat\">\r\n        <div class=\"item\">\r\n          <p>当前经度:</p>\r\n          <input type=\"text\" v-model=\"location.lng\"/>\r\n        </div>\r\n        <div class=\"item\">\r\n          <p>当前纬度:</p>\r\n          <input type=\"text\" v-model=\"location.lat\"/>\r\n        </div>\r\n        <div class=\"item btn\"><button @click=\"selectLocation\">确定</button></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport BMap from 'BMap'\r\nexport default {\r\n  data () {\r\n    return {\r\n      location: {\r\n        lng: '',\r\n        lat: ''\r\n      },\r\n      map: {},\r\n      ac: {}\r\n    }\r\n  },\r\n  mounted () {\r\n    this.setMap()\r\n    this.setSearch()\r\n  },\r\n  methods: {\r\n    // 初始化地图\r\n    setMap () {\r\n      this.map = new BMap.Map('map-core')\r\n      this.map.centerAndZoom(new BMap.Point(113.275, 23.117), 10)\r\n      // 地图缩放控件\r\n      const topLeftControl = new BMap.ScaleControl({anchor: BMAP_ANCHOR_BOTTOM_LEFT})\r\n      // 城市选择控件\r\n      const cityListControl = new BMap.CityListControl({anchor: BMAP_ANCHOR_TOP_RIGHT})\r\n      // 比例尺控件\r\n      const topLeftNavigation = new BMap.NavigationControl()\r\n      this.map.addControl(topLeftControl)\r\n      this.map.addControl(topLeftNavigation)\r\n      this.map.addControl(cityListControl)\r\n      const _this = this\r\n      // 鼠标缩放\r\n      setTimeout(function () {\r\n        _this.map.setZoom(11)\r\n      }, 2000) // 2秒后放大到11级\r\n      this.map.enableScrollWheelZoom(true)\r\n      // 点击获取经纬度\r\n      this.map.addEventListener('click', function (e) {\r\n        _this.location.lng = parseFloat(e.point.lng).toFixed(3)\r\n        _this.location.lat = parseFloat(e.point.lat).toFixed(3)\r\n      })\r\n    },\r\n    // 根据经纬度绘制地图中的坐标点\r\n    drawLocation () {\r\n      if(this.location.lng !== \"\" && this.location.lat !== \"\"){\r\n        this.map.clearOverlays()\r\n        const new_point = new BMap.Point(this.location.lng, this.location.lat)\r\n        const marker = new BMap.Marker(new_point)\r\n        this.map.addOverlay(marker)\r\n        this.map.panTo(new_point) \r\n      }\r\n    },\r\n    // 搜索位置功能实现\r\n    setSearch () {\r\n      const _this = this\r\n      //建立一个自动完成的对象\r\n      this.ac = new BMap.Autocomplete({\"input\" : \"suggestId\", \"location\" : _this.map})\r\n      //鼠标放在下拉列表上的事件\r\n      this.ac.addEventListener(\"onhighlight\", function(e) {\r\n        let str = \"\"\r\n        let _value = e.fromitem.value\r\n        let value = \"\"\r\n        if (e.fromitem.index > -1) {\r\n          value = _value.province +  _value.city +  _value.district +  _value.street +  _value.business\r\n        }\r\n        value = \"\"\r\n        if (e.toitem.index > -1) {\r\n          _value = e.toitem.value\r\n          value = _value.province +  _value.city +  _value.district +  _value.street +  _value.business\r\n        }\r\n      })\r\n      let myValue\r\n      //鼠标点击下拉列表后的事件\r\n      this.ac.addEventListener(\"onconfirm\", function(e) {\r\n      let _value = e.item.value\r\n        myValue = _value.province +  _value.city +  _value.district +  _value.street +  _value.business\r\n        _this.setPlace(myValue)\r\n      });\r\n    },\r\n    setPlace (myValue) {\r\n      const _this = this\r\n      //清除地图上所有覆盖物\r\n      this.map.clearOverlays()\r\n      //智能搜索\r\n      this.local = new BMap.LocalSearch(_this.map, {\r\n        onSearchComplete: _this.onSearchComplete\r\n      });\r\n      this.local.search(myValue);\r\n    },\r\n    onSearchComplete () {\r\n      //获取第一个智能搜索的结果\r\n      let pp = this.local.getResults().getPoi(0).point\r\n      this.location.lng = parseFloat(pp.lng).toFixed(3)\r\n      this.location.lat = parseFloat(pp.lat).toFixed(3)\r\n      this.map.centerAndZoom(pp, 18)\r\n      //添加标注\r\n      this.map.addOverlay(new BMap.Marker(pp))\r\n    },\r\n    // 向父组件传递经纬度\r\n    selectLocation () {\r\n      this.$emit('selectLocation', this.location)\r\n    }\r\n  },\r\n  watch: {\r\n    'location': {\r\n      handler () {\r\n        this.drawLocation()\r\n      },\r\n      deep: true\r\n    },\r\n    visible () {\r\n      console.log('ddd')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .map {\r\n    width: 100%;\r\n    height: 100%;\r\n    font-size: 14px;\r\n    #map-core {\r\n      width: 100%;\r\n      height: 90%;\r\n    }\r\n    .search {\r\n      display: flex;\r\n      margin-top: 10px;\r\n      height: 40px;\r\n      #r-result {\r\n        display: flex;\r\n        height: 20px;\r\n        line-height: 20px;\r\n        p {\r\n          height: 20px;\r\n          padding-right: 10px;\r\n        }\r\n        input {\r\n          width: 180px;\r\n          height: 20px;\r\n        }\r\n      }\r\n      .lng-lat {\r\n        display: flex;\r\n        .item {\r\n          display: flex;\r\n          padding-left: 10px;\r\n          height: 20px;\r\n          line-height: 20px;\r\n          p {\r\n            height: 20px;\r\n            padding-right: 10px;\r\n          }\r\n          input {\r\n            width: 100px;\r\n            height: 20px;\r\n          }\r\n          button {\r\n            color: #fff;\r\n            height: 28px;\r\n            width: 60px;\r\n            background: #40B0FF;\r\n            border: 1px solid #40B0FF;\r\n            border-radius: 2px;\r\n            &:hover {\r\n              background: #10B0FF;\r\n              border: 1px solid #10B0FF;\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>"]}]}