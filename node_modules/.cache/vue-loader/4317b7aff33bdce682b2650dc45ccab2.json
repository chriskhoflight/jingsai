{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\publish.vue","mtime":1565086985111},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  getContentTypeListData,\r\n  // 批量删除\r\n  saveContent\r\n} from \"@/api/publishContent\";\r\nimport {\r\n  getDictDataByType\r\n} from \"@/api/index\";\r\n\r\nimport VueUeditorWrap from \"vue-ueditor-wrap\";\r\nlet base = process.env.VUE_APP_BASE_API;\r\nlet URL = process.env.NODE_ENV === 'production'\r\n  ? '/rcms-pc-web/'\r\n  : '/'\r\nexport default {\r\n  name: \"publishContent\",\r\n  components: {\r\n    VueUeditorWrap\r\n  },\r\n  data() {\r\n    return {\r\n      validModal: false,\r\n      // 表单验证\r\n      ruleValidate: {\r\n        title: [{ required: true, message: \"标题不能为空\", trigger: \"blur\" }],\r\n        author: [{ required: true, message: \"作者不能为空\", trigger: \"blur\" }],\r\n        contentType: [\r\n          { required: true, message: \"内容类别不能为空\", trigger: \"blur\" }\r\n        ],\r\n        seoDescription: [\r\n          { required: true, message: \"摘要不能为空\", trigger: \"blur\" }\r\n        ],\r\n        content: [{ required: true, message: \"正文不能为空\", trigger: \"blur\" }]\r\n      },\r\n      // 内容表单\r\n      contentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: 0,\r\n        isTop: 0,\r\n        seoDescription: \"\",\r\n        seoKeywords: \"\",\r\n        seoTitle: \"\",\r\n        introductionImg: \"\",\r\n        content: \"\",\r\n        url: \"\",\r\n        contentType: \"\"\r\n      },\r\n      // 发布内容类别\r\n      dictContentType: [],\r\n      // 发布按钮加载进度\r\n      submitLoading: false,\r\n      myConfig: {\r\n        //   如果需要上传功能,找后端小伙伴要服务器接口地址\r\n        //   serverUrl: this.$config.baseUrl + 'ueditor/ueditorConfig',\r\n        serverUrl: base+\"/content/uploadToQiniu\",\r\n        // serverUrl: 'http://35.201.165.105:8000/controller.php',\r\n        // 你的UEditor资源存放的路径,相对于打包后的index.html\r\n        // UEDITOR_HOME_URL: \"/rcms-pc-web/ueditor/\",\r\n        UEDITOR_HOME_URL: URL+\"ueditor/\",\r\n        // 编辑器不自动被内容撑高\r\n        autoHeightEnabled: false,\r\n        // 工具栏是否可以浮动\r\n        autoFloatEnabled: false,\r\n        // 初始容器高度\r\n        initialFrameHeight: 300,\r\n        // 初始容器宽度\r\n        initialFrameWidth: \"100%\",\r\n        // 启动自动保存\r\n        enableAutoSave: true\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getDictContenTypeData();\r\n    },\r\n    // 重置按钮\r\n    handleReset() {\r\n      this.$refs.contentForm.resetFields();\r\n      this.$Message.success(\"内容已重置\");\r\n    },\r\n    // 获取发布内容类别字典数据\r\n    getDictContenTypeData() {\r\n      getDictDataByType(\"contentType\").then(res => {\r\n        if (res.success === true) {\r\n          this.dictContentType = res.result;\r\n        }\r\n      });\r\n    },\r\n    back() {\r\n      window.history.back();\r\n    },\r\n    submitContent() {\r\n      this.$refs.contentForm.validate(valid => {\r\n        if (valid) {\r\n          if (\r\n            this.contentForm.title == \"\" ||\r\n            this.contentForm.title == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.author == \"\" ||\r\n            this.contentForm.author == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.contentType == \"\" ||\r\n            this.contentForm.contentType == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.content == \"\" ||\r\n            this.contentForm.content == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          this.submitLoading = true;\r\n          this.contentForm.isPublication = Number(\r\n            this.contentForm.isPublication\r\n          );\r\n          this.contentForm.isTop = Number(this.contentForm.isTop);\r\n          saveContent(this.contentForm).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.$refs.contentForm.resetFields();\r\n              this.$router.push({name: \"contentManage\"});\r\n            }\r\n          });\r\n        } else {\r\n          this.validModal = true;\r\n        }\r\n      });\r\n          \r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n",{"version":3,"sources":["publish.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"publish.vue","sourceRoot":"src/views/lsbusiness/publish","sourcesContent":["<template>\r\n  <Row>\r\n    <Col>\r\n      <Card>\r\n        <Row>\r\n          <Col>\r\n            <Button type=\"primary\" shape=\"circle\" icon=\"ios-arrow-back\" @click=\"back\">返回</Button>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Form ref=\"contentForm\" :label-width=\"70\" :model=\"contentForm\" :rules=\"ruleValidate\">\r\n            <Row>\r\n              <Col>\r\n                <!-- prop属性指向验单验证绑定数据里面的属性名 -->\r\n                <Form-item label=\"标题\" prop=\"title\">\r\n                  <Input\r\n                    v-model=\"contentForm.title\"\r\n                    type=\"text\"\r\n                    clearable\r\n                    placeholder=\"请输入文章标题\"\r\n                    style=\"width: 200px\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"作者\" prop=\"author\">\r\n                  <Input\r\n                    v-model=\"contentForm.author\"\r\n                    type=\"text\"\r\n                    clearable\r\n                    placeholder=\"请输入作者\"\r\n                    style=\"width: 200px\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"内容类别\" prop=\"contentType\">\r\n                  <Select\r\n                    v-model=\"contentForm.contentType\"\r\n                    placeholder=\"请选择\"\r\n                    clearable\r\n                    style=\"width: 200px\"\r\n                  >\r\n                    <Option\r\n                      v-for=\"(item, i) in dictContentType\"\r\n                      :key=\"i\"\r\n                      :value=\"item.value\"\r\n                    >{{item.title}}</Option>\r\n                  </Select>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item>\r\n                  <Checkbox v-model.number=\"contentForm.isPublication\">立即发布</Checkbox>\r\n                </Form-item>\r\n                <Form-item prop=\"isTop\">\r\n                  <Checkbox v-model.number=\"contentForm.isTop\">置顶内容</Checkbox>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"摘要\" prop=\"seoDescription\">\r\n                  <Input\r\n                    v-model=\"contentForm.seoDescription\"\r\n                    type=\"textarea\"\r\n                    :rows=\"4\"\r\n                    placeholder=\"请输入文章摘要\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"正文\" prop=\"content\">\r\n                  <vue-ueditor-wrap\r\n                    v-model=\"contentForm.content\"\r\n                    :config=\"myConfig\"\r\n                    style=\"z-index:0;\"\r\n                  ></vue-ueditor-wrap>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <Col>\r\n            <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitContent\">发布</Button>\r\n          </Col>\r\n          <Col offset=\"1\">\r\n            <Button type=\"primary\" @click=\"handleReset\">重置</Button>\r\n          </Col>\r\n        </Row>\r\n        <Modal v-model=\"validModal\" width=\"80%\">\r\n          <h2>不能为空白：“标题”、“作者”、“内容类别”、“摘要”、“内容”</h2>\r\n        </Modal>\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getContentTypeListData,\r\n  // 批量删除\r\n  saveContent\r\n} from \"@/api/publishContent\";\r\nimport {\r\n  getDictDataByType\r\n} from \"@/api/index\";\r\n\r\nimport VueUeditorWrap from \"vue-ueditor-wrap\";\r\nlet base = process.env.VUE_APP_BASE_API;\r\nlet URL = process.env.NODE_ENV === 'production'\r\n  ? '/rcms-pc-web/'\r\n  : '/'\r\nexport default {\r\n  name: \"publishContent\",\r\n  components: {\r\n    VueUeditorWrap\r\n  },\r\n  data() {\r\n    return {\r\n      validModal: false,\r\n      // 表单验证\r\n      ruleValidate: {\r\n        title: [{ required: true, message: \"标题不能为空\", trigger: \"blur\" }],\r\n        author: [{ required: true, message: \"作者不能为空\", trigger: \"blur\" }],\r\n        contentType: [\r\n          { required: true, message: \"内容类别不能为空\", trigger: \"blur\" }\r\n        ],\r\n        seoDescription: [\r\n          { required: true, message: \"摘要不能为空\", trigger: \"blur\" }\r\n        ],\r\n        content: [{ required: true, message: \"正文不能为空\", trigger: \"blur\" }]\r\n      },\r\n      // 内容表单\r\n      contentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: 0,\r\n        isTop: 0,\r\n        seoDescription: \"\",\r\n        seoKeywords: \"\",\r\n        seoTitle: \"\",\r\n        introductionImg: \"\",\r\n        content: \"\",\r\n        url: \"\",\r\n        contentType: \"\"\r\n      },\r\n      // 发布内容类别\r\n      dictContentType: [],\r\n      // 发布按钮加载进度\r\n      submitLoading: false,\r\n      myConfig: {\r\n        //   如果需要上传功能,找后端小伙伴要服务器接口地址\r\n        //   serverUrl: this.$config.baseUrl + 'ueditor/ueditorConfig',\r\n        serverUrl: base+\"/content/uploadToQiniu\",\r\n        // serverUrl: 'http://35.201.165.105:8000/controller.php',\r\n        // 你的UEditor资源存放的路径,相对于打包后的index.html\r\n        // UEDITOR_HOME_URL: \"/rcms-pc-web/ueditor/\",\r\n        UEDITOR_HOME_URL: URL+\"ueditor/\",\r\n        // 编辑器不自动被内容撑高\r\n        autoHeightEnabled: false,\r\n        // 工具栏是否可以浮动\r\n        autoFloatEnabled: false,\r\n        // 初始容器高度\r\n        initialFrameHeight: 300,\r\n        // 初始容器宽度\r\n        initialFrameWidth: \"100%\",\r\n        // 启动自动保存\r\n        enableAutoSave: true\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getDictContenTypeData();\r\n    },\r\n    // 重置按钮\r\n    handleReset() {\r\n      this.$refs.contentForm.resetFields();\r\n      this.$Message.success(\"内容已重置\");\r\n    },\r\n    // 获取发布内容类别字典数据\r\n    getDictContenTypeData() {\r\n      getDictDataByType(\"contentType\").then(res => {\r\n        if (res.success === true) {\r\n          this.dictContentType = res.result;\r\n        }\r\n      });\r\n    },\r\n    back() {\r\n      window.history.back();\r\n    },\r\n    submitContent() {\r\n      this.$refs.contentForm.validate(valid => {\r\n        if (valid) {\r\n          if (\r\n            this.contentForm.title == \"\" ||\r\n            this.contentForm.title == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.author == \"\" ||\r\n            this.contentForm.author == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.contentType == \"\" ||\r\n            this.contentForm.contentType == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            this.contentForm.content == \"\" ||\r\n            this.contentForm.content == undefined\r\n          ) {\r\n            return;\r\n          }\r\n          this.submitLoading = true;\r\n          this.contentForm.isPublication = Number(\r\n            this.contentForm.isPublication\r\n          );\r\n          this.contentForm.isTop = Number(this.contentForm.isTop);\r\n          saveContent(this.contentForm).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.$refs.contentForm.resetFields();\r\n              this.$router.push({name: \"contentManage\"});\r\n            }\r\n          });\r\n        } else {\r\n          this.validModal = true;\r\n        }\r\n      });\r\n          \r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n"]}]}