{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\wechat\\custom-menu\\customMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\wechat\\custom-menu\\customMenu.vue","mtime":1564969187252},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport {\r\n  getMenuTreeByTemplateId,\r\n  addMenuTemplateDetail,\r\n  editMenuTemplateDetail,\r\n  delMenuTemplateDetail\r\n} from \"@/api/wechat\";\r\n\r\nimport {\r\n  getDictDataByType\r\n} from \"@/api/index\";\r\nimport { debug } from 'util';\r\n\r\nexport default {\r\n  data() {\r\n    //类型验证\r\n    const validateType = (rule, value, callback) => {\r\n      var self = this;\r\n      //二级菜单,类型必须填\r\n      if(self.form.parentId != '0'){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请选择菜单类型'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    //url验证\r\n    const validateUrl = (rule, value, callback) => {\r\n      var self = this;\r\n      //类型为网页类型， url必须填\r\n      if( 'view' == self.form.type){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请输入网页链接'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    //menuKey验证\r\n    const validateMenuKey = (rule, value, callback) => {\r\n      var self = this;\r\n      //类型为点击， menuKey必须填\r\n      if( 'click' == self.form.type){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请输入菜单KEY值'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    //AppId验证\r\n    const validateAppId = (rule, value, callback) => {\r\n      var self = this;\r\n      //类型为小程序， menuKey必须填\r\n      if( 'miniprogram' == self.form.type){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请输入小程序AppId'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    //AppId验证\r\n    const validatePagePath = (rule, value, callback) => {\r\n      var self = this;\r\n      //类型为小程序， menuKey必须填\r\n      if( 'miniprogram' == self.form.type){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请输入小程序页面路径'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    \r\n\r\n    return {\r\n      menuTemplate: {\r\n        id: '',\r\n        name: ''\r\n      },\r\n      loading: false, // 树加载状态\r\n      maxHeight: \"500px\",\r\n      strict: true,\r\n      loadingEdit: false, // 编辑上级树加载状态\r\n      modalVisible: false, // 添加显示\r\n      selectList: [], // 多选数据\r\n      selectCount: 0, // 多选计数\r\n      showParent: false, // 显示上级标识\r\n      modalTitle: \"\", // 添加标题\r\n      editTitle: \"\", // 编辑菜单名称\r\n      searchKey: \"\", // 搜索树\r\n      form: {\r\n        templateId:\"\",\r\n        // 编辑对象初始化数据\r\n        id: \"\",\r\n        title: \"\",\r\n        parentId: \"\",\r\n        parenttitle: \"\",\r\n        type: \"\",\r\n        url: \"\",\r\n        menuKey: \"\",\r\n        appId: \"\",\r\n        pagePath: \"\",\r\n        sortOrder: 0,\r\n        status: 0\r\n      },\r\n      formAdd: {\r\n        // 添加对象初始化数据\r\n      },\r\n      \r\n      formValidate: {\r\n        // 表单验证规则//2、一级菜单最多4个汉字，二级菜单最多7个汉字，多出来的部分将会以“...”代替。\r\n        title: [\r\n          { required: true, message: \"菜单名称不能为空\", trigger: \"blur\" },\r\n          { type: 'string', max: 7, message: '菜单最多7个汉字', trigger: 'blur' }\r\n        ],\r\n        type: [\r\n          { validator: validateType, trigger: 'blur', trigger: 'change' }\r\n        ],\r\n        url: [\r\n          { validator: validateUrl, trigger: 'blur', trigger: 'change' }\r\n        ],\r\n        menuKey: [\r\n          { validator: validateMenuKey, trigger: 'blur', trigger: 'change' }\r\n        ],\r\n        appId: [\r\n          { validator: validateAppId, trigger: 'blur', trigger: 'change' }\r\n        ],\r\n        pagePath: [\r\n          { validator: validatePagePath, trigger: 'blur', trigger: 'change' }\r\n        ]\r\n\r\n      },\r\n      submitLoading: false,\r\n      data: [],\r\n      dataEdit: [],\r\n      //数字字段\r\n      dictAccountMenuType:[]\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      // 初始化菜单树\r\n      this.getParentList();\r\n      this.getDictAccountMenuTypeData();\r\n    },\r\n\r\n    //加载数字字典\r\n    getDictAccountMenuTypeData() {\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"wx_account_menu_type\").then(res => {\r\n        if (res.success) {\r\n          this.dictAccountMenuType = res.result;\r\n        }\r\n      });\r\n    },\r\n    //获取菜单树\r\n    getParentList() {\r\n      getMenuTreeByTemplateId(this.menuTemplate.id).then(res => {\r\n        if (res.success) {\r\n          this.data = res.result;\r\n        }\r\n      });\r\n    },\r\n     \r\n    loadData(item, callback) {\r\n    },\r\n    search() {\r\n      // 搜索树\r\n      if (this.searchKey) {\r\n        // 模拟请求\r\n        // this.loading = true;\r\n        // this.getRequest(\"搜索请求路径\", { title: this.searchKey }).then(res => {\r\n        //   this.loading = false;\r\n        //   if (res.success === true) {\r\n        //     this.data = res.result;\r\n        //   }\r\n        // });\r\n        // 模拟请求成功\r\n        this.data = [\r\n          {\r\n            title: \"这里需要请求后台接口\",\r\n            id: \"1\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级菜单\",\r\n            status: 0\r\n          },\r\n          {\r\n            title: \"所以这里是假数据\",\r\n            id: \"4\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级菜单\",\r\n            status: 0\r\n          },\r\n          {\r\n            title: \"我是被禁用的菜单\",\r\n            id: \"5\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级菜单\",\r\n            status: -1\r\n          }\r\n        ];\r\n      } else {\r\n        // 为空重新加载\r\n        this.getParentList();\r\n      }\r\n    },\r\n    //选择树事件\r\n    selectTree(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.form = data;\r\n        this.editTitle = data.title;\r\n      } else {\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    //编辑取消按钮\r\n    cancelEdit() {\r\n      let data = this.$refs.tree.getSelectedNodes()[0];\r\n      if (data) {\r\n        data.selected = false;\r\n      }\r\n      this.$refs.form.resetFields();\r\n      delete this.form.id;\r\n      this.editTitle = \"\";\r\n    },\r\n    //选择编辑\r\n    selectTreeEdit(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.form.parentId = data.id;\r\n        this.form.parentTitle = data.title;\r\n      }\r\n    },\r\n    //重置\r\n    handleReset() {\r\n      this.$refs.form.resetFields();\r\n      this.form.status = 0;\r\n    },\r\n    //编辑提交\r\n    submitEdit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          if (!this.form.id) {\r\n            this.$Message.warning(\"请先点击选择要修改的菜单\");\r\n            return;\r\n          }\r\n          this.submitLoading = true;\r\n          editMenuTemplateDetail(this.form).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(res.message);\r\n              this.init();\r\n              this.modalVisible = false;\r\n            }\r\n          });\r\n          this.submitLoading = false;\r\n        }\r\n      });\r\n    },\r\n    //新增提交\r\n    submitAdd() {\r\n      this.$refs.formAdd.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          addMenuTemplateDetail(this.formAdd).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(res.message);\r\n              this.init();\r\n              this.modalVisible = false;\r\n            }\r\n          });\r\n          this.submitLoading = false;\r\n        }\r\n      });\r\n    },\r\n    //新增\r\n    add() {\r\n      if (this.form.id == \"\" || this.form.id == null) {\r\n        this.$Message.warning(\"请先点击选择一个菜单\");\r\n        return;\r\n      }\r\n      if((this.form.parentId != \"\" && this.form.parentId != null ) && this.form.parentId != \"0\"){\r\n        this.$Message.warning(\"自定义菜单只支持到二级\");\r\n        return;\r\n      }\r\n\r\n      if(this.form.type != \"\" && this.form.type != null ){\r\n        this.$Message.warning(\"已选择菜单类型的不能包含二级菜单\");\r\n        return;\r\n      }\r\n\r\n      if(this.validChildCount()){\r\n        this.$Message.warning(\"每个一级菜单最多包含5个二级菜单\");\r\n        return;\r\n      }\r\n      this.modalTitle = \"添加子菜单\";\r\n      this.showParent = true;\r\n      this.formAdd = {\r\n        templateId: this.menuTemplate.id,\r\n        parentId: this.form.id,\r\n        sortOrder: 0,\r\n        status: 0\r\n      };\r\n      this.modalVisible = true;\r\n    },\r\n \r\n    \r\n    //新增根节点\r\n    addRoot() {\r\n      if(this.validRootCount()){\r\n        this.$Message.warning(\"自定义菜单最多包括3个一级菜单\");\r\n        return;\r\n      }\r\n      this.modalTitle = \"添加一级菜单\";\r\n      this.showParent = false;\r\n      this.formAdd = {\r\n        templateId: this.menuTemplate.id,\r\n        parentId: 0,\r\n        sortOrder: 0,\r\n        status: 0\r\n      };\r\n      this.modalVisible = true;\r\n    },\r\n    //验证一级菜单个数\r\n    //1、自定义菜单最多包括3个一级菜单，每个一级菜单最多包含5个二级菜单。\r\n    validRootCount(){\r\n      if(null !=this.data && this.data.length >= 3){\r\n        return true;\r\n      }\r\n    },\r\n    //验证二级菜单个数\r\n    //1、自定义菜单最多包括3个一级菜单，每个一级菜单最多包含5个二级菜单。\r\n    validChildCount(parentId){\r\n      if(null != this.form && this.form.children.length >= 5){\r\n         return true;\r\n      }\r\n    },\r\n\r\n\r\n    changeSelect(v) {\r\n      this.selectCount = v.length;\r\n      this.selectList = v;\r\n    },\r\n    //批量删除\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未勾选要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          \r\n          delMenuTemplateDetail(ids).then(res => {\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.selectList = [];\r\n              this.selectCount = 0;\r\n              this.cancelEdit();\r\n              this.init();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    // 计算高度\r\n    let height = document.documentElement.clientHeight;\r\n    this.maxHeight = Number(height-287) + \"px\";\r\n    this.menuTemplate.id = this.$route.query.id;\r\n    this.menuTemplate.name = this.$route.query.name;\r\n    this.init();\r\n  }\r\n};\r\n",{"version":3,"sources":["customMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"customMenu.vue","sourceRoot":"src/views/wechat/custom-menu","sourcesContent":["<style lang=\"less\">\r\n@import \"./customMenu.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Card>\r\n      <Row class=\"operation\">\r\n        <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加子菜单</Button>\r\n        <Button @click=\"addRoot\" icon=\"md-add\">添加一级菜单</Button>\r\n        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n        <Button @click=\"getParentList\" icon=\"md-refresh\">刷新</Button>\r\n        <i-switch v-model=\"strict\" size=\"large\" style=\"margin-left:5px\">\r\n          <span slot=\"open\">级联</span>\r\n          <span slot=\"close\">单选</span>\r\n        </i-switch>\r\n      </Row>\r\n      <Row type=\"flex\" justify=\"start\" class=\"code-row-bg\">\r\n        <Col span=\"6\">\r\n          <Alert show-icon>当前模版名称：{{menuTemplate.name}}</Alert>\r\n          <Alert show-icon>\r\n            当前选择编辑：\r\n            <span class=\"select-title\">{{editTitle}}</span>\r\n            <a class=\"select-clear\" v-if=\"form.id\" @click=\"cancelEdit\">取消选择</a>\r\n          </Alert>\r\n          <Input\r\n            v-model=\"searchKey\"\r\n            suffix=\"ios-search\"\r\n            @on-change=\"search\"\r\n            placeholder=\"输入菜单名搜索\"\r\n            clearable\r\n          />\r\n          <div class=\"tree-bar\" :style=\"{maxHeight: maxHeight}\">\r\n            <Tree\r\n              ref=\"tree\"\r\n              :data=\"data\"\r\n              :load-data=\"loadData\"\r\n              show-checkbox\r\n              @on-check-change=\"changeSelect\"\r\n              @on-select-change=\"selectTree\"\r\n              :check-strictly=\"!strict\"\r\n            ></Tree>\r\n          </div>\r\n          <Spin size=\"large\" fix v-if=\"loading\"></Spin>\r\n        </Col>\r\n        <Col span=\"9\">\r\n          <Form ref=\"form\" :model=\"form\" :label-width=\"100\" :rules=\"formValidate\">\r\n            <FormItem label=\"上级菜单\" prop=\"parenttitle\" v-if=\"form.parenttitle\">\r\n              <Input v-model=\"form.parenttitle\" readonly style=\"width:400px\"/>\r\n            </FormItem>\r\n            <FormItem label=\"菜单名称\" prop=\"title\">\r\n              <Input v-model=\"form.title\" style=\"width:400px\"/>\r\n            </FormItem>\r\n\r\n             <FormItem label=\"菜单类型\" prop=\"type\">\r\n                <Select v-model=\"form.type\" style=\"width: 200px\" placeholder=\"请选择菜单类型\" filterable clearable>\r\n                    <Option v-for=\"(item, i) in dictAccountMenuType\" :key=\"i\" :value=\"item.value\">{{item.title}}</Option>\r\n                </Select>\r\n            </FormItem>\r\n\r\n            <FormItem label=\"菜单KEY值\" prop=\"menuKey\" v-show= \"'click' == form.type\">\r\n              <Input v-model=\"form.menuKey\" clearable placeholder=\"请输入菜单KEY值\"/>\r\n            </FormItem>\r\n\r\n            <FormItem label=\"网页链接\" prop=\"url\" v-show= \"'view' == form.type || 'miniprogram' == form.type \">\r\n              <Input v-model=\"form.url\" clearable placeholder=\"请输入网页链接\"/>\r\n            </FormItem>\r\n\r\n            <FormItem label=\"小程序AppId\" prop=\"appId\" v-show= \"'miniprogram' == form.type \">\r\n              <Input v-model=\"form.appId\" clearable placeholder=\"请输入小程序AppId\"/>\r\n            </FormItem>\r\n\r\n            <FormItem label=\"小程序页面路径\" prop=\"pagePath\" v-show= \"'miniprogram' == form.type \">\r\n              <Input v-model=\"form.pagePath\" clearable placeholder=\"请输入小程序页面路径\"/>\r\n            </FormItem>\r\n\r\n            <FormItem label=\"排序值\" prop=\"sortOrder\">\r\n              <InputNumber :max=\"1000\" :min=\"0\" v-model=\"form.sortOrder\"></InputNumber>\r\n              <span style=\"margin-left:5px\">值越小越靠前，支持小数</span>\r\n            </FormItem>\r\n\r\n            <FormItem label=\"是否启用\" prop=\"status\">\r\n              <i-switch size=\"large\" v-model=\"form.status\" :true-value=\"0\" :false-value=\"-1\">\r\n                <span slot=\"open\">启用</span>\r\n                <span slot=\"close\">禁用</span>\r\n              </i-switch>\r\n            </FormItem>\r\n            \r\n            <Form-item>\r\n              <Button\r\n                @click=\"submitEdit\"\r\n                :loading=\"submitLoading\"\r\n                type=\"primary\"\r\n                icon=\"ios-create-outline\"\r\n                style=\"margin-right:5px\"\r\n              >修改并保存</Button>\r\n              <Button @click=\"handleReset\">重置</Button>\r\n            </Form-item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n\r\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\r\n      <Form ref=\"formAdd\" :model=\"formAdd\" :label-width=\"100\" :rules=\"formValidate\">\r\n        <div v-if=\"showParent\">\r\n          <FormItem label=\"上级菜单：\">{{form.title}}</FormItem>\r\n        </div>\r\n        <FormItem label=\"菜单名称\" prop=\"title\">\r\n          <Input v-model=\"formAdd.title\" clearable placeholder=\"请输入菜单名称\"/>\r\n        </FormItem>\r\n\r\n        <FormItem label=\"菜单类型\" prop=\"type\">\r\n            <Select v-model=\"formAdd.type\" style=\"width: 200px\" placeholder=\"请选择菜单类型\" clearable>\r\n                <Option v-for=\"(item, i) in dictAccountMenuType\" :key=\"i\" :value=\"item.value\">{{item.title}}</Option>\r\n            </Select>\r\n        </FormItem>\r\n\r\n        <FormItem label=\"菜单KEY值\" prop=\"menuKey\" v-show= \"'click' == formAdd.type\">\r\n          <Input v-model=\"formAdd.menuKey\" clearable placeholder=\"请输入菜单KEY值\"/>\r\n        </FormItem>\r\n\r\n        <FormItem label=\"网页链接\" prop=\"url\" v-show= \"'view' == formAdd.type || 'miniprogram' == formAdd.type \">\r\n          <Input v-model=\"formAdd.url\" clearable placeholder=\"请输入网页链接\"/>\r\n        </FormItem>\r\n\r\n        <FormItem label=\"小程序AppId\" prop=\"appId\" v-show= \"'miniprogram' == formAdd.type \">\r\n          <Input v-model=\"formAdd.appId\" clearable placeholder=\"请输入小程序AppId\"/>\r\n        </FormItem>\r\n\r\n        <FormItem label=\"小程序页面路径\" prop=\"pagePath\" v-show= \"'miniprogram' == formAdd.type \">\r\n          <Input v-model=\"formAdd.pagePath\" clearable placeholder=\"请输入小程序页面路径\"/>\r\n        </FormItem>\r\n\r\n        <FormItem label=\"排序值\" prop=\"sortOrder\">\r\n          <InputNumber :max=\"100\" :min=\"0\" v-model=\"formAdd.sortOrder\"></InputNumber>\r\n          <span style=\"margin-left:5px\">值越小越靠前</span>\r\n        </FormItem>\r\n\r\n        <FormItem label=\"是否启用\" prop=\"status\">\r\n          <i-switch size=\"large\" v-model=\"formAdd.status\" :true-value=\"0\" :false-value=\"-1\">\r\n            <span slot=\"open\">启用</span>\r\n            <span slot=\"close\">禁用</span>\r\n          </i-switch>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitAdd\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {\r\n  getMenuTreeByTemplateId,\r\n  addMenuTemplateDetail,\r\n  editMenuTemplateDetail,\r\n  delMenuTemplateDetail\r\n} from \"@/api/wechat\";\r\n\r\nimport {\r\n  getDictDataByType\r\n} from \"@/api/index\";\r\nimport { debug } from 'util';\r\n\r\nexport default {\r\n  data() {\r\n    //类型验证\r\n    const validateType = (rule, value, callback) => {\r\n      var self = this;\r\n      //二级菜单,类型必须填\r\n      if(self.form.parentId != '0'){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请选择菜单类型'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    //url验证\r\n    const validateUrl = (rule, value, callback) => {\r\n      var self = this;\r\n      //类型为网页类型， url必须填\r\n      if( 'view' == self.form.type){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请输入网页链接'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    //menuKey验证\r\n    const validateMenuKey = (rule, value, callback) => {\r\n      var self = this;\r\n      //类型为点击， menuKey必须填\r\n      if( 'click' == self.form.type){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请输入菜单KEY值'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    //AppId验证\r\n    const validateAppId = (rule, value, callback) => {\r\n      var self = this;\r\n      //类型为小程序， menuKey必须填\r\n      if( 'miniprogram' == self.form.type){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请输入小程序AppId'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    //AppId验证\r\n    const validatePagePath = (rule, value, callback) => {\r\n      var self = this;\r\n      //类型为小程序， menuKey必须填\r\n      if( 'miniprogram' == self.form.type){\r\n        if(value == null || value == undefined || value == \"\") {\r\n          callback(new Error('请输入小程序页面路径'));\r\n        }else{\r\n          callback();\r\n        }\r\n      }else {\r\n        callback();\r\n      }\r\n    };\r\n    \r\n\r\n    return {\r\n      menuTemplate: {\r\n        id: '',\r\n        name: ''\r\n      },\r\n      loading: false, // 树加载状态\r\n      maxHeight: \"500px\",\r\n      strict: true,\r\n      loadingEdit: false, // 编辑上级树加载状态\r\n      modalVisible: false, // 添加显示\r\n      selectList: [], // 多选数据\r\n      selectCount: 0, // 多选计数\r\n      showParent: false, // 显示上级标识\r\n      modalTitle: \"\", // 添加标题\r\n      editTitle: \"\", // 编辑菜单名称\r\n      searchKey: \"\", // 搜索树\r\n      form: {\r\n        templateId:\"\",\r\n        // 编辑对象初始化数据\r\n        id: \"\",\r\n        title: \"\",\r\n        parentId: \"\",\r\n        parenttitle: \"\",\r\n        type: \"\",\r\n        url: \"\",\r\n        menuKey: \"\",\r\n        appId: \"\",\r\n        pagePath: \"\",\r\n        sortOrder: 0,\r\n        status: 0\r\n      },\r\n      formAdd: {\r\n        // 添加对象初始化数据\r\n      },\r\n      \r\n      formValidate: {\r\n        // 表单验证规则//2、一级菜单最多4个汉字，二级菜单最多7个汉字，多出来的部分将会以“...”代替。\r\n        title: [\r\n          { required: true, message: \"菜单名称不能为空\", trigger: \"blur\" },\r\n          { type: 'string', max: 7, message: '菜单最多7个汉字', trigger: 'blur' }\r\n        ],\r\n        type: [\r\n          { validator: validateType, trigger: 'blur', trigger: 'change' }\r\n        ],\r\n        url: [\r\n          { validator: validateUrl, trigger: 'blur', trigger: 'change' }\r\n        ],\r\n        menuKey: [\r\n          { validator: validateMenuKey, trigger: 'blur', trigger: 'change' }\r\n        ],\r\n        appId: [\r\n          { validator: validateAppId, trigger: 'blur', trigger: 'change' }\r\n        ],\r\n        pagePath: [\r\n          { validator: validatePagePath, trigger: 'blur', trigger: 'change' }\r\n        ]\r\n\r\n      },\r\n      submitLoading: false,\r\n      data: [],\r\n      dataEdit: [],\r\n      //数字字段\r\n      dictAccountMenuType:[]\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      // 初始化菜单树\r\n      this.getParentList();\r\n      this.getDictAccountMenuTypeData();\r\n    },\r\n\r\n    //加载数字字典\r\n    getDictAccountMenuTypeData() {\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"wx_account_menu_type\").then(res => {\r\n        if (res.success) {\r\n          this.dictAccountMenuType = res.result;\r\n        }\r\n      });\r\n    },\r\n    //获取菜单树\r\n    getParentList() {\r\n      getMenuTreeByTemplateId(this.menuTemplate.id).then(res => {\r\n        if (res.success) {\r\n          this.data = res.result;\r\n        }\r\n      });\r\n    },\r\n     \r\n    loadData(item, callback) {\r\n    },\r\n    search() {\r\n      // 搜索树\r\n      if (this.searchKey) {\r\n        // 模拟请求\r\n        // this.loading = true;\r\n        // this.getRequest(\"搜索请求路径\", { title: this.searchKey }).then(res => {\r\n        //   this.loading = false;\r\n        //   if (res.success === true) {\r\n        //     this.data = res.result;\r\n        //   }\r\n        // });\r\n        // 模拟请求成功\r\n        this.data = [\r\n          {\r\n            title: \"这里需要请求后台接口\",\r\n            id: \"1\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级菜单\",\r\n            status: 0\r\n          },\r\n          {\r\n            title: \"所以这里是假数据\",\r\n            id: \"4\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级菜单\",\r\n            status: 0\r\n          },\r\n          {\r\n            title: \"我是被禁用的菜单\",\r\n            id: \"5\",\r\n            parentId: \"0\",\r\n            parentTitle: \"一级菜单\",\r\n            status: -1\r\n          }\r\n        ];\r\n      } else {\r\n        // 为空重新加载\r\n        this.getParentList();\r\n      }\r\n    },\r\n    //选择树事件\r\n    selectTree(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.form = data;\r\n        this.editTitle = data.title;\r\n      } else {\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    //编辑取消按钮\r\n    cancelEdit() {\r\n      let data = this.$refs.tree.getSelectedNodes()[0];\r\n      if (data) {\r\n        data.selected = false;\r\n      }\r\n      this.$refs.form.resetFields();\r\n      delete this.form.id;\r\n      this.editTitle = \"\";\r\n    },\r\n    //选择编辑\r\n    selectTreeEdit(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.form.parentId = data.id;\r\n        this.form.parentTitle = data.title;\r\n      }\r\n    },\r\n    //重置\r\n    handleReset() {\r\n      this.$refs.form.resetFields();\r\n      this.form.status = 0;\r\n    },\r\n    //编辑提交\r\n    submitEdit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          if (!this.form.id) {\r\n            this.$Message.warning(\"请先点击选择要修改的菜单\");\r\n            return;\r\n          }\r\n          this.submitLoading = true;\r\n          editMenuTemplateDetail(this.form).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(res.message);\r\n              this.init();\r\n              this.modalVisible = false;\r\n            }\r\n          });\r\n          this.submitLoading = false;\r\n        }\r\n      });\r\n    },\r\n    //新增提交\r\n    submitAdd() {\r\n      this.$refs.formAdd.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          addMenuTemplateDetail(this.formAdd).then(res => {\r\n            this.submitLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(res.message);\r\n              this.init();\r\n              this.modalVisible = false;\r\n            }\r\n          });\r\n          this.submitLoading = false;\r\n        }\r\n      });\r\n    },\r\n    //新增\r\n    add() {\r\n      if (this.form.id == \"\" || this.form.id == null) {\r\n        this.$Message.warning(\"请先点击选择一个菜单\");\r\n        return;\r\n      }\r\n      if((this.form.parentId != \"\" && this.form.parentId != null ) && this.form.parentId != \"0\"){\r\n        this.$Message.warning(\"自定义菜单只支持到二级\");\r\n        return;\r\n      }\r\n\r\n      if(this.form.type != \"\" && this.form.type != null ){\r\n        this.$Message.warning(\"已选择菜单类型的不能包含二级菜单\");\r\n        return;\r\n      }\r\n\r\n      if(this.validChildCount()){\r\n        this.$Message.warning(\"每个一级菜单最多包含5个二级菜单\");\r\n        return;\r\n      }\r\n      this.modalTitle = \"添加子菜单\";\r\n      this.showParent = true;\r\n      this.formAdd = {\r\n        templateId: this.menuTemplate.id,\r\n        parentId: this.form.id,\r\n        sortOrder: 0,\r\n        status: 0\r\n      };\r\n      this.modalVisible = true;\r\n    },\r\n \r\n    \r\n    //新增根节点\r\n    addRoot() {\r\n      if(this.validRootCount()){\r\n        this.$Message.warning(\"自定义菜单最多包括3个一级菜单\");\r\n        return;\r\n      }\r\n      this.modalTitle = \"添加一级菜单\";\r\n      this.showParent = false;\r\n      this.formAdd = {\r\n        templateId: this.menuTemplate.id,\r\n        parentId: 0,\r\n        sortOrder: 0,\r\n        status: 0\r\n      };\r\n      this.modalVisible = true;\r\n    },\r\n    //验证一级菜单个数\r\n    //1、自定义菜单最多包括3个一级菜单，每个一级菜单最多包含5个二级菜单。\r\n    validRootCount(){\r\n      if(null !=this.data && this.data.length >= 3){\r\n        return true;\r\n      }\r\n    },\r\n    //验证二级菜单个数\r\n    //1、自定义菜单最多包括3个一级菜单，每个一级菜单最多包含5个二级菜单。\r\n    validChildCount(parentId){\r\n      if(null != this.form && this.form.children.length >= 5){\r\n         return true;\r\n      }\r\n    },\r\n\r\n\r\n    changeSelect(v) {\r\n      this.selectCount = v.length;\r\n      this.selectList = v;\r\n    },\r\n    //批量删除\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未勾选要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          \r\n          delMenuTemplateDetail(ids).then(res => {\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.selectList = [];\r\n              this.selectCount = 0;\r\n              this.cancelEdit();\r\n              this.init();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    // 计算高度\r\n    let height = document.documentElement.clientHeight;\r\n    this.maxHeight = Number(height-287) + \"px\";\r\n    this.menuTemplate.id = this.$route.query.id;\r\n    this.menuTemplate.name = this.$route.query.name;\r\n    this.init();\r\n  }\r\n};\r\n</script>"]}]}