{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\shrinkable-menu\\shrinkable-menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\shrinkable-menu\\shrinkable-menu.vue","mtime":1564969187189},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport sidebarMenu from './components/sidebarMenu.vue';\r\nimport sidebarMenuShrink from './components/sidebarMenuShrink.vue';\r\nimport util from '@/libs/util';\r\nexport default {\r\n    name: 'shrinkableMenu',\r\n    components: {\r\n        sidebarMenu,\r\n        sidebarMenuShrink\r\n    },\r\n    props: {\r\n        shrink: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        menuList: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        theme: {\r\n            type: String,\r\n            default: 'dark',\r\n            validator (val) {\r\n                return util.oneOf(val, ['dark', 'light']);\r\n            }\r\n        },\r\n        beforePush: {\r\n            type: Function\r\n        },\r\n        openNames: {\r\n            type: Array\r\n        }\r\n    },\r\n    computed: {\r\n        bgColor () {\r\n            return this.theme === 'dark' ? '#515a6e' : '#fff';\r\n        },\r\n        shrinkIconColor () {\r\n            return this.theme === 'dark' ? '#fff' : '#515a6e';\r\n        }\r\n    },\r\n    methods: {\r\n        handleChange (name) {\r\n            let willpush = true;\r\n            if (this.beforePush !== undefined) {\r\n                if (!this.beforePush(name)) {\r\n                    willpush = false;\r\n                }\r\n            }\r\n            if (willpush) {\r\n                this.$router.push({\r\n                    name: name\r\n                });\r\n            }\r\n            this.$emit('on-change', name);\r\n        }\r\n    }\r\n};\r\n",null]}