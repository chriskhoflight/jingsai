{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\components\\dynamic-form\\dynamicForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\components\\dynamic-form\\dynamicForm.vue","mtime":1565946234638},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data () {\n        return {\n            index: 1,\n            formDynamic: {\n                items: [\n                    {\n                        value: '',\n                        index: 1,\n                        status: 1,\n                        time:''\n                    }\n                ]\n            }\n        }\n    },\n    methods: {\n        handleSubmit (name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    this.$Message.success('Success!');\n                } else {\n                    this.$Message.error('Fail!');\n                }\n            })\n        },\n        handleReset (name) {\n            // this.$refs[name].resetFields();\n            this.formDynamic.items = [\n                    {\n                        value: '',\n                        index: 1,\n                        status: 1,\n                        time:''\n                    }\n                ]\n        },\n        handleAdd () {\n            this.index++;\n            this.formDynamic.items.push({\n                value: '',\n                index: this.index,\n                status: 1,\n                time:''\n            });\n        },\n        handleRemove (index) {\n            this.formDynamic.items[index].status = 0;\n        }\n    },\n    props:['selectOptions','data'],\n    watch:{\n        data:{\n            handler(newVal){\n                if(newVal&&newVal.length>0){\n                    this.formDynamic.items = newVal\n                }\n            }\n        }\n    }\n}\n",{"version":3,"sources":["dynamicForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dynamicForm.vue","sourceRoot":"src/views/components/dynamic-form","sourcesContent":["<template>\r\n    <Form ref=\"formDynamic\" :model=\"formDynamic\" :label-width=\"70\" >\r\n        <FormItem\r\n                v-for=\"(item, index) in formDynamic.items\"\r\n                v-if=\"item.status\"\r\n                :key=\"index\"\r\n                :label=\"'时间段 ' + item.index\"\r\n                :prop=\"'items.' + index + '.value'\"\r\n                :rules=\"{required: true, message: 'Item ' + item.index +' can not be empty', trigger: 'blur'}\">\r\n            <Row>\r\n                <Col span=\"9\">\r\n                    <Select v-model=\"item.value\" >\r\n                        <Option v-for=\"e in selectOptions\" :value=\"e.code\" :label=\"e.name\" :key=\"e.value\"></Option>\r\n                    </Select>\r\n                </Col>\r\n                <Col span=\"9\" offset=\"1\">\r\n                    <Time-picker  format=\"HH:mm\" type=\"timerange\" placement=\"bottom-end\"  placeholder=\"选择时间\"  v-model=\"item.time\"></Time-picker>\r\n                </Col>\r\n                <Col span=\"4\" offset=\"1\">\r\n                    <Button @click=\"handleRemove(index)\">Delete</Button>\r\n                </Col>\r\n            </Row>\r\n        </FormItem>\r\n        <FormItem>\r\n            <Row>\r\n                <Col span=\"12\">\r\n                    <Button type=\"dashed\" long @click=\"handleAdd\" icon=\"md-add\">Add item</Button>\r\n                </Col>\r\n            </Row>\r\n        </FormItem>\r\n        <!-- <FormItem>\r\n            <Button type=\"primary\" @click=\"handleSubmit('formDynamic')\">Submit</Button>\r\n            <Button @click=\"handleReset('formDynamic')\" style=\"margin-left: 8px\">Reset</Button>\r\n        </FormItem> -->\r\n    </Form>\r\n</template>\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                index: 1,\r\n                formDynamic: {\r\n                    items: [\r\n                        {\r\n                            value: '',\r\n                            index: 1,\r\n                            status: 1,\r\n                            time:''\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            handleSubmit (name) {\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        this.$Message.success('Success!');\r\n                    } else {\r\n                        this.$Message.error('Fail!');\r\n                    }\r\n                })\r\n            },\r\n            handleReset (name) {\r\n                // this.$refs[name].resetFields();\r\n                this.formDynamic.items = [\r\n                        {\r\n                            value: '',\r\n                            index: 1,\r\n                            status: 1,\r\n                            time:''\r\n                        }\r\n                    ]\r\n            },\r\n            handleAdd () {\r\n                this.index++;\r\n                this.formDynamic.items.push({\r\n                    value: '',\r\n                    index: this.index,\r\n                    status: 1,\r\n                    time:''\r\n                });\r\n            },\r\n            handleRemove (index) {\r\n                this.formDynamic.items[index].status = 0;\r\n            }\r\n        },\r\n        props:['selectOptions','data'],\r\n        watch:{\r\n            data:{\r\n                handler(newVal){\r\n                    if(newVal&&newVal.length>0){\r\n                        this.formDynamic.items = newVal\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}