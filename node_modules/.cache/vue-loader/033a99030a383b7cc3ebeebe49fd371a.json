{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\components\\header\\app-header.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\components\\header\\app-header.vue","mtime":1564969187189},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport './app-header.less'\r\nimport navMenu from \"@/views/components/nav-menu/navMenu.vue\";\r\nimport fullScreen from \"@/views/components/fullscreen.vue\";\r\nimport lockScreen from \"@/views/components/lockscreen/lockscreen.vue\";\r\nimport messageTip from \"@/views/components/message-tip.vue\";\r\nimport Cookies from \"js-cookie\";\r\nimport util from \"@/libs/util.js\";\r\nimport setting from \"@/settings.js\";\r\n\r\nexport default {\r\n  name: 'appHeader',\r\n  components: {\r\n    navMenu,\r\n    fullScreen,\r\n    lockScreen,\r\n    messageTip\r\n  },\r\n  props: {\r\n    activeName: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n  },\r\n  data () {\r\n    return {\r\n      username: \"\",\r\n      userId: \"\",\r\n      isFullScreen: false,\r\n      pomnameName: \"\",\r\n    }\r\n  },\r\n  computed: {\r\n    menuTheme() {\r\n      return this.$store.state.app.menuTheme;\r\n    },\r\n    menuList() {\r\n      return this.$store.state.app.menuList;\r\n    },\r\n     avatarPath() {\r\n      return localStorage.avatorImgPath;\r\n    },\r\n    lang() {\r\n      return this.$store.state.app.lang;\r\n    },\r\n    mesCount() {\r\n      return this.$store.state.app.messageCount;\r\n    }\r\n  },\r\n  methods: {\r\n    init() {\r\n      // let pathArr = util.setCurrentPath(this, this.$route.name);\r\n      // // this.$store.commit(\"updateMenulist\");\r\n      // if (pathArr.length >= 2) {\r\n      //   this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\r\n      // }\r\n      let userInfo = JSON.parse(Cookies.get(\"userInfo\"));\r\n      this.username = userInfo.username;\r\n      this.userId = userInfo.id;\r\n \r\n    },\r\n    handleChange (name) {\r\n\r\n    },\r\n    fullscreenChange(isFullScreen) {\r\n      // console.log(isFullScreen);\r\n    },\r\n    handleLanDropdown(name) {\r\n      localStorage.lang = name;\r\n      this.$store.commit(\"switchLang\", name);\r\n    },\r\n    handleClickUserDropdown(name) {\r\n      if (name === \"ownSpace\") {\r\n        util.openNewPage(this, \"ownspace_index\");\r\n        this.$router.push({\r\n          name: \"ownspace_index\"\r\n        });\r\n      } else if (name === \"changePass\") {\r\n        util.openNewPage(this, \"change_pass\");\r\n        this.$router.push({\r\n          name: \"change_pass\"\r\n        });\r\n      } else if (name === \"loginout\") {\r\n        // 退出登录\r\n        this.$store.commit(\"logout\", this);\r\n        this.$store.commit(\"clearOpenedSubmenu\");\r\n        // 强制刷新页面 重新加载router\r\n        location.reload();\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    lang() {\r\n      util.setCurrentPath(this, this.$route.name); // 在切换语言时用于刷新面包屑\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init();\r\n    this.pomnameName = setting.title;\r\n  }\r\n}\r\n",{"version":3,"sources":["app-header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app-header.vue","sourceRoot":"src/views/components/header","sourcesContent":["<!--\r\n  公共顶部\r\n  上:logo+导航+用户相关信息\r\n-->\r\n<template>\r\n  <Row class=\"header-main\">\r\n    <Col span=\"4\">\r\n      <div class=\"layout-logo\">\r\n        <img  src=\"@/assets/logo-min.jpg\" key=\"min-logo\" />\r\n      </div>\r\n      <div><span class=\"logo-text\">{{pomnameName}}</span></div>\r\n    </Col>\r\n    <Col span=\"15\">\r\n      <Row type=\"flex\" justify=\"end\" >\r\n         <nav-menu \r\n            :menu-theme=\"menuTheme\" \r\n            :menu-list=\"menuList\" \r\n            @on-change=\"handleChange\">\r\n        </nav-menu>\r\n      </Row>\r\n    </Col>\r\n    <Col span=\"5\" class=\"header-main-header\">\r\n      <div class=\"header-avator-con\">\r\n        <full-screen v-model=\"isFullScreen\" @on-change=\"fullscreenChange\"></full-screen> \r\n        <Dropdown transfer trigger=\"hover\"  @on-click=\"handleLanDropdown\" class=\"options\">\r\n          <Icon type=\"md-globe\" :size=\"24\" class=\"language\"></Icon>\r\n          <DropdownMenu slot=\"list\">\r\n            <DropdownItem name=\"zh-CN\">中文</DropdownItem>\r\n            <DropdownItem name=\"en-US\">English</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n        <lock-screen></lock-screen>\r\n        <message-tip v-model=\"mesCount\"></message-tip> \r\n        <div class=\"user-dropdown-menu-con\">\r\n          <Row type=\"flex\" justify=\"end\" align=\"middle\" class=\"user-dropdown-innercon\">\r\n            <Dropdown transfer trigger=\"hover\" @on-click=\"handleClickUserDropdown\">\r\n              <a href=\"javascript:void(0)\">\r\n                <span class=\"main-user-name\">{{ username }}</span>\r\n                <Icon type=\"md-arrow-dropdown\" />\r\n                <Avatar v-if=\"avatarPath\"   :src=\"avatarPath\" style=\"background: #619fe7;\"/>\r\n                <Avatar v-else style=\"background-color: #87d068\" icon=\"ios-person\"/>\r\n              </a>\r\n              <DropdownMenu slot=\"list\">\r\n                <DropdownItem name=\"ownSpace\">{{ $t('userCenter') }}</DropdownItem>\r\n                <DropdownItem name=\"changePass\">{{ $t('changePass') }}</DropdownItem>\r\n                <DropdownItem name=\"loginout\" divided>{{ $t('logout') }}</DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n  </Row>\r\n</template>\r\n<script>\r\nimport './app-header.less'\r\nimport navMenu from \"@/views/components/nav-menu/navMenu.vue\";\r\nimport fullScreen from \"@/views/components/fullscreen.vue\";\r\nimport lockScreen from \"@/views/components/lockscreen/lockscreen.vue\";\r\nimport messageTip from \"@/views/components/message-tip.vue\";\r\nimport Cookies from \"js-cookie\";\r\nimport util from \"@/libs/util.js\";\r\nimport setting from \"@/settings.js\";\r\n\r\nexport default {\r\n  name: 'appHeader',\r\n  components: {\r\n    navMenu,\r\n    fullScreen,\r\n    lockScreen,\r\n    messageTip\r\n  },\r\n  props: {\r\n    activeName: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n  },\r\n  data () {\r\n    return {\r\n      username: \"\",\r\n      userId: \"\",\r\n      isFullScreen: false,\r\n      pomnameName: \"\",\r\n    }\r\n  },\r\n  computed: {\r\n    menuTheme() {\r\n      return this.$store.state.app.menuTheme;\r\n    },\r\n    menuList() {\r\n      return this.$store.state.app.menuList;\r\n    },\r\n     avatarPath() {\r\n      return localStorage.avatorImgPath;\r\n    },\r\n    lang() {\r\n      return this.$store.state.app.lang;\r\n    },\r\n    mesCount() {\r\n      return this.$store.state.app.messageCount;\r\n    }\r\n  },\r\n  methods: {\r\n    init() {\r\n      // let pathArr = util.setCurrentPath(this, this.$route.name);\r\n      // // this.$store.commit(\"updateMenulist\");\r\n      // if (pathArr.length >= 2) {\r\n      //   this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\r\n      // }\r\n      let userInfo = JSON.parse(Cookies.get(\"userInfo\"));\r\n      this.username = userInfo.username;\r\n      this.userId = userInfo.id;\r\n \r\n    },\r\n    handleChange (name) {\r\n\r\n    },\r\n    fullscreenChange(isFullScreen) {\r\n      // console.log(isFullScreen);\r\n    },\r\n    handleLanDropdown(name) {\r\n      localStorage.lang = name;\r\n      this.$store.commit(\"switchLang\", name);\r\n    },\r\n    handleClickUserDropdown(name) {\r\n      if (name === \"ownSpace\") {\r\n        util.openNewPage(this, \"ownspace_index\");\r\n        this.$router.push({\r\n          name: \"ownspace_index\"\r\n        });\r\n      } else if (name === \"changePass\") {\r\n        util.openNewPage(this, \"change_pass\");\r\n        this.$router.push({\r\n          name: \"change_pass\"\r\n        });\r\n      } else if (name === \"loginout\") {\r\n        // 退出登录\r\n        this.$store.commit(\"logout\", this);\r\n        this.$store.commit(\"clearOpenedSubmenu\");\r\n        // 强制刷新页面 重新加载router\r\n        location.reload();\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    lang() {\r\n      util.setCurrentPath(this, this.$route.name); // 在切换语言时用于刷新面包屑\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init();\r\n    this.pomnameName = setting.title;\r\n  }\r\n}\r\n</script>\r\n"]}]}