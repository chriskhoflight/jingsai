{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\home\\components\\map.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\home\\components\\map.vue","mtime":1564969187205},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport echarts from 'echarts';\r\nimport geoData from '../map-data/get-geography-value.js';\r\nexport default {\r\n    name: 'homeMap',\r\n    props: {\r\n        cityData: Array\r\n    },\r\n    mounted () {\r\n        var convertData = function (data) {\r\n            let res = [];\r\n            let len = data.length;\r\n            for (var i = 0; i < len; i++) {\r\n                var geoCoord = geoData[data[i].name];\r\n                if (geoCoord) {\r\n                    res.push({\r\n                        name: data[i].name,\r\n                        value: geoCoord.concat(data[i].value)\r\n                    });\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n\r\n        var map = echarts.init(document.getElementById('home_page_map'));\r\n        const chinaJson = require('../map-data/china.json');\r\n        echarts.registerMap('china', chinaJson);\r\n        map.setOption({\r\n            backgroundColor: '#FFF',\r\n            geo: {\r\n                map: 'china',\r\n                label: {\r\n                    emphasis: {\r\n                        show: false\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        areaColor: '#EFEFEF',\r\n                        borderColor: '#CCC'\r\n                    },\r\n                    emphasis: {\r\n                        areaColor: '#E5E5E5'\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                top: 0,\r\n                left: '2%',\r\n                right: '2%',\r\n                bottom: '0',\r\n                containLabel: true\r\n            },\r\n            series: [{\r\n                type: 'scatter',\r\n                coordinateSystem: 'geo',\r\n                data: convertData(this.cityData),\r\n                symbolSize: function (val) {\r\n                    return val[2] / 10;\r\n                },\r\n                label: {\r\n                    normal: {\r\n                        formatter: '{b}',\r\n                        position: 'right',\r\n                        show: false\r\n                    },\r\n                    emphasis: {\r\n                        show: true\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: '#0099CC'\r\n                    }\r\n                }\r\n            }]\r\n\r\n        });\r\n        window.addEventListener('resize', function () {\r\n            map.resize();\r\n        });\r\n    }\r\n};\r\n",{"version":3,"sources":["map.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"map.vue","sourceRoot":"src/views/home/components","sourcesContent":["<template>\r\n    <div style=\"width:calc(100% - 10px);height:305px;\" id=\"home_page_map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts';\r\nimport geoData from '../map-data/get-geography-value.js';\r\nexport default {\r\n    name: 'homeMap',\r\n    props: {\r\n        cityData: Array\r\n    },\r\n    mounted () {\r\n        var convertData = function (data) {\r\n            let res = [];\r\n            let len = data.length;\r\n            for (var i = 0; i < len; i++) {\r\n                var geoCoord = geoData[data[i].name];\r\n                if (geoCoord) {\r\n                    res.push({\r\n                        name: data[i].name,\r\n                        value: geoCoord.concat(data[i].value)\r\n                    });\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n\r\n        var map = echarts.init(document.getElementById('home_page_map'));\r\n        const chinaJson = require('../map-data/china.json');\r\n        echarts.registerMap('china', chinaJson);\r\n        map.setOption({\r\n            backgroundColor: '#FFF',\r\n            geo: {\r\n                map: 'china',\r\n                label: {\r\n                    emphasis: {\r\n                        show: false\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        areaColor: '#EFEFEF',\r\n                        borderColor: '#CCC'\r\n                    },\r\n                    emphasis: {\r\n                        areaColor: '#E5E5E5'\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                top: 0,\r\n                left: '2%',\r\n                right: '2%',\r\n                bottom: '0',\r\n                containLabel: true\r\n            },\r\n            series: [{\r\n                type: 'scatter',\r\n                coordinateSystem: 'geo',\r\n                data: convertData(this.cityData),\r\n                symbolSize: function (val) {\r\n                    return val[2] / 10;\r\n                },\r\n                label: {\r\n                    normal: {\r\n                        formatter: '{b}',\r\n                        position: 'right',\r\n                        show: false\r\n                    },\r\n                    emphasis: {\r\n                        show: true\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: '#0099CC'\r\n                    }\r\n                }\r\n            }]\r\n\r\n        });\r\n        window.addEventListener('resize', function () {\r\n            map.resize();\r\n        });\r\n    }\r\n};\r\n</script>\r\n\r\n\r\n"]}]}