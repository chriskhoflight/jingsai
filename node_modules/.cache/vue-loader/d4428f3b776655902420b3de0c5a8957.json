{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\editContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\editContent.vue","mtime":1565936236065},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  getContentTypeListData,\r\n  editContent,\r\n  getWechatContent\r\n} from \"@/api/publishContent\";\r\nimport {\r\n  getDictDataByType,\r\n} from \"@/api/index\";\r\nimport VueUeditorWrap from \"vue-ueditor-wrap\";\r\nlet base = process.env.VUE_APP_BASE_API;\r\nlet URL = process.env.NODE_ENV === 'production'\r\n  ? '/rcms-pc-web/'\r\n  : '/'\r\nexport default {\r\n  name: \"editContent\",\r\n  components: {\r\n    VueUeditorWrap\r\n  },\r\n  data() {\r\n    return {\r\n      submitLoading:false,\r\n      // 内容表单\r\n      contentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: \"\",\r\n        isTop: \"\",\r\n        seoDescription: \"\",\r\n        content: \"\",\r\n        contentType:\"\"\r\n      },\r\n      newContentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: \"\",\r\n        isTop: \"\",\r\n        seoDescription: \"\",\r\n        content: \"\",\r\n        contentType:\"\"\r\n      },\r\n      // 发布内容类别\r\n      dictContentType: [],\r\n      // 以下为编辑器data//////////////\r\n      myConfig: {\r\n        //   如果需要上传功能,找后端小伙伴要服务器接口地址\r\n        serverUrl: base+\"/content/uploadToQiniu\",\r\n        // UEDITOR_HOME_URL设置加载/ueditor/ueditor.config.js配置文件\r\n        // UEDITOR_HOME_URL: \"/rcms-pc-web/ueditor/\",//pro\r\n        UEDITOR_HOME_URL: \"/ueditor/\",//dev\r\n        // 编辑器不自动被内容撑高\r\n        autoHeightEnabled: false,\r\n        // 工具栏是否可以浮动\r\n        autoFloatEnabled: false,\r\n        // 初始容器高度\r\n        initialFrameHeight: 300,\r\n        // 初始容器宽度\r\n        initialFrameWidth: \"100%\",\r\n        // 启动自动保存\r\n        enableAutoSave: true\r\n      },\r\n      // 以上为编辑器data/////////\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.fetchData();\r\n      this.getDictContenTypeData();\r\n    },\r\n    fetchData() {\r\n      getWechatContent(this.$route.params.id).then(res => {\r\n        if (res.success) {\r\n          this.contentForm = res.result;\r\n          if(this.contentForm.isPublication ==1) {\r\n            this.contentForm.isPublication = true;\r\n          } else {\r\n            this.contentForm.isPublication = false;\r\n          }\r\n          if(this.contentForm.isTop ==1) {\r\n            this.contentForm.isTop = true;\r\n          } else {\r\n            this.contentForm.isTop = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    // 获取发布内容类别字典数据\r\n    getDictContenTypeData() {\r\n      getDictDataByType(\"contentType\").then(res => {\r\n        if (res.success) {\r\n          this.dictContentType = res.result;\r\n        }\r\n      });\r\n    },\r\n    back() {\r\n      window.history.back();\r\n    },\r\n    updateContentInfo() {\r\n      // let this.newContentForm.isPublication = Number(this.contentForm.isPublication);\r\n      let con = JSON.stringify(this.contentForm);\r\n      let conObj = JSON.parse(con);\r\n      if(this.contentForm.isPublication) {\r\n        conObj.isPublication = 1;\r\n      } else {\r\n        conObj.isPublication =0;\r\n      }\r\n      if(this.contentForm.isTop) {\r\n        conObj.isTop = 1;\r\n      } else {\r\n        conObj.isTop =0;\r\n      }\r\n      \r\n      editContent(conObj).then(res => {\r\n        this.submitLoading = false;\r\n        if (res.success) {\r\n          this.$Message.success(\"修改成功\");\r\n          this.$router.push({name: \"contentManage\"});\r\n        }\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    // 如果路由有变化，会再次执行该方法\r\n    // $route: \"init\"\r\n    '$route.name'(toC, fromC){\r\n        if(fromC === 'contentManage' && toC === 'editContent'){\r\n            this.fetchData();\r\n            this.getDictContenTypeData();\r\n        }\r\n    }\r\n      },\r\n  mounted() {\r\n    console.log(URL+base)\r\n    this.init();\r\n  }\r\n};\r\n",{"version":3,"sources":["editContent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"editContent.vue","sourceRoot":"src/views/lsbusiness/publish","sourcesContent":["<template>\r\n  <Row>\r\n    <Card>\r\n      <Col>\r\n        <Row>\r\n          <Col>\r\n            <Button type=\"primary\" icon=\"ios-arrow-back\" @click=\"back\" style=\"margin-bottom:30px;\">返回</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Form :label-width=\"70\" class=\"search-form\" v-model=\"contentForm\">\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"标题\">\r\n                  <Input\r\n                    v-model=\"contentForm.title\"\r\n                    type=\"text\"\r\n                    clearable\r\n                    placeholder=\"请输入文章标题\"\r\n                    style=\"width: 200px\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"作者\">\r\n                  <Input\r\n                    v-model=\"contentForm.author\"\r\n                    type=\"text\"\r\n                    clearable\r\n                    placeholder=\"请输入作者\"\r\n                    style=\"width: 200px\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"内容类别\">\r\n                  <Select\r\n                    v-model=\"contentForm.contentType\"\r\n                    placeholder=\"请选择\"\r\n                    clearable\r\n                    style=\"width: 200px\"\r\n                  >\r\n                    <Option\r\n                    v-for=\"(item, i) in dictContentType\"\r\n                    :key=\"i\"\r\n                    :value=\"Number(item.value)\"\r\n                  >{{item.title}}</Option>\r\n                  </Select>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item>\r\n                  <Checkbox v-model=\"contentForm.isPublication\">立即发布</Checkbox>\r\n                </Form-item>\r\n                <Form-item prop=\"isTop\">\r\n                  <Checkbox v-model=\"contentForm.isTop\">置顶内容</Checkbox>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"摘要\">\r\n                  <Input\r\n                    v-model=\"contentForm.seoDescription\"\r\n                    type=\"textarea\"\r\n                    :rows=\"4\"\r\n                    placeholder=\"请输入文章摘要\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"正文\">\r\n                  <vue-ueditor-wrap\r\n                    v-model=\"contentForm.content\"\r\n                    :config=\"myConfig\"\r\n                    style=\"z-index:0;\"\r\n                  ></vue-ueditor-wrap>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <Col>\r\n            <Button type=\"primary\" :loading=\"submitLoading\" @click=\"updateContentInfo\">更新</Button>\r\n            </Col>\r\n        </Row>\r\n      </Col>\r\n    </Card>\r\n  </Row>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getContentTypeListData,\r\n  editContent,\r\n  getWechatContent\r\n} from \"@/api/publishContent\";\r\nimport {\r\n  getDictDataByType,\r\n} from \"@/api/index\";\r\nimport VueUeditorWrap from \"vue-ueditor-wrap\";\r\nlet base = process.env.VUE_APP_BASE_API;\r\nlet URL = process.env.NODE_ENV === 'production'\r\n  ? '/rcms-pc-web/'\r\n  : '/'\r\nexport default {\r\n  name: \"editContent\",\r\n  components: {\r\n    VueUeditorWrap\r\n  },\r\n  data() {\r\n    return {\r\n      submitLoading:false,\r\n      // 内容表单\r\n      contentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: \"\",\r\n        isTop: \"\",\r\n        seoDescription: \"\",\r\n        content: \"\",\r\n        contentType:\"\"\r\n      },\r\n      newContentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: \"\",\r\n        isTop: \"\",\r\n        seoDescription: \"\",\r\n        content: \"\",\r\n        contentType:\"\"\r\n      },\r\n      // 发布内容类别\r\n      dictContentType: [],\r\n      // 以下为编辑器data//////////////\r\n      myConfig: {\r\n        //   如果需要上传功能,找后端小伙伴要服务器接口地址\r\n        serverUrl: base+\"/content/uploadToQiniu\",\r\n        // UEDITOR_HOME_URL设置加载/ueditor/ueditor.config.js配置文件\r\n        // UEDITOR_HOME_URL: \"/rcms-pc-web/ueditor/\",//pro\r\n        UEDITOR_HOME_URL: \"/ueditor/\",//dev\r\n        // 编辑器不自动被内容撑高\r\n        autoHeightEnabled: false,\r\n        // 工具栏是否可以浮动\r\n        autoFloatEnabled: false,\r\n        // 初始容器高度\r\n        initialFrameHeight: 300,\r\n        // 初始容器宽度\r\n        initialFrameWidth: \"100%\",\r\n        // 启动自动保存\r\n        enableAutoSave: true\r\n      },\r\n      // 以上为编辑器data/////////\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.fetchData();\r\n      this.getDictContenTypeData();\r\n    },\r\n    fetchData() {\r\n      getWechatContent(this.$route.params.id).then(res => {\r\n        if (res.success) {\r\n          this.contentForm = res.result;\r\n          if(this.contentForm.isPublication ==1) {\r\n            this.contentForm.isPublication = true;\r\n          } else {\r\n            this.contentForm.isPublication = false;\r\n          }\r\n          if(this.contentForm.isTop ==1) {\r\n            this.contentForm.isTop = true;\r\n          } else {\r\n            this.contentForm.isTop = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    // 获取发布内容类别字典数据\r\n    getDictContenTypeData() {\r\n      getDictDataByType(\"contentType\").then(res => {\r\n        if (res.success) {\r\n          this.dictContentType = res.result;\r\n        }\r\n      });\r\n    },\r\n    back() {\r\n      window.history.back();\r\n    },\r\n    updateContentInfo() {\r\n      // let this.newContentForm.isPublication = Number(this.contentForm.isPublication);\r\n      let con = JSON.stringify(this.contentForm);\r\n      let conObj = JSON.parse(con);\r\n      if(this.contentForm.isPublication) {\r\n        conObj.isPublication = 1;\r\n      } else {\r\n        conObj.isPublication =0;\r\n      }\r\n      if(this.contentForm.isTop) {\r\n        conObj.isTop = 1;\r\n      } else {\r\n        conObj.isTop =0;\r\n      }\r\n      \r\n      editContent(conObj).then(res => {\r\n        this.submitLoading = false;\r\n        if (res.success) {\r\n          this.$Message.success(\"修改成功\");\r\n          this.$router.push({name: \"contentManage\"});\r\n        }\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    // 如果路由有变化，会再次执行该方法\r\n    // $route: \"init\"\r\n    '$route.name'(toC, fromC){\r\n        if(fromC === 'contentManage' && toC === 'editContent'){\r\n            this.fetchData();\r\n            this.getDictContenTypeData();\r\n        }\r\n    }\r\n      },\r\n  mounted() {\r\n    console.log(URL+base)\r\n    this.init();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n"]}]}