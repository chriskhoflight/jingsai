{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\sys\\dict-manage\\dictManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\sys\\dict-manage\\dictManage.vue","mtime":1564969187221},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = require(\"@/api/index\");\n\nvar _circleLoading = _interopRequireDefault(require(\"@/views/components/custom/circle-loading.vue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"dic-manage\",\n  components: {\n    circleLoading: _circleLoading.default\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      treeLoading: false,\n      // 树加载状态\n      maxHeight: \"500px\",\n      loading: false,\n      // 表格加载状态\n      editTitle: \"\",\n      // 编辑节点名称\n      searchKey: \"\",\n      // 搜索树\n      expand: true,\n      span: 18,\n      expandIcon: \"ios-arrow-back\",\n      selectNode: {},\n      treeData: [],\n      // 树数据\n      operationLoading: false,\n      // 操作加载状态\n      selectCount: 0,\n      // 多选计数\n      selectList: [],\n      // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 10,\n        // 页面大小\n        sort: \"sortOrder\",\n        // 默认排序字段\n        order: \"asc\" // 默认排序方式\n\n      },\n      modalType: 0,\n      // 添加或编辑标识\n      modalVisible: false,\n      // 添加或编辑显示\n      dictModalVisible: false,\n      dictModalTitle: \"\",\n      modalTitle: \"\",\n      // 添加或编辑标题\n      dictForm: {\n        title: \"\",\n        type: \"\",\n        description: \"\",\n        sortOrder: 0\n      },\n      form: {\n        // 添加或编辑表单对象初始化数据\n        title: \"\",\n        value: \"\",\n        status: 0,\n        description: \"\",\n        sortOrder: 0\n      },\n      dictFormValidate: {\n        // 表单验证规则\n        title: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        type: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      formValidate: {\n        // 表单验证规则\n        title: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        value: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      columns: [// 表头\n      {\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"名称\",\n        key: \"title\",\n        minWidth: 150,\n        sortable: true\n      }, {\n        title: \"数据值\",\n        key: \"value\",\n        width: 150,\n        sortable: true\n      }, {\n        title: \"备注\",\n        key: \"description\",\n        width: 150,\n        sortable: true\n      }, {\n        title: \"排序值\",\n        key: \"sortOrder\",\n        width: 100,\n        sortable: true,\n        sortType: \"asc\"\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 130,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.status === 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"green\"\n              }\n            }, \"正常启用\")]);\n          } else if (params.row.status === -1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"red\"\n              }\n            }, \"禁用\")]);\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        width: 250,\n        sortable: true\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 160,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      submitLoading: false,\n      // 添加或编辑提交状态\n      data: [],\n      //表单数据\n      total: 0 // 表单数据总数\n\n    };\n  },\n  methods: {\n    init: function init() {\n      // 获取树数据\n      this.getAllDict(); // 获取表单数据\n\n      this.getDataList();\n    },\n    getAllDict: function getAllDict() {\n      var _this2 = this;\n\n      this.treeLoading = true;\n      (0, _index.getAllDictList)().then(function (res) {\n        _this2.treeLoading = false;\n\n        if (res.success === true) {\n          _this2.treeData = res.result;\n        }\n      });\n    },\n    search: function search() {\n      var _this3 = this;\n\n      // 搜索树\n      if (this.searchKey) {\n        this.treeLoading = true;\n        (0, _index.searchDict)({\n          key: this.searchKey\n        }).then(function (res) {\n          _this3.treeLoading = false;\n\n          if (res.success === true) {\n            _this3.treeData = res.result;\n          }\n        });\n      } else {\n        // 为空重新加载\n        this.getAllDict();\n      }\n    },\n    selectTree: function selectTree(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (var attr in v[0]) {\n          if (v[0][attr] === null) {\n            v[0][attr] = \"\";\n          }\n        }\n\n        var str = JSON.stringify(v[0]);\n        var data = JSON.parse(str);\n        this.selectNode = data;\n        this.dictForm = data;\n        this.editTitle = data.title + \"(\" + data.type + \")\"; // 重新加载表\n\n        this.searchForm.pageNumber = 1;\n        this.searchForm.pageSize = 10;\n        this.getDataList();\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit: function cancelEdit() {\n      var data = this.$refs.tree.getSelectedNodes()[0];\n\n      if (data) {\n        data.selected = false;\n      } // 取消选择后获取全部数据\n\n\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    changeSelect: function changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    changeExpand: function changeExpand() {\n      this.expand = !this.expand;\n\n      if (this.expand) {\n        this.expandIcon = \"ios-arrow-back\";\n        this.span = 18;\n      } else {\n        this.expandIcon = \"ios-arrow-forward\";\n        this.span = 23;\n      }\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList: function getDataList() {\n      var _this4 = this;\n\n      this.loading = true;\n\n      if (this.selectNode.id) {\n        this.searchForm.dictId = this.selectNode.id;\n      } else {\n        delete this.searchForm.dictId;\n      }\n\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n\n      (0, _index.getAllDictDataList)(this.searchForm).then(function (res) {\n        _this4.loading = false;\n\n        if (res.success === true) {\n          _this4.data = res.result.content;\n          _this4.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset: function handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10; // 重新加载数据\n\n      this.getDataList();\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getDataList();\n    },\n    showSelect: function showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    refreshDict: function refreshDict() {\n      this.getAllDict();\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    handleDropdown: function handleDropdown(name) {\n      if (name == \"editDcit\") {\n        if (!this.selectNode.id) {\n          this.$Message.warning(\"您还未选择要编辑的字典\");\n          return;\n        }\n\n        this.editDcit();\n      } else if (name == \"delDcit\") {\n        this.delDcit();\n      } else if (name == \"refreshDcit\") {\n        this.refreshDict();\n      }\n    },\n    addDcit: function addDcit() {\n      this.modalType = 0;\n      this.dictModalTitle = \"添加字典\";\n      this.$refs.dictForm.resetFields();\n      this.dictModalVisible = true;\n    },\n    editDcit: function editDcit() {\n      this.modalType = 1;\n      this.dictModalTitle = \"编辑字典\";\n      this.dictModalVisible = true;\n    },\n    delDcit: function delDcit() {\n      var _this5 = this;\n\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"您还未选择要删除的字典\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        loading: true,\n        content: \"您确认要删除 \" + this.selectNode.title + \" ?\",\n        onOk: function onOk() {\n          // 删除\n          (0, _index.deleteDict)(_this5.selectNode.id).then(function (res) {\n            _this5.$Modal.remove();\n\n            if (res.success === true) {\n              _this5.$Message.success(\"操作成功\");\n\n              _this5.refreshDict();\n            }\n          });\n        }\n      });\n    },\n    add: function add() {\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"请先选择一个字典类别\");\n        return;\n      }\n\n      this.modalType = 0;\n      this.modalTitle = \"添加字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit: function edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields(); // 转换null为\"\"\n\n      for (var attr in v) {\n        if (v[attr] === null) {\n          v[attr] = \"\";\n        }\n      }\n\n      var str = JSON.stringify(v);\n      var data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    handelSubmitDict: function handelSubmitDict() {\n      var _this6 = this;\n\n      this.$refs.dictForm.validate(function (valid) {\n        if (valid) {\n          _this6.submitLoading = true;\n\n          if (_this6.modalType === 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete _this6.dictForm.id;\n            (0, _index.addDict)(_this6.dictForm).then(function (res) {\n              _this6.submitLoading = false;\n\n              if (res.success === true) {\n                _this6.$Message.success(\"操作成功\");\n\n                _this6.getAllDict();\n\n                _this6.dictModalVisible = false;\n              }\n            });\n          } else if (_this6.modalType === 1) {\n            // 编辑\n            (0, _index.editDict)(_this6.dictForm).then(function (res) {\n              _this6.submitLoading = false;\n\n              if (res.success === true) {\n                _this6.$Message.success(\"操作成功\");\n\n                _this6.getAllDict();\n\n                _this6.dictModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    handelSubmit: function handelSubmit() {\n      var _this7 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this7.submitLoading = true;\n\n          if (_this7.modalType === 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete _this7.form.id;\n            _this7.form.dictId = _this7.selectNode.id;\n            (0, _index.addDictData)(_this7.form).then(function (res) {\n              _this7.submitLoading = false;\n\n              if (res.success === true) {\n                _this7.$Message.success(\"操作成功\");\n\n                _this7.getDataList();\n\n                _this7.modalVisible = false;\n              }\n            });\n          } else if (_this7.modalType === 1) {\n            // 编辑\n            (0, _index.editDictData)(_this7.form).then(function (res) {\n              _this7.submitLoading = false;\n\n              if (res.success === true) {\n                _this7.$Message.success(\"操作成功\");\n\n                _this7.getDataList();\n\n                _this7.modalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    remove: function remove(v) {\n      var _this8 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除 \" + v.title + \" ?\",\n        onOk: function onOk() {\n          // 删除\n          _this8.operationLoading = true;\n          (0, _index.deleteData)(v.id).then(function (res) {\n            _this8.operationLoading = false;\n\n            if (res.success === true) {\n              _this8.$Message.success(\"操作成功\");\n\n              _this8.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll: function delAll() {\n      var _this9 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this9.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1); // 批量删除\n\n          _this9.operationLoading = true;\n          (0, _index.deleteData)(ids).then(function (res) {\n            _this9.operationLoading = false;\n\n            if (res.success === true) {\n              _this9.$Message.success(\"操作成功\");\n\n              _this9.clearSelectAll();\n\n              _this9.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    // 计算高度\n    var height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 287) + \"px\";\n    this.init();\n  }\n};\nexports.default = _default;",{"version":3,"sources":["dictManage.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\r\n@import \"./dictManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Card>\r\n      <Row type=\"flex\" justify=\"space-between\" class=\"code-row-bg\">\r\n        <Col v-if=\"expand\" span=\"5\">\r\n          <Row class=\"operation\">\r\n            <Button @click=\"addDcit\" type=\"primary\" icon=\"md-add\">添加字典</Button>\r\n            <Dropdown @on-click=\"handleDropdown\">\r\n              <Button>更多操作\r\n                <Icon type=\"md-arrow-dropdown\"/>\r\n              </Button>\r\n              <DropdownMenu slot=\"list\">\r\n                <DropdownItem name=\"editDcit\">编辑字典</DropdownItem>\r\n                <DropdownItem name=\"delDcit\">删除字典</DropdownItem>\r\n                <DropdownItem name=\"refreshDcit\">刷新</DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </Row>\r\n          <Alert show-icon>\r\n            当前选择：\r\n            <span class=\"select-title\">{{editTitle}}</span>\r\n            <a class=\"select-clear\" v-if=\"editTitle\" @click=\"cancelEdit\">取消选择</a>\r\n          </Alert>\r\n          <Input\r\n            v-model=\"searchKey\"\r\n            suffix=\"ios-search\"\r\n            @on-change=\"search\"\r\n            placeholder=\"输入搜索字典\"\r\n            clearable\r\n          />\r\n          <div class=\"tree-bar\" :style=\"{maxHeight: maxHeight}\">\r\n            <Tree ref=\"tree\" :data=\"treeData\" @on-select-change=\"selectTree\"></Tree>\r\n          </div>\r\n          <Spin size=\"large\" fix v-if=\"treeLoading\"></Spin>\r\n        </Col>\r\n        <div class=\"expand\">\r\n          <Icon :type=\"expandIcon\" size=\"16\" class=\"icon\" @click=\"changeExpand\"/>\r\n        </div>\r\n        <Col :span=\"span\">\r\n          <Row>\r\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"60\" class=\"search-form\">\r\n              <Form-item label=\"数据名称\" prop=\"title\">\r\n                <Input\r\n                  type=\"text\"\r\n                  v-model=\"searchForm.title\"\r\n                  placeholder=\"请输入\"\r\n                  clearable\r\n                  style=\"width: 200px\"\r\n                />\r\n              </Form-item>\r\n              <Form-item label=\"状态\" prop=\"status\">\r\n                <Select\r\n                  v-model=\"searchForm.status\"\r\n                  placeholder=\"请选择\"\r\n                  clearable\r\n                  style=\"width: 200px\"\r\n                >\r\n                  <Option value=\"0\">正常</Option>\r\n                  <Option value=\"-1\">禁用</Option>\r\n                </Select>\r\n              </Form-item>\r\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n                <Button @click=\"handleReset\">重置</Button>\r\n              </Form-item>\r\n            </Form>\r\n          </Row>\r\n          <Row class=\"operation\">\r\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加数据</Button>\r\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n            <Button @click=\"getDataList\" icon=\"md-refresh\">刷新数据</Button>\r\n            <circleLoading v-if=\"operationLoading\"/>\r\n          </Row>\r\n          <Row>\r\n            <Alert show-icon>\r\n              已选择\r\n              <span class=\"select-count\">{{selectCount}}</span> 项\r\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n            </Alert>\r\n          </Row>\r\n          <Row>\r\n            <Table\r\n              :loading=\"loading\"\r\n              border\r\n              :columns=\"columns\"\r\n              :data=\"data\"\r\n              sortable=\"custom\"\r\n              @on-sort-change=\"changeSort\"\r\n              @on-selection-change=\"showSelect\"\r\n              ref=\"table\"\r\n            ></Table>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n            <Page\r\n              :current=\"searchForm.pageNumber\"\r\n              :total=\"total\"\r\n              :page-size=\"searchForm.pageSize\"\r\n              @on-change=\"changePage\"\r\n              @on-page-size-change=\"changePageSize\"\r\n              :page-size-opts=\"[10,20,50]\"\r\n              size=\"small\"\r\n              show-total\r\n              show-elevator\r\n              show-sizer\r\n            ></Page>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n\r\n    <Modal\r\n      :title=\"dictModalTitle\"\r\n      v-model=\"dictModalVisible\"\r\n      :mask-closable=\"false\"\r\n      :width=\"500\"\r\n      :styles=\"{top: '30px'}\"\r\n    >\r\n      <Form ref=\"dictForm\" :model=\"dictForm\" :label-width=\"75\" :rules=\"dictFormValidate\">\r\n        <FormItem label=\"字典名称\" prop=\"title\">\r\n          <Input v-model=\"dictForm.title\"/>\r\n        </FormItem>\r\n        <FormItem label=\"字典类型\" prop=\"type\">\r\n          <Tooltip placement=\"right\" :max-width=\"220\" transfer content=\"建议英文名且需唯一 非开发人员谨慎修改\">\r\n            <Input v-model=\"dictForm.type\" style=\"width:395px\"/>\r\n          </Tooltip>\r\n        </FormItem>\r\n        <FormItem label=\"备注\" prop=\"description\">\r\n          <Input v-model=\"dictForm.description\"/>\r\n        </FormItem>\r\n        <FormItem label=\"排序值\" prop=\"sortOrder\">\r\n          <InputNumber :max=\"1000\" :min=\"0\" v-model=\"dictForm.sortOrder\"></InputNumber>\r\n          <span style=\"margin-left:5px\">值越小越靠前，支持小数</span>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"dictModalVisible=false\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmitDict\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n\r\n    <Modal\r\n      :title=\"modalTitle\"\r\n      v-model=\"modalVisible\"\r\n      :mask-closable=\"false\"\r\n      :width=\"500\"\r\n      :styles=\"{top: '30px'}\"\r\n    >\r\n      <Form ref=\"form\" :model=\"form\" :label-width=\"70\" :rules=\"formValidate\">\r\n        <FormItem label=\"名称\" prop=\"title\">\r\n          <Input v-model=\"form.title\"/>\r\n        </FormItem>\r\n        <FormItem label=\"数据值\" prop=\"value\">\r\n          <Input v-model=\"form.value\"/>\r\n        </FormItem>\r\n        <FormItem label=\"备注\" prop=\"description\">\r\n          <Input v-model=\"form.description\"/>\r\n        </FormItem>\r\n        <FormItem label=\"排序值\" prop=\"sortOrder\">\r\n          <InputNumber :max=\"1000\" :min=\"0\" v-model=\"form.sortOrder\"></InputNumber>\r\n          <span style=\"margin-left:5px\">值越小越靠前，支持小数</span>\r\n        </FormItem>\r\n        <FormItem label=\"是否启用\" prop=\"status\">\r\n          <i-switch size=\"large\" v-model=\"form.status\" :true-value=\"0\" :false-value=\"-1\">\r\n            <span slot=\"open\">启用</span>\r\n            <span slot=\"close\">禁用</span>\r\n          </i-switch>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmit\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAllDictList,\r\n  addDict,\r\n  editDict,\r\n  deleteDict,\r\n  searchDict,\r\n  getAllDictDataList,\r\n  addDictData,\r\n  editDictData,\r\n  deleteData\r\n} from \"@/api/index\";\r\nimport circleLoading from \"@/views/components/custom/circle-loading.vue\";\r\nexport default {\r\n  name: \"dic-manage\",\r\n  components: {\r\n    circleLoading\r\n  },\r\n  data() {\r\n    return {\r\n      treeLoading: false, // 树加载状态\r\n      maxHeight: \"500px\",\r\n      loading: false, // 表格加载状态\r\n      editTitle: \"\", // 编辑节点名称\r\n      searchKey: \"\", // 搜索树\r\n      expand: true,\r\n      span: 18,\r\n      expandIcon: \"ios-arrow-back\",\r\n      selectNode: {},\r\n      treeData: [], // 树数据\r\n      operationLoading: false, // 操作加载状态\r\n      selectCount: 0, // 多选计数\r\n      selectList: [], // 多选数据\r\n      searchForm: {\r\n        // 搜索框对应data对象\r\n        name: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 10, // 页面大小\r\n        sort: \"sortOrder\", // 默认排序字段\r\n        order: \"asc\" // 默认排序方式\r\n      },\r\n      modalType: 0, // 添加或编辑标识\r\n      modalVisible: false, // 添加或编辑显示\r\n      dictModalVisible: false,\r\n      dictModalTitle: \"\",\r\n      modalTitle: \"\", // 添加或编辑标题\r\n      dictForm: {\r\n        title: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        sortOrder: 0\r\n      },\r\n      form: {\r\n        // 添加或编辑表单对象初始化数据\r\n        title: \"\",\r\n        value: \"\",\r\n        status: 0,\r\n        description: \"\",\r\n        sortOrder: 0\r\n      },\r\n      dictFormValidate: {\r\n        // 表单验证规则\r\n        title: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\r\n        type: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\r\n      },\r\n      formValidate: {\r\n        // 表单验证规则\r\n        title: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\r\n        value: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\r\n      },\r\n      columns: [\r\n        // 表头\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"名称\",\r\n          key: \"title\",\r\n          minWidth: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"数据值\",\r\n          key: \"value\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          key: \"description\",\r\n          width: 150,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"排序值\",\r\n          key: \"sortOrder\",\r\n          width: 100,\r\n          sortable: true,\r\n          sortType: \"asc\"\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 130,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"green\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"red\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          width: 250,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 160,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      submitLoading: false, // 添加或编辑提交状态\r\n      data: [], //表单数据\r\n      total: 0 // 表单数据总数\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      // 获取树数据\r\n      this.getAllDict();\r\n      // 获取表单数据\r\n      this.getDataList();\r\n    },\r\n    getAllDict() {\r\n      this.treeLoading = true;\r\n      getAllDictList().then(res => {\r\n        this.treeLoading = false;\r\n        if (res.success === true) {\r\n          this.treeData = res.result;\r\n        }\r\n      });\r\n    },\r\n    search() {\r\n      // 搜索树\r\n      if (this.searchKey) {\r\n        this.treeLoading = true;\r\n        searchDict({ key: this.searchKey }).then(res => {\r\n          this.treeLoading = false;\r\n          if (res.success === true) {\r\n            this.treeData = res.result;\r\n          }\r\n        });\r\n      } else {\r\n        // 为空重新加载\r\n        this.getAllDict();\r\n      }\r\n    },\r\n    selectTree(v) {\r\n      if (v.length > 0) {\r\n        // 转换null为\"\"\r\n        for (let attr in v[0]) {\r\n          if (v[0][attr] === null) {\r\n            v[0][attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v[0]);\r\n        let data = JSON.parse(str);\r\n        this.selectNode = data;\r\n        this.dictForm = data;\r\n        this.editTitle = data.title + \"(\" + data.type + \")\";\r\n        // 重新加载表\r\n        this.searchForm.pageNumber = 1;\r\n        this.searchForm.pageSize = 10;\r\n        this.getDataList();\r\n      } else {\r\n        this.cancelEdit();\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      let data = this.$refs.tree.getSelectedNodes()[0];\r\n      if (data) {\r\n        data.selected = false;\r\n      }\r\n      // 取消选择后获取全部数据\r\n      this.selectNode = {};\r\n      this.editTitle = \"\";\r\n      this.getDataList();\r\n    },\r\n    changeSelect(v) {\r\n      this.selectCount = v.length;\r\n      this.selectList = v;\r\n    },\r\n    changeExpand() {\r\n      this.expand = !this.expand;\r\n      if (this.expand) {\r\n        this.expandIcon = \"ios-arrow-back\";\r\n        this.span = 18;\r\n      } else {\r\n        this.expandIcon = \"ios-arrow-forward\";\r\n        this.span = 23;\r\n      }\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getDataList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getDataList();\r\n    },\r\n    getDataList() {\r\n      this.loading = true;\r\n      if (this.selectNode.id) {\r\n        this.searchForm.dictId = this.selectNode.id;\r\n      } else {\r\n        delete this.searchForm.dictId;\r\n      }\r\n      if (!this.searchForm.status) {\r\n        this.searchForm.status = \"\";\r\n      }\r\n      getAllDictDataList(this.searchForm).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getDataList();\r\n    },\r\n    handleReset() {\r\n      this.$refs.searchForm.resetFields();\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      // 重新加载数据\r\n      this.getDataList();\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getDataList();\r\n    },\r\n    showSelect(e) {\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    refreshDict() {\r\n      this.getAllDict();\r\n      this.selectNode = {};\r\n      this.editTitle = \"\";\r\n      this.getDataList();\r\n    },\r\n    handleDropdown(name) {\r\n      if (name == \"editDcit\") {\r\n        if (!this.selectNode.id) {\r\n          this.$Message.warning(\"您还未选择要编辑的字典\");\r\n          return;\r\n        }\r\n        this.editDcit();\r\n      } else if (name == \"delDcit\") {\r\n        this.delDcit();\r\n      } else if (name == \"refreshDcit\") {\r\n        this.refreshDict();\r\n      }\r\n    },\r\n    addDcit() {\r\n      this.modalType = 0;\r\n      this.dictModalTitle = \"添加字典\";\r\n      this.$refs.dictForm.resetFields();\r\n      this.dictModalVisible = true;\r\n    },\r\n    editDcit() {\r\n      this.modalType = 1;\r\n      this.dictModalTitle = \"编辑字典\";\r\n      this.dictModalVisible = true;\r\n    },\r\n    delDcit() {\r\n      if (!this.selectNode.id) {\r\n        this.$Message.warning(\"您还未选择要删除的字典\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        loading: true,\r\n        content: \"您确认要删除 \" + this.selectNode.title + \" ?\",\r\n        onOk: () => {\r\n          // 删除\r\n          deleteDict(this.selectNode.id).then(res => {\r\n            this.$Modal.remove();\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.refreshDict();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    add() {\r\n      if (!this.selectNode.id) {\r\n        this.$Message.warning(\"请先选择一个字典类别\");\r\n        return;\r\n      }\r\n      this.modalType = 0;\r\n      this.modalTitle = \"添加字典 \" + this.editTitle + \" 的数据\";\r\n      this.$refs.form.resetFields();\r\n      this.modalVisible = true;\r\n    },\r\n    edit(v) {\r\n      this.modalType = 1;\r\n      this.modalTitle = \"编辑字典 \" + this.editTitle + \" 的数据\";\r\n      this.$refs.form.resetFields();\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let data = JSON.parse(str);\r\n      this.form = data;\r\n      this.modalVisible = true;\r\n    },\r\n    handelSubmitDict() {\r\n      this.$refs.dictForm.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          if (this.modalType === 0) {\r\n            // 添加 避免编辑后传入id等数据 记得删除\r\n            delete this.dictForm.id;\r\n            addDict(this.dictForm).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getAllDict();\r\n                this.dictModalVisible = false;\r\n              }\r\n            });\r\n          } else if (this.modalType === 1) {\r\n            // 编辑\r\n            editDict(this.dictForm).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getAllDict();\r\n                this.dictModalVisible = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    handelSubmit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          this.submitLoading = true;\r\n          if (this.modalType === 0) {\r\n            // 添加 避免编辑后传入id等数据 记得删除\r\n            delete this.form.id;\r\n            this.form.dictId = this.selectNode.id;\r\n            addDictData(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getDataList();\r\n                this.modalVisible = false;\r\n              }\r\n            });\r\n          } else if (this.modalType === 1) {\r\n            // 编辑\r\n            editDictData(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getDataList();\r\n                this.modalVisible = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除 \" + v.title + \" ?\",\r\n        onOk: () => {\r\n          // 删除\r\n          this.operationLoading = true;\r\n          deleteData(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          // 批量删除\r\n          this.operationLoading = true;\r\n          deleteData(ids).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.clearSelectAll();\r\n              this.getDataList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    // 计算高度\r\n    let height = document.documentElement.clientHeight;\r\n    this.maxHeight = Number(height-287) + \"px\";\r\n    this.init();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/views/sys/dict-manage"}]}