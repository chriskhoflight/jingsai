{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\home\\components\\countUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\home\\components\\countUp.vue","mtime":1564969187205},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport CountUp from 'countup';\n\nfunction transformValue(val) {\n  var endVal = 0;\n  var unit = '';\n\n  if (val < 1000) {\n    endVal = val;\n  } else if (val >= 1000 && val < 1000000) {\n    endVal = parseInt(val / 1000);\n    unit = 'K+';\n  } else if (val >= 1000000 && val < 10000000000) {\n    endVal = parseInt(val / 1000000);\n    unit = 'M+';\n  } else {\n    endVal = parseInt(val / 1000000000);\n    unit = 'B+';\n  }\n\n  return {\n    val: endVal,\n    unit: unit\n  };\n}\n\nexport default {\n  data: function data() {\n    return {\n      unit: '',\n      demo: {}\n    };\n  },\n  name: 'countUp',\n  props: {\n    idName: String,\n    className: String,\n    startVal: {\n      type: Number,\n      default: 0\n    },\n    endVal: {\n      type: Number,\n      required: true\n    },\n    decimals: {\n      type: Number,\n      default: 0\n    },\n    duration: {\n      type: Number,\n      default: 2\n    },\n    delay: {\n      type: Number,\n      default: 500\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {\n          useEasing: true,\n          useGrouping: true,\n          separator: ',',\n          decimal: '.'\n        };\n      }\n    },\n    color: String,\n    countSize: {\n      type: String,\n      default: '30px'\n    },\n    countWeight: {\n      type: Number,\n      default: 700\n    },\n    introText: [String, Number]\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      setTimeout(function () {\n        var res = transformValue(_this.endVal);\n        var endVal = res.val;\n        _this.unit = res.unit;\n        var demo = {};\n        _this.demo = demo = new CountUp(_this.idName, _this.startVal, endVal, _this.decimals, _this.duration, _this.options);\n\n        if (!demo.error) {\n          demo.start();\n        }\n      }, _this.delay);\n    });\n  },\n  watch: {\n    endVal: function endVal(val) {\n      var res = transformValue(val);\n      var endVal = res.val;\n      this.unit = res.unit;\n      this.demo.update(endVal);\n    }\n  }\n};",null]}