{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\develop\\builder-code\\builderCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\develop\\builder-code\\builderCode.vue","mtime":1564969187189},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getBuilderLog, queryTableList as _queryTableList, builderCode } from \"@/api/index\";\nimport { debug } from 'util';\nexport default {\n  name: \"builder-code\",\n  components: {},\n  data: function data() {\n    return {\n      loading: true,\n      operationLoading: false,\n      selectCount: 0,\n      selectList: [],\n      searchKey: \"\",\n      searchForm: {\n        tableName: \"\",\n        pageNumber: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      //窗口\n      modalType: 0,\n      buildModalVisible: false,\n      modalTitle: \"\",\n      tableSelValues: [],\n      tableList: [],\n      buildForm: {\n        author: '',\n        basePackage: '',\n        tablePre: '',\n        tableName: '',\n        comment: '',\n        tableType: '未创建',\n        tables: [],\n        comments: []\n      },\n      buildFormValidate: {\n        basePackage: [{\n          required: true,\n          message: \"包路径不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      //table 列表字段\n      columns: [{\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"表英文\",\n        key: \"tableName\",\n        minWidth: 80,\n        sortable: true\n      }, {\n        title: \"表中文名\",\n        key: \"comment\",\n        align: \"center\"\n      }, {\n        title: \"表类型\",\n        key: \"tableType\",\n        minWidth: 80,\n        sortable: true\n      }, {\n        title: \"表前缀\",\n        key: \"tablePre\",\n        minWidth: 80,\n        sortable: true\n      }, {\n        title: \"包路径\",\n        key: \"basePackage\",\n        width: 150\n      }, {\n        title: \"作者\",\n        key: \"author\",\n        width: 115,\n        sortable: true\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        width: 150\n      }],\n      data: [],\n      total: 0\n    };\n  },\n  methods: {\n    init: function init() {\n      this.getBuilderLogList();\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getBuilderLogList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getBuilderLogList();\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getBuilderLogList();\n    },\n    showSelect: function showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    getBuilderLogList: function getBuilderLogList() {\n      var _this = this;\n\n      // 多条件搜索用户列表\n      this.loading = true;\n      getBuilderLog(this.searchForm).then(function (res) {\n        _this.loading = false;\n\n        if (res.success === true) {\n          _this.data = res.result.content;\n          _this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getBuilderLogList();\n    },\n    handleReset: function handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10; // 重新加载数据\n\n      this.getBuilderLogList();\n    },\n    queryTableList: function queryTableList() {\n      var _this2 = this;\n\n      _queryTableList().then(function (res) {\n        if (res.success === true) {\n          //console.log(res.result);\n          _this2.tableList = res.result;\n        }\n      });\n    },\n    tableChange: function tableChange(selArray) {\n      var comments = [];\n\n      for (var i = 0; i < selArray.length; i++) {\n        var option = selArray[i];\n        comments.push(option.label);\n      }\n\n      this.buildForm.comments = comments;\n    },\n    //生成代码按钮操作\n    add: function add() {\n      this.modalType = 0;\n      this.modalTitle = \"生成代码\";\n      this.$refs.buildForm.resetFields();\n      this.buildModalVisible = true;\n    },\n    cancelBt: function cancelBt() {\n      this.buildModalVisible = false;\n    },\n    submitBt: function submitBt() {\n      var _this3 = this;\n\n      this.$refs.buildForm.validate(function (valid) {\n        if (valid) {\n          if ('未创建' == _this3.buildForm.tableType) {\n            if ('' == _this3.buildForm.tableName) {\n              _this3.$Message.warning('请输入表英文名');\n\n              return;\n            }\n\n            if ('' == _this3.buildForm.comment) {\n              _this3.$Message.warning('请输入表注解');\n\n              return;\n            }\n          } else {\n            if (null == _this3.buildForm.tables || _this3.buildForm.tables.length == 0) {\n              _this3.$Message.warning('请输入先选择表');\n\n              return;\n            }\n          }\n\n          if (_this3.modalType === 0) {\n            // 添加用户 避免编辑后传入id\n            _this3.submitLoading = true;\n            builderCode(_this3.buildForm).then(function (res) {\n              _this3.submitLoading = false;\n\n              if (res.success === true) {\n                _this3.$Message.success(res.message);\n\n                _this3.getBuilderLogList();\n\n                _this3.buildModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.queryTableList();\n  }\n};",null]}