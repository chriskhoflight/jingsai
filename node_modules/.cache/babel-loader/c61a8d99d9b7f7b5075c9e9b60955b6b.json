{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\components\\shrinkable-menu\\components\\sidebarMenuShrink.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\components\\shrinkable-menu\\components\\sidebarMenuShrink.vue","mtime":1564969187189},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'sidebarMenuShrink',\n  props: {\n    menuList: {\n      type: Array\n    },\n    iconColor: {\n      type: String,\n      default: 'white'\n    },\n    menuTheme: {\n      type: String,\n      default: 'dark'\n    }\n  },\n  methods: {\n    changeMenu: function changeMenu(active) {\n      this.$emit('on-change', active);\n    },\n    itemTitle: function itemTitle(item) {\n      if (_typeof(item.title) === 'object') {\n        return this.$t(item.title.i18n);\n      } else {\n        return item.title;\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["sidebarMenuShrink.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA8BA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAJA;AAQA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AARA,GAFA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,MADA,EACA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,MAAA;AACA,KAHA;AAIA,IAAA,SAJA,qBAIA,IAJA,EAIA;AACA,UAAA,QAAA,IAAA,CAAA,KAAA,MAAA,QAAA,EAAA;AACA,eAAA,KAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AACA,OAFA,MAEA;AACA,eAAA,IAAA,CAAA,KAAA;AACA;AACA;AAVA;AAfA,C","sourcesContent":["<template>\r\n    <div>\r\n        <template v-for=\"(item, index) in menuList\">\r\n            <div style=\"text-align: center;\" :key=\"index\">\r\n                <template v-if=\"item.children && item.children.length > 0\">\r\n                    <Dropdown transfer v-if=\"item.children.length !== 1\" placement=\"right-start\" :key=\"index\" @on-click=\"changeMenu\">\r\n                        <Button style=\"width: 70px;margin-left: -5px;padding:10px 0;\" type=\"text\">\r\n                            <Icon :size=\"20\" :color=\"iconColor\" :type=\"item.icon\"></Icon>\r\n                        </Button>\r\n                        <DropdownMenu style=\"width: 200px;\" slot=\"list\">\r\n                            <template v-for=\"(child, i) in item.children\">\r\n                                <DropdownItem :name=\"child.name\" :key=\"i\"><Icon :type=\"child.icon\"></Icon><span style=\"padding-left:10px;\">{{ itemTitle(child) }}</span></DropdownItem>\r\n                            </template>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                    <Dropdown transfer v-else placement=\"right-start\" :key=\"index\" @on-click=\"changeMenu\">\r\n                        <Button @click=\"changeMenu(item.children[0].name)\" style=\"width: 70px;margin-left: -5px;padding:10px 0;\" type=\"text\">\r\n                            <Icon :size=\"20\" :color=\"iconColor\" :type=\"item.children[0].icon || item.icon\"></Icon>\r\n                        </Button>\r\n                        <DropdownMenu style=\"width: 200px;\" slot=\"list\">\r\n                            <DropdownItem :name=\"item.children[0].name\" :key=\"'d' + index\"><Icon :type=\"item.children[0].icon || item.icon\"></Icon><span style=\"padding-left:10px;\">{{ itemTitle(item.children[0]) }}</span></DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </template>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'sidebarMenuShrink',\r\n    props: {\r\n        menuList: {\r\n            type: Array\r\n        },\r\n        iconColor: {\r\n            type: String,\r\n            default: 'white'\r\n        },\r\n        menuTheme: {\r\n            type: String,\r\n            default: 'dark'\r\n        }\r\n    },\r\n    methods: {\r\n        changeMenu (active) {\r\n            this.$emit('on-change', active);\r\n        },\r\n        itemTitle (item) {\r\n            if (typeof item.title === 'object') {\r\n                return this.$t(item.title.i18n);\r\n            } else {\r\n                return item.title;\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/components/shrinkable-menu/components"}]}