{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\custom\\user-choose.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\custom\\user-choose.vue","mtime":1564969187189},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getUserListData, getDictDataByType } from \"@/api/index\";\nimport departmentChoose from \"./department-choose\";\nexport default {\n  name: \"userChoose\",\n  components: {\n    departmentChoose: departmentChoose\n  },\n  props: {\n    buttonText: {\n      type: String,\n      default: \"选择用户\"\n    },\n    icon: {\n      type: String,\n      default: \"md-person-add\"\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      userLoading: true,\n      userModalVisible: false,\n      selectUsers: [],\n      searchUserForm: {\n        username: \"\",\n        type: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 9,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\" // 默认排序方式\n\n      },\n      userColumns: [{\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"用户名\",\n        key: \"username\",\n        width: 145,\n        sortable: true\n      }, {\n        title: \"头像\",\n        key: \"avatar\",\n        width: 80,\n        align: \"center\",\n        render: function render(h, params) {\n          return h(\"Avatar\", {\n            props: {\n              src: params.row.avatar\n            }\n          });\n        }\n      }, {\n        title: \"所属部门\",\n        key: \"departmentTitle\",\n        width: 120\n      }, {\n        title: \"手机\",\n        key: \"mobile\",\n        width: 115,\n        sortable: true\n      }, {\n        title: \"邮箱\",\n        key: \"email\",\n        width: 180,\n        sortable: true\n      }, {\n        title: \"性别\",\n        key: \"sex\",\n        width: 70,\n        align: \"center\",\n        render: function render(h, params) {\n          var re = \"\";\n\n          _this.dictSex.forEach(function (e) {\n            if (e.value == params.row.sex) {\n              re = e.title;\n            }\n          });\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"用户类型\",\n        key: \"type\",\n        align: \"center\",\n        width: 100,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.type === 1) {\n            re = \"管理员\";\n          } else if (params.row.type === 0) {\n            re = \"普通用户\";\n          }\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 120,\n        render: function render(h, params) {\n          if (params.row.status === 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"green\"\n              }\n            }, \"正常启用\")]);\n          } else if (params.row.status === -1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"red\"\n              }\n            }, \"禁用\")]);\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        width: 150\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 130,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"info\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.chooseUser(params.row);\n              }\n            }\n          }, \"添加该用户\")]);\n        }\n      }],\n      userData: [],\n      totalUser: 0,\n      dictMessageType: []\n    };\n  },\n  methods: {\n    getDictDataType: function getDictDataType() {\n      var _this2 = this;\n\n      getDictDataByType(\"message_type\").then(function (res) {\n        if (res.success) {\n          _this2.dictMessageType = res.result;\n        }\n      }); // 获取性别字典数据\n\n      getDictDataByType(\"sex\").then(function (res) {\n        if (res.success) {\n          _this2.dictSex = res.result;\n        }\n      });\n    },\n    handleSelectDep: function handleSelectDep(v) {\n      this.searchUserForm.departmentId = v;\n    },\n    changeUserPage: function changeUserPage(v) {\n      this.searchUserForm.pageNumber = v;\n      this.getUserDataList();\n    },\n    changeUserPageSize: function changeUserPageSize(v) {\n      this.searchUserForm.pageSize = v;\n      this.getUserDataList();\n    },\n    getUserDataList: function getUserDataList() {\n      var _this3 = this;\n\n      this.userLoading = true;\n      getUserListData(this.searchUserForm).then(function (res) {\n        _this3.userLoading = false;\n\n        if (res.success === true) {\n          _this3.userData = res.result.content;\n          _this3.totalUser = res.result.totalElements;\n        }\n      });\n    },\n    handleSearchUser: function handleSearchUser() {\n      this.searchUserForm.pageNumber = 1;\n      this.searchUserForm.pageSize = 9;\n      this.getUserDataList();\n    },\n    handleResetUser: function handleResetUser() {\n      this.$refs.searchUserForm.resetFields();\n      this.searchUserForm.pageNumber = 1;\n      this.searchUserForm.pageSize = 9;\n      this.$refs.dep.clearSelect();\n      this.searchUserForm.departmentId = \"\"; // 重新加载数据\n\n      this.getUserDataList();\n    },\n    setSelectUser: function setSelectUser(v) {\n      this.selectUsers = v; // this.$emit(\"on-change\", this.selectUsers);\n    },\n    setSelectAllUser: function setSelectAllUser() {\n      var data = [];\n      this.userData.forEach(function (e) {\n        var u = {\n          id: e.id,\n          username: e.username\n        };\n        data.push(u);\n      });\n      this.selectUsers = data;\n      this.$emit(\"on-change\", data);\n    },\n    chooseUser: function chooseUser(v) {\n      // 去重\n      var that = this;\n      var flag = true;\n      this.selectUsers.forEach(function (e) {\n        if (v.id == e.id) {\n          that.$Message.warning(\"已经添加过啦，请勿重复选择\");\n          flag = false;\n        }\n      });\n\n      if (flag) {\n        var u = {\n          id: v.id,\n          username: v.username\n        };\n        this.selectUsers.push(u);\n        this.$emit(\"on-change\", this.selectUsers);\n        this.$Message.success(\"\\u6DFB\\u52A0\\u7528\\u6237 \".concat(v.username, \" \\u6210\\u529F\"));\n      }\n    },\n    clearSelectUser: function clearSelectUser() {\n      this.selectUsers = [];\n      this.$emit(\"on-change\", this.selectUsers);\n    },\n    handleCancelUser: function handleCancelUser(e, id) {\n      // 删除所选用户\n      var newArray = [];\n      this.selectUsers.forEach(function (e) {\n        if (id != e.id) {\n          newArray.push(e);\n        }\n      });\n      this.selectUsers = newArray;\n      this.$emit(\"on-change\", this.selectUsers);\n      this.$Message.success(\"删除所选用户成功\");\n    }\n  },\n  created: function created() {\n    this.getDictDataType();\n    this.getUserDataList();\n  }\n};",null]}