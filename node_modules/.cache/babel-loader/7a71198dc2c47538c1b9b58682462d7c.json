{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\sys\\log-manage\\logManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\sys\\log-manage\\logManage.vue","mtime":1564969187236},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = require(\"@/api/index\");\n\nvar _circleLoading = _interopRequireDefault(require(\"@/views/components/custom/circle-loading.vue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"role-manage\",\n  components: {\n    circleLoading: _circleLoading.default\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      loading: true,\n      operationLoading: false,\n      selectList: [],\n      selectCount: 0,\n      selectDate: null,\n      searchKey: \"\",\n      searchForm: {\n        type: 1,\n        pageNumber: 1,\n        pageSize: 10,\n        startDate: \"\",\n        endDate: \"\",\n        sort: \"createTime\",\n        order: \"desc\"\n      },\n      columns: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"操作名称\",\n        key: \"name\",\n        width: 110,\n        sortable: true,\n        fixed: \"left\"\n      }, {\n        title: \"请求类型\",\n        key: \"requestType\",\n        width: 120,\n        align: \"center\",\n        sortable: true,\n        filters: [{\n          label: \"GET\",\n          value: \"GET\"\n        }, {\n          label: \"POST\",\n          value: \"POST\"\n        }, {\n          label: \"PUT\",\n          value: \"PUT\"\n        }, {\n          label: \"DELETE\",\n          value: \"DELETE\"\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === \"GET\") {\n            return row.requestType === \"GET\";\n          } else if (value === \"POST\") {\n            return row.requestType === \"POST\";\n          } else if (value === \"PUT\") {\n            return row.requestType === \"PUT\";\n          } else if (value === \"DELETE\") {\n            return row.requestType === \"DELETE\";\n          }\n        }\n      }, {\n        title: \"请求路径\",\n        width: 150,\n        key: \"requestUrl\"\n      }, {\n        title: \"请求参数\",\n        minWidth: 200,\n        key: \"requestParam\",\n        tooltip: true\n      }, {\n        title: \"登录用户\",\n        key: \"username\",\n        width: 105,\n        sortable: true\n      }, {\n        title: \"IP\",\n        key: \"ip\",\n        width: 120,\n        sortable: true\n      }, {\n        title: \"IP信息\",\n        key: \"ipInfo\",\n        width: 100,\n        sortable: true\n      }, {\n        title: \"耗时(毫秒)\",\n        key: \"costTime\",\n        width: 130,\n        sortable: true,\n        align: \"center\",\n        filters: [{\n          label: \"≤1000毫秒\",\n          value: 0\n        }, {\n          label: \">1000毫秒\",\n          value: 1\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 0) {\n            return row.costTime <= 1000;\n          } else if (value === 1) {\n            return row.costTime > 1000;\n          }\n        }\n      }, {\n        title: \"日志类型\",\n        key: \"logType\",\n        align: \"center\",\n        width: 110,\n        render: function render(h, params) {\n          if (params.row.logType == 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"blue\"\n              }\n            }, \"操作日志\")]);\n          } else if (params.row.logType == 1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"green\"\n              }\n            }, \"登陆日志\")]);\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        width: 150,\n        sortType: \"desc\"\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 98,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      total: 0\n    };\n  },\n  methods: {\n    init: function init() {\n      this.getLogList();\n    },\n    changeTab: function changeTab(v) {\n      if (v == \"login\") {\n        this.searchForm.type = 1;\n      } else if (v == \"operation\") {\n        this.searchForm.type = 0;\n      }\n\n      this.getLogList();\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getLogList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getLogList();\n    },\n    selectDateRange: function selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getLogList();\n    },\n    getLogList: function getLogList() {\n      var _this2 = this;\n\n      this.loading = true;\n      this.searchForm.key = this.searchKey;\n      (0, _index.getLogListData)(this.searchForm).then(function (res) {\n        _this2.loading = false;\n\n        if (res.success === true) {\n          _this2.data = res.result.content;\n          _this2.total = res.result.totalElements;\n        }\n      });\n    },\n    handleReset: function handleReset() {\n      this.searchKey = \"\";\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.getLogList();\n    },\n    remove: function remove(v) {\n      var _this3 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除该条数据?\",\n        onOk: function onOk() {\n          _this3.operationLoading = true;\n          (0, _index.deleteLog)(v.id).then(function (res) {\n            _this3.operationLoading = false;\n\n            if (res.success === true) {\n              _this3.$Message.success(\"删除成功\");\n\n              _this3.init();\n            }\n          });\n        }\n      });\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    changeSelect: function changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getLogList();\n    },\n    delAll: function delAll() {\n      var _this4 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this4.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1);\n          _this4.operationLoading = true;\n          (0, _index.deleteLog)(ids).then(function (res) {\n            _this4.operationLoading = false;\n\n            if (res.success === true) {\n              _this4.$Message.success(\"删除成功\");\n\n              _this4.clearSelectAll();\n\n              _this4.init();\n            }\n          });\n        }\n      });\n    },\n    clearAll: function clearAll() {\n      var _this5 = this;\n\n      this.$Modal.confirm({\n        title: \"请谨慎进行此操作！\",\n        content: \"您确认要彻底清空删除所有数据?\",\n        onOk: function onOk() {\n          _this5.loading = true;\n          var ids = \"\";\n\n          _this5.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1);\n          (0, _index.deleteAllLog)().then(function (res) {\n            _this5.loading = false;\n\n            if (res.success === true) {\n              _this5.$Message.success(\"清空日志成功\");\n\n              _this5.clearSelectAll();\n\n              _this5.init();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n};\nexports.default = _default;",{"version":3,"sources":["logManage.vue"],"names":[],"mappings":";;;;;;;AAmDA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eACA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AAAA;;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,gBAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,CAJA;AAKA,MAAA,UAAA,EAAA,IALA;AAMA,MAAA,SAAA,EAAA,EANA;AAOA,MAAA,UAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,UAAA,EAAA,CAFA;AAGA,QAAA,QAAA,EAAA,EAHA;AAIA,QAAA,SAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,IAAA,EAAA,YANA;AAOA,QAAA,KAAA,EAAA;AAPA,OAPA;AAgBA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OADA,EAOA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAPA,EAaA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,KAAA,EAAA;AALA,OAbA,EAoBA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,aAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,KAAA,EAAA,QAJA;AAKA,QAAA,QAAA,EAAA,IALA;AAMA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,KAAA,EAAA;AAFA,SADA,EAKA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,KAAA,EAAA;AAFA,SALA,EASA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,KAAA,EAAA;AAFA,SATA,EAaA;AACA,UAAA,KAAA,EAAA,QADA;AAEA,UAAA,KAAA,EAAA;AAFA,SAbA,CANA;AAwBA,QAAA,cAAA,EAAA,KAxBA;AAyBA,QAAA,YAzBA,wBAyBA,KAzBA,EAyBA,GAzBA,EAyBA;AACA,cAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,GAAA,CAAA,WAAA,KAAA,KAAA;AACA,WAFA,MAEA,IAAA,KAAA,KAAA,MAAA,EAAA;AACA,mBAAA,GAAA,CAAA,WAAA,KAAA,MAAA;AACA,WAFA,MAEA,IAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,GAAA,CAAA,WAAA,KAAA,KAAA;AACA,WAFA,MAEA,IAAA,KAAA,KAAA,QAAA,EAAA;AACA,mBAAA,GAAA,CAAA,WAAA,KAAA,QAAA;AACA;AACA;AAnCA,OApBA,EAyDA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,KAAA,EAAA,GAFA;AAGA,QAAA,GAAA,EAAA;AAHA,OAzDA,EA8DA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,QAAA,EAAA,GAFA;AAGA,QAAA,GAAA,EAAA,cAHA;AAIA,QAAA,OAAA,EAAA;AAJA,OA9DA,EAoEA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,UAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OApEA,EA0EA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,IAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OA1EA,EAgFA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OAhFA,EAsFA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,GAAA,EAAA,UAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,KAAA,EAAA,QALA;AAMA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,SADA;AAEA,UAAA,KAAA,EAAA;AAFA,SADA,EAKA;AACA,UAAA,KAAA,EAAA,SADA;AAEA,UAAA,KAAA,EAAA;AAFA,SALA,CANA;AAgBA,QAAA,cAAA,EAAA,KAhBA;AAiBA,QAAA,YAjBA,wBAiBA,KAjBA,EAiBA,GAjBA,EAiBA;AACA,cAAA,KAAA,KAAA,CAAA,EAAA;AACA,mBAAA,GAAA,CAAA,QAAA,IAAA,IAAA;AACA,WAFA,MAEA,IAAA,KAAA,KAAA,CAAA,EAAA;AACA,mBAAA,GAAA,CAAA,QAAA,GAAA,IAAA;AACA;AACA;AAvBA,OAtFA,EA+GA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,SAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,OAAA,IAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CACA,CAAA,CACA,KADA,EAEA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,KAAA,EAAA;AADA;AADA,aAFA,EAOA,MAPA,CADA,CAAA,CAAA;AAWA,WAZA,MAYA,IAAA,MAAA,CAAA,GAAA,CAAA,OAAA,IAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CACA,CAAA,CACA,KADA,EAEA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,KAAA,EAAA;AADA;AADA,aAFA,EAOA,MAPA,CADA,CAAA,CAAA;AAWA;AACA;AA/BA,OA/GA,EAgJA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,YAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,QAAA,EAAA;AALA,OAhJA,EAuJA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,QAJA;AAKA,QAAA,KAAA,EAAA,OALA;AAMA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,iBAAA,CAAA,CAAA,KAAA,EAAA,CACA,CAAA,CACA,QADA,EAEA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,OADA;AAEA,cAAA,IAAA,EAAA;AAFA,aADA;AAKA,YAAA,EAAA,EAAA;AACA,cAAA,KAAA,EAAA,iBAAA;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA;AACA;AAHA;AALA,WAFA,EAaA,IAbA,CADA,CAAA,CAAA;AAiBA;AAxBA,OAvJA,CAhBA;AAkMA,MAAA,IAAA,EAAA,EAlMA;AAmMA,MAAA,KAAA,EAAA;AAnMA,KAAA;AAqMA,GA3MA;AA4MA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,UAAA;AACA,KAHA;AAIA,IAAA,SAJA,qBAIA,CAJA,EAIA;AACA,UAAA,CAAA,IAAA,OAAA,EAAA;AACA,aAAA,UAAA,CAAA,IAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,CAAA,IAAA,WAAA,EAAA;AACA,aAAA,UAAA,CAAA,IAAA,GAAA,CAAA;AACA;;AACA,WAAA,UAAA;AACA,KAXA;AAYA,IAAA,UAZA,sBAYA,CAZA,EAYA;AACA,WAAA,UAAA,CAAA,UAAA,GAAA,CAAA;AACA,WAAA,UAAA;AACA,WAAA,cAAA;AACA,KAhBA;AAiBA,IAAA,cAjBA,0BAiBA,CAjBA,EAiBA;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,CAAA;AACA,WAAA,UAAA;AACA,KApBA;AAqBA,IAAA,eArBA,2BAqBA,CArBA,EAqBA;AACA,UAAA,CAAA,EAAA;AACA,aAAA,UAAA,CAAA,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,aAAA,UAAA,CAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,KA1BA;AA2BA,IAAA,YA3BA,0BA2BA;AACA,WAAA,UAAA,CAAA,UAAA,GAAA,CAAA;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,EAAA;AACA,WAAA,UAAA;AACA,KA/BA;AAgCA,IAAA,UAhCA,wBAgCA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,UAAA,CAAA,GAAA,GAAA,KAAA,SAAA;AACA,iCAAA,KAAA,UAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CAAA,MAAA,CAAA,aAAA;AACA;AACA,OANA;AAOA,KA1CA;AA2CA,IAAA,WA3CA,yBA2CA;AACA,WAAA,SAAA,GAAA,EAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,UAAA,CAAA,SAAA,GAAA,EAAA;AACA,WAAA,UAAA,CAAA,OAAA,GAAA,EAAA;AACA,WAAA,UAAA;AACA,KAjDA;AAkDA,IAAA,MAlDA,kBAkDA,CAlDA,EAkDA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,aAFA;AAGA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,gCAAA,CAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,IAAA;AACA;AACA,WANA;AAOA;AAZA,OAAA;AAcA,KAjEA;AAkEA,IAAA,cAlEA,4BAkEA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA,KApEA;AAqEA,IAAA,YArEA,wBAqEA,CArEA,EAqEA;AACA,WAAA,UAAA,GAAA,CAAA;AACA,WAAA,WAAA,GAAA,CAAA,CAAA,MAAA;AACA,KAxEA;AAyEA,IAAA,UAzEA,sBAyEA,CAzEA,EAyEA;AACA,WAAA,UAAA,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,CAAA,CAAA,KAAA;;AACA,UAAA,CAAA,CAAA,KAAA,KAAA,QAAA,EAAA;AACA,aAAA,UAAA,CAAA,KAAA,GAAA,EAAA;AACA;;AACA,WAAA,UAAA;AACA,KAhFA;AAiFA,IAAA,MAjFA,oBAiFA;AAAA;;AACA,UAAA,KAAA,WAAA,IAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,aAAA;AACA;AACA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,eAAA,KAAA,WAAA,GAAA,OAFA;AAGA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,GAAA,GAAA,EAAA;;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,GAAA,IAAA,CAAA,CAAA,EAAA,GAAA,GAAA;AACA,WAFA;;AAGA,UAAA,GAAA,GAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,gCAAA,GAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,cAAA;;AACA,cAAA,MAAA,CAAA,IAAA;AACA;AACA,WAPA;AAQA;AAlBA,OAAA;AAoBA,KA1GA;AA2GA,IAAA,QA3GA,sBA2GA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,WADA;AAEA,QAAA,OAAA,EAAA,iBAFA;AAGA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,IAAA;AACA,cAAA,GAAA,GAAA,EAAA;;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,GAAA,IAAA,CAAA,CAAA,EAAA,GAAA,GAAA;AACA,WAFA;;AAGA,UAAA,GAAA,GAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,qCAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA;;AACA,cAAA,MAAA,CAAA,cAAA;;AACA,cAAA,MAAA,CAAA,IAAA;AACA;AACA,WAPA;AAQA;AAlBA,OAAA;AAoBA;AAhIA,GA5MA;AA8UA,EAAA,OA9UA,qBA8UA;AACA,SAAA,IAAA;AACA;AAhVA,C","sourcesContent":["<style lang=\"less\">\r\n@import \"./logManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          <Tabs :animated=\"false\" @on-click=\"changeTab\">\r\n            <TabPane label=\"登陆日志\" name=\"login\">\r\n            </TabPane>\r\n            <TabPane label=\"操作日志\" name=\"operation\">\r\n            </TabPane>\r\n          </Tabs>\r\n          <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\" class=\"search-form\">\r\n            <Form-item label=\"搜索日志\">\r\n              <Input type=\"text\" v-model=\"searchKey\" clearable placeholder=\"请输入搜索关键词\" style=\"width: 200px\"/>\r\n            </Form-item>\r\n            <Form-item label=\"创建时间\">\r\n              <DatePicker type=\"daterange\" v-model=\"selectDate\" format=\"yyyy-MM-dd\" clearable @on-change=\"selectDateRange\" placeholder=\"选择起始时间\" style=\"width: 200px\"></DatePicker>\r\n            </Form-item>\r\n            <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n              <Button @click=\"handleSearch\"  type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n              <Button @click=\"handleReset\" >重置</Button>\r\n            </Form-item>\r\n          </Form>\r\n          <Row class=\"operation\">\r\n            <Button @click=\"clearAll\" type=\"error\" icon=\"md-trash\" v-has=\"'clear'\">清空全部</Button>\r\n            <Button @click=\"delAll\" icon=\"md-trash\" v-has=\"'delete'\">批量删除</Button>\r\n            <Button @click=\"getLogList\" icon=\"md-refresh\">刷新</Button>\r\n            <circleLoading v-if=\"operationLoading\"/>\r\n          </Row>\r\n          <Row>\r\n            <Alert show-icon>\r\n              已选择 <span class=\"select-count\">{{selectCount}}</span> 项\r\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n            </Alert>\r\n          </Row>\r\n          <Row>\r\n            <Table :loading=\"loading\" border :columns=\"columns\" :data=\"data\" ref=\"table\" sortable=\"custom\" @on-sort-change=\"changeSort\" @on-selection-change=\"changeSelect\"></Table>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n            <Page :current=\"searchForm.pageNumber\" :total=\"total\" :page-size=\"searchForm.pageSize\" @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" :page-size-opts=\"[10,20,50]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLogListData, deleteLog, deleteAllLog } from \"@/api/index\";\r\nimport circleLoading from \"@/views/components/custom/circle-loading.vue\";\r\nexport default {\r\n  name: \"role-manage\",\r\n  components: {\r\n    circleLoading\r\n  },\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      operationLoading: false,\r\n      selectList: [],\r\n      selectCount: 0,\r\n      selectDate: null,\r\n      searchKey: \"\",\r\n      searchForm: {\r\n        type: 1,\r\n        pageNumber: 1,\r\n        pageSize: 10,\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        sort: \"createTime\",\r\n        order: \"desc\"\r\n      },\r\n      columns: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"操作名称\",\r\n          key: \"name\",\r\n          width: 110,\r\n          sortable: true,\r\n          fixed: \"left\"\r\n        },\r\n        {\r\n          title: \"请求类型\",\r\n          key: \"requestType\",\r\n          width: 120,\r\n          align: \"center\",\r\n          sortable: true,\r\n          filters: [\r\n            {\r\n              label: \"GET\",\r\n              value: \"GET\"\r\n            },\r\n            {\r\n              label: \"POST\",\r\n              value: \"POST\"\r\n            },\r\n            {\r\n              label: \"PUT\",\r\n              value: \"PUT\"\r\n            },\r\n            {\r\n              label: \"DELETE\",\r\n              value: \"DELETE\"\r\n            }\r\n          ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n            if (value === \"GET\") {\r\n              return row.requestType === \"GET\";\r\n            } else if (value === \"POST\") {\r\n              return row.requestType === \"POST\";\r\n            } else if (value === \"PUT\") {\r\n              return row.requestType === \"PUT\";\r\n            } else if (value === \"DELETE\") {\r\n              return row.requestType === \"DELETE\";\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"请求路径\",\r\n          width: 150,\r\n          key: \"requestUrl\"\r\n        },\r\n        {\r\n          title: \"请求参数\",\r\n          minWidth: 200,\r\n          key: \"requestParam\",\r\n          tooltip: true\r\n        },\r\n        {\r\n          title: \"登录用户\",\r\n          key: \"username\",\r\n          width: 105,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"IP\",\r\n          key: \"ip\",\r\n          width: 120,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"IP信息\",\r\n          key: \"ipInfo\",\r\n          width: 100,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"耗时(毫秒)\",\r\n          key: \"costTime\",\r\n          width: 130,\r\n          sortable: true,\r\n          align: \"center\",\r\n          filters: [\r\n            {\r\n              label: \"≤1000毫秒\",\r\n              value: 0\r\n            },\r\n            {\r\n              label: \">1000毫秒\",\r\n              value: 1\r\n            }\r\n          ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n            if (value === 0) {\r\n              return row.costTime <= 1000;\r\n            } else if (value === 1) {\r\n              return row.costTime > 1000;\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"日志类型\",\r\n          key: \"logType\",\r\n          align: \"center\",\r\n          width: 110,\r\n          render: (h, params) => {\r\n            if (params.row.logType == 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"blue\"\r\n                    }\r\n                  },\r\n                  \"操作日志\"\r\n                )\r\n              ]);\r\n            } else if (params.row.logType == 1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"green\"\r\n                    }\r\n                  },\r\n                  \"登陆日志\"\r\n                )\r\n              ]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          width: 150,\r\n          sortType: \"desc\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 98,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      data: [],\r\n      total: 0\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getLogList();\r\n    },\r\n    changeTab(v) {\r\n      if (v == \"login\") {\r\n        this.searchForm.type = 1;\r\n      } else if (v == \"operation\") {\r\n        this.searchForm.type = 0;\r\n      }\r\n      this.getLogList();\r\n    },\r\n    changePage(v) {\r\n      this.searchForm.pageNumber = v;\r\n      this.getLogList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.searchForm.pageSize = v;\r\n      this.getLogList();\r\n    },\r\n    selectDateRange(v) {\r\n      if (v) {\r\n        this.searchForm.startDate = v[0];\r\n        this.searchForm.endDate = v[1];\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.searchForm.pageNumber = 1;\r\n      this.searchForm.pageSize = 10;\r\n      this.getLogList();\r\n    },\r\n    getLogList() {\r\n      this.loading = true;\r\n      this.searchForm.key = this.searchKey;\r\n      getLogListData(this.searchForm).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleReset() {\r\n      this.searchKey = \"\";\r\n      this.selectDate = null;\r\n      this.searchForm.startDate = \"\";\r\n      this.searchForm.endDate = \"\";\r\n      this.getLogList();\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除该条数据?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          deleteLog(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.init();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    changeSelect(e) {\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    changeSort(e) {\r\n      this.searchForm.sort = e.key;\r\n      this.searchForm.order = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.searchForm.order = \"\";\r\n      }\r\n      this.getLogList();\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          this.operationLoading = true;\r\n          deleteLog(ids).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.clearSelectAll();\r\n              this.init();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    clearAll() {\r\n      this.$Modal.confirm({\r\n        title: \"请谨慎进行此操作！\",\r\n        content: \"您确认要彻底清空删除所有数据?\",\r\n        onOk: () => {\r\n          this.loading = true;\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          deleteAllLog().then(res => {\r\n            this.loading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"清空日志成功\");\r\n              this.clearSelectAll();\r\n              this.init();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/views/sys/log-manage"}]}