{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\router\\router.js","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\router\\router.js","mtime":1566349325053},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.routers = exports.appRouter = exports.otherRouter = exports.wxSeeContentRouter = exports.locking = exports.page500 = exports.page403 = exports.registResult = exports.registRouter = exports.loginRouter = void 0;\n\nvar _Main = _interopRequireDefault(require(\"@/views/Main.vue\"));\n\nvar _AppMain = _interopRequireDefault(require(\"@/views/AppMain.vue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n// 不作为Main组件的子页面展示的页面单独写，如下\nvar loginRouter = {\n  path: '/login',\n  name: 'login',\n  meta: {\n    title: '登录'\n  },\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require('@/views/login/login.vue'));\n    });\n  }\n};\nexports.loginRouter = loginRouter;\nvar registRouter = {\n  path: '/regist',\n  name: 'regist',\n  meta: {\n    title: '注册'\n  },\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require('@/views/login/regist.vue'));\n    });\n  }\n};\nexports.registRouter = registRouter;\nvar registResult = {\n  path: '/regist-result',\n  name: 'regist-result',\n  meta: {\n    title: '注册结果'\n  },\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require('@/views/login/regist-result.vue'));\n    });\n  }\n}; // export const page404 = {\n//     path: '/*',\n//     name: 'error-404',\n//     meta: {\n//         title: '404-页面不存在'\n//     },\n//     component: () => import('@/views/common/error-page/404.vue')\n// };\n\nexports.registResult = registResult;\nvar page403 = {\n  path: '/403',\n  meta: {\n    title: '403-权限不足'\n  },\n  name: 'error-403',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require('@/views/common/error-page/403.vue'));\n    });\n  }\n};\nexports.page403 = page403;\nvar page500 = {\n  path: '/500',\n  meta: {\n    title: '500-服务端错误'\n  },\n  name: 'error-500',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require('@/views/common/error-page/500.vue'));\n    });\n  }\n};\nexports.page500 = page500;\nvar locking = {\n  path: '/locking',\n  name: 'locking',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require('@/views/components/lockscreen/components/locking-page.vue'));\n    });\n  }\n}; // gxr添加无需登录可以访问组件\n\nexports.locking = locking;\nvar wxSeeContentRouter = {\n  path: '/wxSeeContent',\n  name: 'wxSeeContent',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return _interopRequireWildcard(require('@/views/lsbusiness/publish/wxSeeContent.vue'));\n    });\n  }\n}; // 作为Main组件的子页面展示但是不在左侧菜单显示的路由写在otherRouter里\n\nexports.wxSeeContentRouter = wxSeeContentRouter;\nvar otherRouter = {\n  path: '/',\n  name: 'otherRouter',\n  redirect: '/home',\n  component: _AppMain.default,\n  children: [{\n    path: 'home',\n    title: {\n      i18n: 'home'\n    },\n    name: 'home_index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return _interopRequireWildcard(require('@/views/home/home.vue'));\n      });\n    }\n  }, {\n    path: 'ownspace',\n    title: '个人中心',\n    name: 'ownspace_index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return _interopRequireWildcard(require('@/views/common/own-space/own-space.vue'));\n      });\n    }\n  }, {\n    path: 'change-pass',\n    title: '修改密码',\n    name: 'change_pass',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return _interopRequireWildcard(require('@/views/common/change-pass/change-pass.vue'));\n      });\n    }\n  }, {\n    path: 'message',\n    title: '消息中心',\n    name: 'message_index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return _interopRequireWildcard(require('@/views/common/message/message.vue'));\n      });\n    }\n  }, {\n    path: 'add',\n    title: '添加',\n    name: 'add',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return _interopRequireWildcard(require('@/views/develop/new-window/add.vue'));\n      });\n    }\n  }, {\n    path: 'edit',\n    title: '编辑',\n    name: 'edit',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return _interopRequireWildcard(require('@/views/develop/new-window/edit.vue'));\n      });\n    }\n  }, {\n    path: 'message-send-detail',\n    title: '消息发送详情',\n    name: 'message_send_detail',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return _interopRequireWildcard(require('@/views/sys/message-manage/messageSendDetail.vue'));\n      });\n    }\n  }]\n};\nexports.otherRouter = otherRouter;\nvar appRouter = []; // 所有上面定义的路由都要写在下面的routers里\n//以下配置路由都为白名单\n\nexports.appRouter = appRouter;\nvar routers = [// 公众号菜单访问页面\nloginRouter, registRouter, registResult, otherRouter, locking].concat(appRouter, [// page404,\npage500, page403, wxSeeContentRouter]);\nexports.routers = routers;",{"version":3,"sources":["D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\router\\router.js"],"names":["loginRouter","path","name","meta","title","component","registRouter","registResult","page403","page500","locking","wxSeeContentRouter","otherRouter","redirect","AppMain","children","i18n","appRouter","routers"],"mappings":"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","sourcesContent":["import Main from '@/views/Main.vue';\r\nimport AppMain from '@/views/AppMain.vue';\r\n\r\n// 不作为Main组件的子页面展示的页面单独写，如下\r\nexport const loginRouter = {\r\n    path: '/login',\r\n    name: 'login',\r\n    meta: {\r\n        title: '登录'\r\n    },\r\n    component: () => import('@/views/login/login.vue')\r\n};\r\n\r\nexport const registRouter = {\r\n    path: '/regist',\r\n    name: 'regist',\r\n    meta: {\r\n        title: '注册'\r\n    },\r\n    component: () => import('@/views/login/regist.vue')\r\n};\r\n\r\nexport const registResult = {\r\n    path: '/regist-result',\r\n    name: 'regist-result',\r\n    meta: {\r\n        title: '注册结果'\r\n    },\r\n    component: () => import('@/views/login/regist-result.vue')\r\n};\r\n\r\n \r\n// export const page404 = {\r\n//     path: '/*',\r\n//     name: 'error-404',\r\n//     meta: {\r\n//         title: '404-页面不存在'\r\n//     },\r\n//     component: () => import('@/views/common/error-page/404.vue')\r\n// };\r\n\r\nexport const page403 = {\r\n    path: '/403',\r\n    meta: {\r\n        title: '403-权限不足'\r\n    },\r\n    name: 'error-403',\r\n    component: () => import('@/views/common/error-page/403.vue')\r\n};\r\n\r\nexport const page500 = {\r\n    path: '/500',\r\n    meta: {\r\n        title: '500-服务端错误'\r\n    },\r\n    name: 'error-500',\r\n    component: () => import('@/views/common/error-page/500.vue')\r\n};\r\n\r\nexport const locking = {\r\n    path: '/locking',\r\n    name: 'locking',\r\n    component: () => import('@/views/components/lockscreen/components/locking-page.vue')\r\n};\r\n\r\n// gxr添加无需登录可以访问组件\r\nexport const wxSeeContentRouter = {\r\n    path: '/wxSeeContent',\r\n    name: 'wxSeeContent',\r\n    component: () => import('@/views/lsbusiness/publish/wxSeeContent.vue')\r\n};\r\n\r\n// 作为Main组件的子页面展示但是不在左侧菜单显示的路由写在otherRouter里\r\nexport const otherRouter = {\r\n    path: '/',\r\n    name: 'otherRouter',\r\n    redirect: '/home',\r\n    component: AppMain,\r\n    children: [\r\n        { path: 'home', title: { i18n: 'home' }, name: 'home_index', component: () => import('@/views/home/home.vue') },\r\n        { path: 'ownspace', title: '个人中心', name: 'ownspace_index', component: () => import('@/views/common/own-space/own-space.vue') },\r\n        { path: 'change-pass', title: '修改密码', name: 'change_pass', component: () => import('@/views/common/change-pass/change-pass.vue') },\r\n        { path: 'message', title: '消息中心', name: 'message_index', component: () => import('@/views/common/message/message.vue') },\r\n        { path: 'add', title: '添加', name: 'add', component: () => import('@/views/develop/new-window/add.vue') },\r\n        { path: 'edit', title: '编辑', name: 'edit', component: () => import('@/views/develop/new-window/edit.vue') },\r\n        { path: 'message-send-detail', title: '消息发送详情', name: 'message_send_detail', component: () => import('@/views/sys/message-manage/messageSendDetail.vue') }\r\n    ]\r\n};\r\n\r\n\r\nexport const appRouter = [];\r\n\r\n// 所有上面定义的路由都要写在下面的routers里\r\n//以下配置路由都为白名单\r\nexport const routers = [\r\n    // 公众号菜单访问页面\r\n    loginRouter,\r\n    registRouter,\r\n    registResult,\r\n    otherRouter,\r\n    locking,\r\n    ...appRouter,\r\n    // page404,\r\n    page500,\r\n    page403,\r\n    wxSeeContentRouter,\r\n];\r\n"]}]}