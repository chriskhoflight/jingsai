{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\AppMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\AppMain.vue","mtime":1564969187158},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _appHeader = _interopRequireDefault(require(\"@/views/components/header/app-header\"));\n\nvar _shrinkableMenu = _interopRequireDefault(require(\"@/views/components/shrinkable-menu/shrinkable-menu.vue\"));\n\nvar _tagsPageOpened = _interopRequireDefault(require(\"@/views/components/tags-page-opened.vue\"));\n\nvar _breadcrumbNav = _interopRequireDefault(require(\"@/views/components/breadcrumb-nav.vue\"));\n\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\n\nvar _util = _interopRequireDefault(require(\"@/libs/util.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  components: {\n    appHeader: _appHeader.default,\n    shrinkableMenu: _shrinkableMenu.default,\n    tagsPageOpened: _tagsPageOpened.default,\n    breadcrumbNav: _breadcrumbNav.default\n  },\n  data: function data() {\n    return {\n      shrink: false,\n      openedSubmenuArr: this.$store.state.app.openedSubmenuArr\n    };\n  },\n  computed: {\n    menuList: function menuList() {\n      //根据路由当前路径计算顶级路径,加载整个路由信息\n      var path = this.$route.path;\n      var menuList = this.$store.state.app.menuList;\n      return _util.default.getMenusByPath(menuList, path);\n    },\n    pageTagsList: function pageTagsList() {\n      return this.$store.state.app.pageOpenedList; // 打开的页面的页面对象\n    },\n    currentPath: function currentPath() {\n      return this.$store.state.app.currentPath; // 当前面包屑数组\n    },\n    menuTheme: function menuTheme() {\n      return this.$store.state.app.menuTheme;\n    },\n    cachePage: function cachePage() {\n      return this.$store.state.app.cachePage;\n    }\n  },\n  stompClient: {\n    monitorIntervalTime: 100,\n    stompReconnect: true,\n    timeout: function timeout(orgCmd) {}\n  },\n  methods: {\n    init: function init() {// let pathArr = util.setCurrentPath(this, this.$route.name);\n      // // this.$store.commit(\"updateMenulist\");\n      // if (pathArr.length >= 2) {\n      //   this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      // }\n      // let userInfo = JSON.parse(Cookies.get(\"userInfo\"));\n      // this.username = userInfo.username;\n      // this.userId = userInfo.id;\n      //this.checkTag(this.$route.name);\n    },\n    // checkTag(name) {\n    //   let openpageHasTag = this.pageTagsList.some(item => {\n    //     if (item.name === name) {\n    //       return true;\n    //     }\n    //   });\n    //   if (!openpageHasTag) {\n    //     //  解决关闭当前标签后再点击回退按钮会退到当前页时没有标签的问题\n    //     util.openNewPage(\n    //       this,\n    //       name,\n    //       this.$route.params || {},\n    //       this.$route.query || {}\n    //     );\n    //   }\n    // },\n    handleSubmenuChange: function handleSubmenuChange(val) {// console.log(val)\n    },\n    beforePush: function beforePush(name) {\n      // console.log(name)\n      return true;\n    }\n  },\n  watch: {\n    $route: function $route(to) {\n      this.$store.commit(\"setCurrentPageName\", to.name);\n\n      var pathArr = _util.default.setCurrentPath(this, to.name);\n\n      if (pathArr.length > 2) {\n        this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      } //this.checkTag(to.name);\n\n\n      localStorage.currentPageName = to.name;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  created: function created() {\n    // 显示打开的页面的列表\n    this.$store.commit(\"setOpenedList\");\n  }\n};\nexports.default = _default;",{"version":3,"sources":["AppMain.vue"],"names":[],"mappings":";;;;;;;AAoBA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;eAEA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,kBADA;AAEA,IAAA,cAAA,EAAA,uBAFA;AAGA,IAAA,cAAA,EAAA,uBAHA;AAIA,IAAA,aAAA,EAAA;AAJA,GADA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,gBAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAFA,KAAA;AAIA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA;AACA,UAAA,IAAA,GAAA,KAAA,MAAA,CAAA,IAAA;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA;AACA,aAAA,cAAA,cAAA,CAAA,QAAA,EAAA,IAAA,CAAA;AACA,KANA;AAOA,IAAA,YAPA,0BAOA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,cAAA,CADA,CACA;AACA,KATA;AAUA,IAAA,WAVA,yBAUA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,WAAA,CADA,CACA;AACA,KAZA;AAaA,IAAA,SAbA,uBAaA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,SAAA;AACA,KAfA;AAgBA,IAAA,SAhBA,uBAgBA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,SAAA;AACA;AAlBA,GAbA;AAiCA,EAAA,WAAA,EAAA;AACA,IAAA,mBAAA,EAAA,GADA;AAEA,IAAA,cAAA,EAAA,IAFA;AAGA,IAAA,OAHA,mBAGA,MAHA,EAGA,CAAA;AAHA,GAjCA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,mBA9BA,+BA8BA,GA9BA,EA8BA,CACA;AACA,KAhCA;AAiCA,IAAA,UAjCA,sBAiCA,IAjCA,EAiCA;AACA;AACA,aAAA,IAAA;AACA;AApCA,GAtCA;AA6EA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,EADA,EACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA,EAAA,CAAA,IAAA;;AACA,UAAA,OAAA,GAAA,cAAA,cAAA,CAAA,IAAA,EAAA,EAAA,CAAA,IAAA,CAAA;;AACA,UAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA;AACA,OALA,CAMA;;;AACA,MAAA,YAAA,CAAA,eAAA,GAAA,EAAA,CAAA,IAAA;AACA;AATA,GA7EA;AAwFA,EAAA,OAxFA,qBAwFA;AACA,SAAA,IAAA;AACA,GA1FA;AA2FA,EAAA,OA3FA,qBA2FA;AACA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,eAAA;AACA;AA9FA,C","sourcesContent":["<style lang=\"less\">\r\n@import \"./appMain.less\";\r\n</style>\r\n\r\n<template>\r\n<div class=\"layout\">\r\n  <Layout class=\"main\">\r\n    <Header :style=\"{ position: 'fixed', width: '100%'}\" class=\"main-header\"> \r\n      <app-header ></app-header>\r\n    </Header>\r\n    <Content :style=\"{margin: '80px 0 0 0'}\">\r\n      <keep-alive :include=\"cachePage\">\r\n        <router-view></router-view>\r\n      </keep-alive>\r\n    </Content>\r\n  </Layout>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport appHeader from '@/views/components/header/app-header'\r\nimport shrinkableMenu from \"@/views/components/shrinkable-menu/shrinkable-menu.vue\";\r\nimport tagsPageOpened from \"@/views/components/tags-page-opened.vue\";\r\nimport breadcrumbNav from \"@/views/components/breadcrumb-nav.vue\";\r\n\r\nimport Cookies from \"js-cookie\";\r\nimport util from \"@/libs/util.js\";\r\n\r\nexport default {\r\n  components: {\r\n    appHeader,\r\n    shrinkableMenu,\r\n    tagsPageOpened,\r\n    breadcrumbNav\r\n  },\r\n  data() {\r\n    return {\r\n      shrink: false,\r\n      openedSubmenuArr: this.$store.state.app.openedSubmenuArr\r\n    };\r\n  },\r\n  computed: {\r\n    menuList() {\r\n      //根据路由当前路径计算顶级路径,加载整个路由信息\r\n      var path = this.$route.path;\r\n      var menuList = this.$store.state.app.menuList;\r\n      return util.getMenusByPath(menuList,path);\r\n    },\r\n    pageTagsList() {\r\n      return this.$store.state.app.pageOpenedList; // 打开的页面的页面对象\r\n    },\r\n    currentPath() {\r\n      return this.$store.state.app.currentPath; // 当前面包屑数组\r\n    },\r\n    menuTheme() {\r\n      return this.$store.state.app.menuTheme;\r\n    },\r\n    cachePage() {\r\n      return this.$store.state.app.cachePage;\r\n    },\r\n  },\r\n  stompClient: {\r\n    monitorIntervalTime: 100,\r\n    stompReconnect: true,\r\n    timeout(orgCmd) {}\r\n  },\r\n  methods: {\r\n    init() {\r\n      // let pathArr = util.setCurrentPath(this, this.$route.name);\r\n      // // this.$store.commit(\"updateMenulist\");\r\n      // if (pathArr.length >= 2) {\r\n      //   this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\r\n      // }\r\n      // let userInfo = JSON.parse(Cookies.get(\"userInfo\"));\r\n      // this.username = userInfo.username;\r\n      // this.userId = userInfo.id;\r\n      //this.checkTag(this.$route.name);\r\n    },\r\n\r\n    \r\n    // checkTag(name) {\r\n    //   let openpageHasTag = this.pageTagsList.some(item => {\r\n    //     if (item.name === name) {\r\n    //       return true;\r\n    //     }\r\n    //   });\r\n    //   if (!openpageHasTag) {\r\n    //     //  解决关闭当前标签后再点击回退按钮会退到当前页时没有标签的问题\r\n    //     util.openNewPage(\r\n    //       this,\r\n    //       name,\r\n    //       this.$route.params || {},\r\n    //       this.$route.query || {}\r\n    //     );\r\n    //   }\r\n    // },\r\n    handleSubmenuChange(val) {\r\n      // console.log(val)\r\n    },\r\n    beforePush(name) {\r\n      // console.log(name)\r\n      return true;\r\n    },\r\n    \r\n  },\r\n  watch: {\r\n    $route(to) {\r\n      this.$store.commit(\"setCurrentPageName\", to.name);\r\n      let pathArr = util.setCurrentPath(this, to.name);\r\n      if (pathArr.length > 2) {\r\n        this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\r\n      }\r\n      //this.checkTag(to.name);\r\n      localStorage.currentPageName = to.name;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  created() {\r\n    // 显示打开的页面的列表\r\n    this.$store.commit(\"setOpenedList\");\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views"}]}