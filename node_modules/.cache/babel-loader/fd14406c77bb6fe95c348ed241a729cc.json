{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\publish.vue","mtime":1568024242632},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getContentTypeListData, // 批量删除\nsaveContent } from \"@/api/publishContent\";\nimport { getDictDataByType } from \"@/api/index\";\nimport uploadPicInput from \"@/views/components/custom/upload-pic-input\";\nimport VueUeditorWrap from \"vue-ueditor-wrap\";\nvar base = process.env.VUE_APP_BASE_API;\nvar URL = process.env.NODE_ENV === \"production\" ? \"/rcms-pc-web/\" : \"/\";\nexport default {\n  name: \"publishContent\",\n  components: {\n    VueUeditorWrap: VueUeditorWrap,\n    uploadPicInput: uploadPicInput\n  },\n  data: function data() {\n    return {\n      validModal: false,\n      // 表单验证\n      ruleValidate: {\n        title: [{\n          required: true,\n          message: \"标题不能为空\",\n          trigger: \"blur\"\n        }],\n        author: [{\n          required: true,\n          message: \"作者不能为空\",\n          trigger: \"blur\"\n        }],\n        contentType: [{\n          required: true,\n          message: \"内容类别不能为空\",\n          trigger: \"blur\"\n        }],\n        seoDescription: [{\n          required: true,\n          message: \"摘要不能为空\",\n          trigger: \"blur\"\n        }],\n        content: [{\n          required: true,\n          message: \"正文不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      // 内容表单\n      contentForm: {\n        title: \"\",\n        author: \"\",\n        isPublication: 0,\n        isTop: 0,\n        seoDescription: \"\",\n        seoKeywords: \"\",\n        seoTitle: \"\",\n        content: \"\",\n        url: \"\",\n        contentType: \"\",\n        introductionImg: \"\"\n      },\n      // 发布内容类别\n      dictContentType: [],\n      // 发布按钮加载进度\n      submitLoading: false,\n      myConfig: {\n        //   如果需要上传功能,找后端小伙伴要服务器接口地址\n        serverUrl: base + \"/content/uploadToQiniu\",\n        // 你的UEditor资源存放的路径,相对于打包后的index.html\n        // UEDITOR_HOME_URL: \"/rcms-pc-web/ueditor/\",\n        UEDITOR_HOME_URL: URL + \"ueditor/\",\n        // 编辑器不自动被内容撑高\n        autoHeightEnabled: false,\n        // 工具栏是否可以浮动\n        autoFloatEnabled: false,\n        // 初始容器高度\n        initialFrameHeight: 450,\n        // 初始容器宽度\n        initialFrameWidth: \"100%\",\n        // 启动自动保存\n        enableAutoSave: true\n      }\n    };\n  },\n  methods: {\n    handleUpload: function handleUpload(v) {\n      this.contentForm.introductionImg = v;\n    },\n    init: function init() {\n      this.getDictContenTypeData();\n    },\n    // 重置按钮\n    handleReset: function handleReset() {\n      this.$refs.contentForm.resetFields();\n      this.$Message.success(\"内容已重置\");\n    },\n    // 获取发布内容类别字典数据\n    getDictContenTypeData: function getDictContenTypeData() {\n      var _this = this;\n\n      getDictDataByType(\"contentType\").then(function (res) {\n        if (res.success === true) {\n          _this.dictContentType = res.result;\n        }\n      });\n    },\n    back: function back() {\n      window.history.back();\n    },\n    submitContent: function submitContent() {\n      var _this2 = this;\n\n      this.$refs.contentForm.validate(function (valid) {\n        if (valid) {\n          if (_this2.contentForm.title == \"\" || _this2.contentForm.title == undefined) {\n            return;\n          }\n\n          if (_this2.contentForm.author == \"\" || _this2.contentForm.author == undefined) {\n            return;\n          }\n\n          if (_this2.contentForm.contentType == \"\" || _this2.contentForm.contentType == undefined) {\n            return;\n          }\n\n          if (_this2.contentForm.content == \"\" || _this2.contentForm.content == undefined) {\n            return;\n          }\n\n          _this2.submitLoading = true;\n          _this2.contentForm.isPublication = Number(_this2.contentForm.isPublication);\n          _this2.contentForm.isTop = Number(_this2.contentForm.isTop);\n          saveContent(_this2.contentForm).then(function (res) {\n            _this2.submitLoading = false;\n\n            if (res.success === true) {\n              _this2.$Message.success(\"操作成功\");\n\n              _this2.$refs.contentForm.resetFields();\n\n              _this2.$router.push({\n                name: \"contentManage\"\n              });\n            }\n          });\n        } else {\n          _this2.validModal = true;\n        }\n      });\n    }\n  },\n  watch: {\n    // 如果路由有变化，会再次执行该方法\n    // $route: \"init\"\n    \"$route.name\": function $routeName(toC, fromC) {\n      if (fromC === \"contentManage\" && toC === \"publishContent\") {\n        // this.fetchData();\n        // this.getDictContenTypeData();\n        this.init(); // console.log(\"发布页URL:\"+URL);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.init(); // console.log(\"URL:\"+URL)\n  }\n};",null]}