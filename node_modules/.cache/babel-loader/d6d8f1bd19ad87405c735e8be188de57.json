{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\login\\regist.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\login\\regist.vue","mtime":1564969187221},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { regist, initCaptcha, drawCodeImage } from \"@/api/index\";\nimport Cookies from \"js-cookie\";\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error(\"密码长度不得小于6位\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validateConfirmPass = function validateConfirmPass(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error(\"密码长度不得小于6位\"));\n      } else if (value !== _this.form.password) {\n        callback(new Error(\"两次输入的密码不一致\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validateMobile = function validateMobile(rule, value, callback) {\n      var reg = /^[1][3,4,5,6,7,8][0-9]{9}$/;\n\n      if (!reg.test(value)) {\n        callback(new Error(\"手机号格式错误\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      captchaId: \"\",\n      verifyCodeImg: \"\",\n      error: false,\n      errorMsg: \"\",\n      loading: false,\n      loadingCode: true,\n      sended: false,\n      count: 60,\n      countButton: \"60 s\",\n      tipStyle: \"password-tip-none\",\n      strength: \"无\",\n      select: \"86\",\n      strengthValue: 0,\n      errorCode: \"\",\n      form: {\n        username: \"\",\n        password: \"\",\n        confirmPass: \"\",\n        mobile: \"\",\n        verifyCode: \"\",\n        verify: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: \"账号不能为空\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"密码不能为空\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePassword,\n          trigger: \"blur\"\n        }],\n        confirmPass: [{\n          required: true,\n          message: \"确认密码不能为空\",\n          trigger: \"blur\"\n        }, {\n          validator: validateConfirmPass,\n          trigger: \"blur\"\n        }],\n        mobile: [{\n          required: true,\n          message: \"手机号不能为空\",\n          trigger: \"blur\"\n        }, {\n          validator: validateMobile,\n          trigger: \"blur\"\n        }],\n        verify: [{\n          required: true,\n          message: \"验证码不能为空\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    showErrorMsg: function showErrorMsg(msg) {\n      this.error = true;\n      this.errorMsg = msg;\n    },\n    checkStrengthValue: function checkStrengthValue(v) {\n      // 评级制判断密码强度 最高5\n      var grade = 0;\n\n      if (/\\d/.test(v)) {\n        grade++; //数字\n      }\n\n      if (/[a-z]/.test(v)) {\n        grade++; //小写\n      }\n\n      if (/[A-Z]/.test(v)) {\n        grade++; //大写\n      }\n\n      if (/\\W/.test(v)) {\n        grade++; //特殊字符\n      }\n\n      if (v.length >= 10) {\n        grade++;\n      }\n\n      return grade;\n    },\n    strengthChange: function strengthChange() {\n      if (!this.form.password) {\n        this.tipStyle = \"password-tip-none\";\n        this.strength = \"无\";\n        this.strengthValue = 0;\n        return;\n      }\n\n      var grade = this.checkStrengthValue(this.form.password);\n\n      if (grade <= 1) {\n        this.tipStyle = \"password-tip-weak\";\n        this.strength = \"弱\";\n        this.strengthValue = 33;\n      } else if (grade >= 2 && grade <= 4) {\n        this.tipStyle = \"password-tip-middle\";\n        this.strength = \"中\";\n        this.strengthValue = 66;\n      } else {\n        this.tipStyle = \"password-tip-strong\";\n        this.strength = \"强\";\n        this.strengthValue = 100;\n      }\n    },\n    sendVerify: function sendVerify() {\n      var _this2 = this;\n\n      this.$refs.registForm.validate(function (valid) {\n        if (valid) {\n          _this2.sended = true;\n\n          _this2.countDown();\n        }\n      });\n    },\n    countDown: function countDown() {\n      var that = this;\n\n      if (this.count === 0) {\n        this.sended = false;\n        this.count = 60;\n        return;\n      } else {\n        this.countButton = this.count + \" s\";\n        this.count--;\n      }\n\n      setTimeout(function () {\n        that.countDown();\n      }, 1000);\n    },\n    submitRegist: function submitRegist() {\n      var _this3 = this;\n\n      this.$refs.registForm.validate(function (valid) {\n        if (valid) {\n          if (_this3.form.verifyCode === \"\") {\n            _this3.errorCode = \"验证码不能为空\";\n            return;\n          } else {\n            _this3.errorCode = \"\";\n          }\n\n          _this3.loading = true;\n          _this3.form.captchaId = _this3.captchaId;\n          _this3.form.passStrength = _this3.strength;\n          regist(_this3.form).then(function (res) {\n            _this3.loading = false;\n\n            if (res.success === true) {\n              var query = {\n                username: _this3.form.username\n              };\n\n              _this3.$router.push({\n                name: \"regist-result\",\n                query: query\n              });\n            } else {\n              _this3.getVerifyCode();\n            }\n          });\n        }\n      });\n    },\n    getVerifyCode: function getVerifyCode() {\n      var _this4 = this;\n\n      this.loadingCode = true;\n      initCaptcha().then(function (res) {\n        if (res.success === true) {\n          _this4.captchaId = res.result.captchaId;\n          _this4.verifyCodeImg = drawCodeImage + _this4.captchaId;\n          _this4.loadingCode = false;\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getVerifyCode();\n  }\n};",null]}