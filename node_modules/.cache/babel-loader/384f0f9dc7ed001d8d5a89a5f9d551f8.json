{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\sys\\quartz-manage\\quartzManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\sys\\quartz-manage\\quartzManage.vue","mtime":1564969187236},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = require(\"@/api/index\");\n\nvar _circleLoading = _interopRequireDefault(require(\"@/views/components/custom/circle-loading.vue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"quartz-manage\",\n  components: {\n    circleLoading: _circleLoading.default\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      loading: true,\n      operationLoading: false,\n      sortColumn: \"createTime\",\n      sortType: \"desc\",\n      modalType: 0,\n      modalVisible: false,\n      modalTitle: \"\",\n      form: {\n        id: \"\",\n        jobClassName: \"\",\n        cronExpression: \"\",\n        paramter: \"\",\n        description: \"\"\n      },\n      formValidate: {\n        jobClassName: [{\n          required: true,\n          message: \"任务类名不能为空\",\n          trigger: \"blur\"\n        }],\n        cronExpression: [{\n          required: true,\n          message: \"cron表达式不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      selectList: [],\n      selectCount: 0,\n      columns: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"任务类名\",\n        key: \"jobClassName\",\n        sortable: true,\n        width: 200\n      }, {\n        title: \"cron表达式\",\n        key: \"cronExpression\",\n        sortable: true,\n        width: 200\n      }, {\n        title: \"参数\",\n        key: \"parameter\",\n        sortable: true,\n        width: 180\n      }, {\n        title: \"备注\",\n        key: \"description\",\n        sortable: true,\n        minWidth: 180\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 140,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.status === 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                type: \"dot\",\n                color: \"success\"\n              }\n            }, \"执行中\")]);\n          } else if (params.row.status === -1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                type: \"dot\",\n                color: \"error\"\n              }\n            }, \"已停止\")]);\n          }\n        },\n        filters: [{\n          label: \"执行中\",\n          value: 0\n        }, {\n          label: \"已停止\",\n          value: -1\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 0) {\n            return row.status === 0;\n          } else if (value === -1) {\n            return row.status === -1;\n          }\n        }\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        align: \"center\",\n        width: 280,\n        render: function render(h, params) {\n          var runOrResume = \"\";\n\n          if (params.row.status == 0) {\n            runOrResume = h(\"Button\", {\n              props: {\n                type: \"warning\",\n                size: \"small\",\n                icon: \"md-pause\"\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.pause(params.row);\n                }\n              }\n            }, \"暂停\");\n          } else {\n            runOrResume = h(\"Button\", {\n              props: {\n                type: \"success\",\n                size: \"small\",\n                icon: \"md-play\"\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.resume(params.row);\n                }\n              }\n            }, \"恢复执行\");\n          }\n\n          return h(\"div\", [runOrResume, h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      pageNumber: 1,\n      pageSize: 10,\n      total: 0\n    };\n  },\n  methods: {\n    init: function init() {\n      this.getQuartzList();\n    },\n    changePage: function changePage(v) {\n      this.pageNumber = v;\n      this.getQuartzList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.pageSize = v;\n      this.getQuartzList();\n    },\n    changeSort: function changeSort(e) {\n      this.sortColumn = e.key;\n      this.sortType = e.order;\n\n      if (e.order === \"normal\") {\n        this.sortType = \"\";\n      }\n\n      this.getQuartzList();\n    },\n    getQuartzList: function getQuartzList() {\n      var _this2 = this;\n\n      this.loading = true;\n      var params = {\n        pageNumber: this.pageNumber,\n        pageSize: this.pageSize,\n        sort: this.sortColumn,\n        order: this.sortType\n      };\n      (0, _index.getQuartzListData)(params).then(function (res) {\n        _this2.loading = false;\n\n        if (res.success === true) {\n          _this2.data = res.result.content;\n          _this2.total = res.result.totalElements;\n        }\n      });\n    },\n    cancelSubmit: function cancelSubmit() {\n      this.modalVisible = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          if (_this3.modalType === 0) {\n            // 添加\n            _this3.submitLoading = true;\n            (0, _index.addQuartz)(_this3.form).then(function (res) {\n              _this3.submitLoading = false;\n\n              if (res.success === true) {\n                _this3.$Message.success(\"操作成功\");\n\n                _this3.getQuartzList();\n\n                _this3.modalVisible = false;\n              }\n            });\n          } else {\n            _this3.submitLoading = true;\n            (0, _index.editQuartz)(_this3.form).then(function (res) {\n              _this3.submitLoading = false;\n\n              if (res.success === true) {\n                _this3.$Message.success(\"操作成功\");\n\n                _this3.getQuartzList();\n\n                _this3.modalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    addRole: function addRole() {\n      this.modalType = 0;\n      this.modalTitle = \"添加任务\";\n      this.$refs.form.resetFields();\n      this.form = {\n        paramter: \"\",\n        description: \"\"\n      }, this.modalVisible = true;\n    },\n    edit: function edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑任务\"; // 转换null为\"\"\n\n      for (var attr in v) {\n        if (v[attr] === null) {\n          v[attr] = \"\";\n        }\n      }\n\n      var str = JSON.stringify(v);\n      var data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    pause: function pause(v) {\n      var _this4 = this;\n\n      this.$Modal.confirm({\n        title: \"确认停止\",\n        content: \"您确认要停止任务 \" + v.jobClassName + \" ?\",\n        onOk: function onOk() {\n          _this4.operationLoading = true;\n          (0, _index.pauseQuartz)(v).then(function (res) {\n            _this4.operationLoading = false;\n\n            if (res.success === true) {\n              _this4.$Message.success(\"操作成功\");\n\n              _this4.getQuartzList();\n            }\n          });\n        }\n      });\n    },\n    resume: function resume(v) {\n      var _this5 = this;\n\n      this.$Modal.confirm({\n        title: \"确认恢复\",\n        content: \"您确认要恢复任务 \" + v.jobClassName + \" ?\",\n        onOk: function onOk() {\n          _this5.operationLoading = true;\n          (0, _index.resumeQuartz)(v).then(function (res) {\n            _this5.operationLoading = false;\n\n            if (res.success === true) {\n              _this5.$Message.success(\"操作成功\");\n\n              _this5.getQuartzList();\n            }\n          });\n        }\n      });\n    },\n    remove: function remove(v) {\n      var _this6 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除任务 \" + v.jobClassName + \" ?\",\n        onOk: function onOk() {\n          _this6.operationLoading = true;\n          (0, _index.deleteQuartz)(v.id).then(function (res) {\n            _this6.operationLoading = false;\n\n            if (res.success === true) {\n              _this6.$Message.success(\"操作成功\");\n\n              _this6.getQuartzList();\n            }\n          });\n        }\n      });\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    changeSelect: function changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    delAll: function delAll() {\n      var _this7 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this7.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1);\n          _this7.operationLoading = true;\n          (0, _index.deleteQuartz)(ids).then(function (res) {\n            _this7.operationLoading = false;\n\n            if (res.success === true) {\n              _this7.$Message.success(\"删除成功\");\n\n              _this7.clearSelectAll();\n\n              _this7.getQuartzList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n};\nexports.default = _default;",{"version":3,"sources":["quartzManage.vue"],"names":[],"mappings":";;;;;;;AAiFA;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eACA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AAAA;;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,gBAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,YAHA;AAIA,MAAA,QAAA,EAAA,MAJA;AAKA,MAAA,SAAA,EAAA,CALA;AAMA,MAAA,YAAA,EAAA,KANA;AAOA,MAAA,UAAA,EAAA,EAPA;AAQA,MAAA,IAAA,EAAA;AACA,QAAA,EAAA,EAAA,EADA;AAEA,QAAA,YAAA,EAAA,EAFA;AAGA,QAAA,cAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA,EAJA;AAKA,QAAA,WAAA,EAAA;AALA,OARA;AAeA,MAAA,YAAA,EAAA;AACA,QAAA,YAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,UAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,cAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,aAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AAJA,OAfA;AAuBA,MAAA,aAAA,EAAA,KAvBA;AAwBA,MAAA,UAAA,EAAA,EAxBA;AAyBA,MAAA,WAAA,EAAA,CAzBA;AA0BA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OADA,EAMA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OANA,EAWA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,cAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAXA,EAiBA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,GAAA,EAAA,gBAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAjBA,EAuBA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,WAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAvBA,EA6BA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OA7BA,EAmCA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,EAAA,GAAA,EAAA;;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CACA,CAAA,CACA,KADA,EAEA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,IAAA,EAAA,KADA;AAEA,gBAAA,KAAA,EAAA;AAFA;AADA,aAFA,EAQA,KARA,CADA,CAAA,CAAA;AAYA,WAbA,MAaA,IAAA,MAAA,CAAA,GAAA,CAAA,MAAA,KAAA,CAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CACA,CAAA,CACA,KADA,EAEA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,IAAA,EAAA,KADA;AAEA,gBAAA,KAAA,EAAA;AAFA;AADA,aAFA,EAQA,KARA,CADA,CAAA,CAAA;AAYA;AACA,SAlCA;AAmCA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,KAAA,EAAA;AAFA,SADA,EAKA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,KAAA,EAAA,CAAA;AAFA,SALA,CAnCA;AA6CA,QAAA,cAAA,EAAA,KA7CA;AA8CA,QAAA,YA9CA,wBA8CA,KA9CA,EA8CA,GA9CA,EA8CA;AACA,cAAA,KAAA,KAAA,CAAA,EAAA;AACA,mBAAA,GAAA,CAAA,MAAA,KAAA,CAAA;AACA,WAFA,MAEA,IAAA,KAAA,KAAA,CAAA,CAAA,EAAA;AACA,mBAAA,GAAA,CAAA,MAAA,KAAA,CAAA,CAAA;AACA;AACA;AApDA,OAnCA,EAyFA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,WAAA,GAAA,EAAA;;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,YAAA,WAAA,GAAA,CAAA,CACA,QADA,EAEA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,IAAA,EAAA,SADA;AAEA,gBAAA,IAAA,EAAA,OAFA;AAGA,gBAAA,IAAA,EAAA;AAHA,eADA;AAMA,cAAA,KAAA,EAAA;AACA,gBAAA,WAAA,EAAA;AADA,eANA;AASA,cAAA,EAAA,EAAA;AACA,gBAAA,KAAA,EAAA,iBAAA;AACA,kBAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA;AACA;AAHA;AATA,aAFA,EAiBA,IAjBA,CAAA;AAmBA,WApBA,MAoBA;AACA,YAAA,WAAA,GAAA,CAAA,CACA,QADA,EAEA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,IAAA,EAAA,SADA;AAEA,gBAAA,IAAA,EAAA,OAFA;AAGA,gBAAA,IAAA,EAAA;AAHA,eADA;AAMA,cAAA,KAAA,EAAA;AACA,gBAAA,WAAA,EAAA;AADA,eANA;AASA,cAAA,EAAA,EAAA;AACA,gBAAA,KAAA,EAAA,iBAAA;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA;AACA;AAHA;AATA,aAFA,EAiBA,MAjBA,CAAA;AAmBA;;AACA,iBAAA,CAAA,CAAA,KAAA,EAAA,CACA,WADA,EAEA,CAAA,CACA,QADA,EAEA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,SADA;AAEA,cAAA,IAAA,EAAA;AAFA,aADA;AAKA,YAAA,KAAA,EAAA;AACA,cAAA,WAAA,EAAA;AADA,aALA;AAQA,YAAA,EAAA,EAAA;AACA,cAAA,KAAA,EAAA,iBAAA;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA;AACA;AAHA;AARA,WAFA,EAgBA,IAhBA,CAFA,EAoBA,CAAA,CACA,QADA,EAEA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,OADA;AAEA,cAAA,IAAA,EAAA;AAFA,aADA;AAKA,YAAA,EAAA,EAAA;AACA,cAAA,KAAA,EAAA,iBAAA;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA;AACA;AAHA;AALA,WAFA,EAaA,IAbA,CApBA,CAAA,CAAA;AAoCA;AApFA,OAzFA,CA1BA;AA0MA,MAAA,IAAA,EAAA,EA1MA;AA2MA,MAAA,UAAA,EAAA,CA3MA;AA4MA,MAAA,QAAA,EAAA,EA5MA;AA6MA,MAAA,KAAA,EAAA;AA7MA,KAAA;AA+MA,GArNA;AAsNA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,aAAA;AACA,KAHA;AAIA,IAAA,UAJA,sBAIA,CAJA,EAIA;AACA,WAAA,UAAA,GAAA,CAAA;AACA,WAAA,aAAA;AACA,WAAA,cAAA;AACA,KARA;AASA,IAAA,cATA,0BASA,CATA,EASA;AACA,WAAA,QAAA,GAAA,CAAA;AACA,WAAA,aAAA;AACA,KAZA;AAaA,IAAA,UAbA,sBAaA,CAbA,EAaA;AACA,WAAA,UAAA,GAAA,CAAA,CAAA,GAAA;AACA,WAAA,QAAA,GAAA,CAAA,CAAA,KAAA;;AACA,UAAA,CAAA,CAAA,KAAA,KAAA,QAAA,EAAA;AACA,aAAA,QAAA,GAAA,EAAA;AACA;;AACA,WAAA,aAAA;AACA,KApBA;AAqBA,IAAA,aArBA,2BAqBA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,UAAA,EAAA,KAAA,UADA;AAEA,QAAA,QAAA,EAAA,KAAA,QAFA;AAGA,QAAA,IAAA,EAAA,KAAA,UAHA;AAIA,QAAA,KAAA,EAAA,KAAA;AAJA,OAAA;AAMA,oCAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CAAA,MAAA,CAAA,aAAA;AACA;AACA,OANA;AAOA,KApCA;AAqCA,IAAA,YArCA,0BAqCA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,KAvCA;AAwCA,IAAA,YAxCA,0BAwCA;AAAA;;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,MAAA,CAAA,SAAA,KAAA,CAAA,EAAA;AACA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AACA,kCAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AACA,kBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,MAAA,CAAA,aAAA;;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,KAAA;AACA;AACA,aAPA;AAQA,WAXA,MAWA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AACA,mCAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AACA,kBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,MAAA,CAAA,aAAA;;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,KAAA;AACA;AACA,aAPA;AAQA;AACA;AACA,OAzBA;AA0BA,KAnEA;AAoEA,IAAA,OApEA,qBAoEA;AACA,WAAA,SAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,MAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,IAAA,GAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA;AAFA,OAAA,EAIA,KAAA,YAAA,GAAA,IAJA;AAKA,KA7EA;AA8EA,IAAA,IA9EA,gBA8EA,CA9EA,EA8EA;AACA,WAAA,SAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,MAAA,CAFA,CAGA;;AACA,WAAA,IAAA,IAAA,IAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,IAAA,CAAA,KAAA,IAAA,EAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AACA;AACA;;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KA3FA;AA4FA,IAAA,KA5FA,iBA4FA,CA5FA,EA4FA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,cAAA,CAAA,CAAA,YAAA,GAAA,IAFA;AAGA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,kCAAA,CAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,aAAA;AACA;AACA,WANA;AAOA;AAZA,OAAA;AAcA,KA3GA;AA4GA,IAAA,MA5GA,kBA4GA,CA5GA,EA4GA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,cAAA,CAAA,CAAA,YAAA,GAAA,IAFA;AAGA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,mCAAA,CAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,aAAA;AACA;AACA,WANA;AAOA;AAZA,OAAA;AAcA,KA3HA;AA4HA,IAAA,MA5HA,kBA4HA,CA5HA,EA4HA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,cAAA,CAAA,CAAA,YAAA,GAAA,IAFA;AAGA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,mCAAA,CAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,aAAA;AACA;AACA,WANA;AAOA;AAZA,OAAA;AAcA,KA3IA;AA4IA,IAAA,cA5IA,4BA4IA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA,KA9IA;AA+IA,IAAA,YA/IA,wBA+IA,CA/IA,EA+IA;AACA,WAAA,UAAA,GAAA,CAAA;AACA,WAAA,WAAA,GAAA,CAAA,CAAA,MAAA;AACA,KAlJA;AAmJA,IAAA,MAnJA,oBAmJA;AAAA;;AACA,UAAA,KAAA,WAAA,IAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,aAAA;AACA;AACA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,eAAA,KAAA,WAAA,GAAA,OAFA;AAGA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,GAAA,GAAA,EAAA;;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,GAAA,IAAA,CAAA,CAAA,EAAA,GAAA,GAAA;AACA,WAFA;;AAGA,UAAA,GAAA,GAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,mCAAA,GAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,cAAA;;AACA,cAAA,MAAA,CAAA,aAAA;AACA;AACA,WAPA;AAQA;AAlBA,OAAA;AAoBA;AA5KA,GAtNA;AAoYA,EAAA,OApYA,qBAoYA;AACA,SAAA,IAAA;AACA;AAtYA,C","sourcesContent":["<style lang=\"less\">\r\n@import \"./quartzManage.less\";\r\n</style>\r\n<template>\r\n  <div class=\"search\">\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          <Row class=\"operation\">\r\n            <Button @click=\"addRole\" type=\"primary\" icon=\"md-add\">安排新任务</Button>\r\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n            <Button @click=\"init\" icon=\"md-refresh\">刷新</Button>\r\n            <circleLoading v-if=\"operationLoading\"/>\r\n          </Row>\r\n          <Row>\r\n            <Alert show-icon>\r\n              已选择\r\n              <span class=\"select-count\">{{selectCount}}</span> 项\r\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\r\n            </Alert>\r\n          </Row>\r\n          <Row>\r\n            <Table\r\n              :loading=\"loading\"\r\n              border\r\n              :columns=\"columns\"\r\n              :data=\"data\"\r\n              ref=\"table\"\r\n              sortable=\"custom\"\r\n              @on-sort-change=\"changeSort\"\r\n              @on-selection-change=\"changeSelect\"\r\n            ></Table>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n            <Page\r\n              :current=\"pageNumber\"\r\n              :total=\"total\"\r\n              :page-size=\"pageSize\"\r\n              @on-change=\"changePage\"\r\n              @on-page-size-change=\"changePageSize\"\r\n              :page-size-opts=\"[10,20,50]\"\r\n              size=\"small\"\r\n              show-total\r\n              show-elevator\r\n              show-sizer\r\n            ></Page>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Modal draggable :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\r\n      <Form ref=\"form\" :model=\"form\" :label-width=\"80\" :rules=\"formValidate\">\r\n        <FormItem label=\"任务类名\" prop=\"jobClassName\">\r\n          <Input\r\n            v-model=\"form.jobClassName\"\r\n            placeholder=\"例如 com.js.server.jobs.Job\"\r\n            clearable\r\n          />\r\n        </FormItem>\r\n        <FormItem label=\"cron表达式\" prop=\"cronExpression\" style=\"margin-bottom: 5px;\">\r\n          <Input v-model=\"form.cronExpression\" clearable/>\r\n          <a target=\"_blank\" href=\"http://cron.qqe2.com/\">\r\n            <Icon type=\"md-arrow-dropright-circle\" size=\"16\" style=\"margin:0 3px 3px 0;\"/>在线cron表达式生成\r\n          </a>\r\n        </FormItem>\r\n        <FormItem label=\"参数\" prop=\"parameter\">\r\n          <Input v-model=\"form.parameter\"/>\r\n        </FormItem>\r\n        <FormItem label=\"备注\" prop=\"description\">\r\n          <Input v-model=\"form.description\"/>\r\n        </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"cancelSubmit\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handleSubmit\">保存并安排</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getQuartzListData,\r\n  addQuartz,\r\n  editQuartz,\r\n  pauseQuartz,\r\n  resumeQuartz,\r\n  deleteQuartz\r\n} from \"@/api/index\";\r\nimport circleLoading from \"@/views/components/custom/circle-loading.vue\";\r\nexport default {\r\n  name: \"quartz-manage\",\r\n  components: {\r\n    circleLoading\r\n  },\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      operationLoading: false,\r\n      sortColumn: \"createTime\",\r\n      sortType: \"desc\",\r\n      modalType: 0,\r\n      modalVisible: false,\r\n      modalTitle: \"\",\r\n      form: {\r\n        id: \"\",\r\n        jobClassName: \"\",\r\n        cronExpression: \"\",\r\n        paramter: \"\",\r\n        description: \"\"\r\n      },\r\n      formValidate: {\r\n        jobClassName: [\r\n          { required: true, message: \"任务类名不能为空\", trigger: \"blur\" }\r\n        ],\r\n        cronExpression: [\r\n          { required: true, message: \"cron表达式不能为空\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      submitLoading: false,\r\n      selectList: [],\r\n      selectCount: 0,\r\n      columns: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"任务类名\",\r\n          key: \"jobClassName\",\r\n          sortable: true,\r\n          width: 200\r\n        },\r\n        {\r\n          title: \"cron表达式\",\r\n          key: \"cronExpression\",\r\n          sortable: true,\r\n          width: 200\r\n        },\r\n        {\r\n          title: \"参数\",\r\n          key: \"parameter\",\r\n          sortable: true,\r\n          width: 180\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          key: \"description\",\r\n          sortable: true,\r\n          minWidth: 180\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 140,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"success\"\r\n                    }\r\n                  },\r\n                  \"执行中\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      type: \"dot\",\r\n                      color: \"error\"\r\n                    }\r\n                  },\r\n                  \"已停止\"\r\n                )\r\n              ]);\r\n            }\r\n          },\r\n          filters: [\r\n            {\r\n              label: \"执行中\",\r\n              value: 0\r\n            },\r\n            {\r\n              label: \"已停止\",\r\n              value: -1\r\n            }\r\n          ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n            if (value === 0) {\r\n              return row.status === 0;\r\n            } else if (value === -1) {\r\n              return row.status === -1;\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          align: \"center\",\r\n          width: 280,\r\n          render: (h, params) => {\r\n            let runOrResume = \"\";\r\n            if (params.row.status == 0) {\r\n              runOrResume = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"warning\",\r\n                    size: \"small\",\r\n                    icon: \"md-pause\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.pause(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"暂停\"\r\n              );\r\n            } else {\r\n              runOrResume = h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"success\",\r\n                    size: \"small\",\r\n                    icon: \"md-play\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.resume(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"恢复执行\"\r\n              );\r\n            }\r\n            return h(\"div\", [\r\n              runOrResume,\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\"\r\n                  },\r\n                  style: {\r\n                    marginRight: \"5px\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.edit(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"error\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.remove(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"删除\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      data: [],\r\n      pageNumber: 1,\r\n      pageSize: 10,\r\n      total: 0\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getQuartzList();\r\n    },\r\n    changePage(v) {\r\n      this.pageNumber = v;\r\n      this.getQuartzList();\r\n      this.clearSelectAll();\r\n    },\r\n    changePageSize(v) {\r\n      this.pageSize = v;\r\n      this.getQuartzList();\r\n    },\r\n    changeSort(e) {\r\n      this.sortColumn = e.key;\r\n      this.sortType = e.order;\r\n      if (e.order === \"normal\") {\r\n        this.sortType = \"\";\r\n      }\r\n      this.getQuartzList();\r\n    },\r\n    getQuartzList() {\r\n      this.loading = true;\r\n      let params = {\r\n        pageNumber: this.pageNumber,\r\n        pageSize: this.pageSize,\r\n        sort: this.sortColumn,\r\n        order: this.sortType\r\n      };\r\n      getQuartzListData(params).then(res => {\r\n        this.loading = false;\r\n        if (res.success === true) {\r\n          this.data = res.result.content;\r\n          this.total = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    cancelSubmit() {\r\n      this.modalVisible = false;\r\n    },\r\n    handleSubmit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          if (this.modalType === 0) {\r\n            // 添加\r\n            this.submitLoading = true;\r\n            addQuartz(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getQuartzList();\r\n                this.modalVisible = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.submitLoading = true;\r\n            editQuartz(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success === true) {\r\n                this.$Message.success(\"操作成功\");\r\n                this.getQuartzList();\r\n                this.modalVisible = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    addRole() {\r\n      this.modalType = 0;\r\n      this.modalTitle = \"添加任务\";\r\n      this.$refs.form.resetFields();\r\n      (this.form = {\r\n        paramter: \"\",\r\n        description: \"\"\r\n      }),\r\n        (this.modalVisible = true);\r\n    },\r\n    edit(v) {\r\n      this.modalType = 1;\r\n      this.modalTitle = \"编辑任务\";\r\n      // 转换null为\"\"\r\n      for (let attr in v) {\r\n        if (v[attr] === null) {\r\n          v[attr] = \"\";\r\n        }\r\n      }\r\n      let str = JSON.stringify(v);\r\n      let data = JSON.parse(str);\r\n      this.form = data;\r\n      this.modalVisible = true;\r\n    },\r\n    pause(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认停止\",\r\n        content: \"您确认要停止任务 \" + v.jobClassName + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          pauseQuartz(v).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getQuartzList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    resume(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认恢复\",\r\n        content: \"您确认要恢复任务 \" + v.jobClassName + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          resumeQuartz(v).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getQuartzList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    remove(v) {\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除任务 \" + v.jobClassName + \" ?\",\r\n        onOk: () => {\r\n          this.operationLoading = true;\r\n          deleteQuartz(v.id).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"操作成功\");\r\n              this.getQuartzList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    clearSelectAll() {\r\n      this.$refs.table.selectAll(false);\r\n    },\r\n    changeSelect(e) {\r\n      this.selectList = e;\r\n      this.selectCount = e.length;\r\n    },\r\n    delAll() {\r\n      if (this.selectCount <= 0) {\r\n        this.$Message.warning(\"您还未选择要删除的数据\");\r\n        return;\r\n      }\r\n      this.$Modal.confirm({\r\n        title: \"确认删除\",\r\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n        onOk: () => {\r\n          let ids = \"\";\r\n          this.selectList.forEach(function(e) {\r\n            ids += e.id + \",\";\r\n          });\r\n          ids = ids.substring(0, ids.length - 1);\r\n          this.operationLoading = true;\r\n          deleteQuartz(ids).then(res => {\r\n            this.operationLoading = false;\r\n            if (res.success === true) {\r\n              this.$Message.success(\"删除成功\");\r\n              this.clearSelectAll();\r\n              this.getQuartzList();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/views/sys/quartz-manage"}]}