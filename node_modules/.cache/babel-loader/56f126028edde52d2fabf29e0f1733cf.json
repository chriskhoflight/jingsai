{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\AppMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\AppMain.vue","mtime":1564969187158},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport appHeader from '@/views/components/header/app-header';\nimport shrinkableMenu from \"@/views/components/shrinkable-menu/shrinkable-menu.vue\";\nimport tagsPageOpened from \"@/views/components/tags-page-opened.vue\";\nimport breadcrumbNav from \"@/views/components/breadcrumb-nav.vue\";\nimport Cookies from \"js-cookie\";\nimport util from \"@/libs/util.js\";\nexport default {\n  components: {\n    appHeader: appHeader,\n    shrinkableMenu: shrinkableMenu,\n    tagsPageOpened: tagsPageOpened,\n    breadcrumbNav: breadcrumbNav\n  },\n  data: function data() {\n    return {\n      shrink: false,\n      openedSubmenuArr: this.$store.state.app.openedSubmenuArr\n    };\n  },\n  computed: {\n    menuList: function menuList() {\n      //根据路由当前路径计算顶级路径,加载整个路由信息\n      var path = this.$route.path;\n      var menuList = this.$store.state.app.menuList;\n      return util.getMenusByPath(menuList, path);\n    },\n    pageTagsList: function pageTagsList() {\n      return this.$store.state.app.pageOpenedList; // 打开的页面的页面对象\n    },\n    currentPath: function currentPath() {\n      return this.$store.state.app.currentPath; // 当前面包屑数组\n    },\n    menuTheme: function menuTheme() {\n      return this.$store.state.app.menuTheme;\n    },\n    cachePage: function cachePage() {\n      return this.$store.state.app.cachePage;\n    }\n  },\n  stompClient: {\n    monitorIntervalTime: 100,\n    stompReconnect: true,\n    timeout: function timeout(orgCmd) {}\n  },\n  methods: {\n    init: function init() {// let pathArr = util.setCurrentPath(this, this.$route.name);\n      // // this.$store.commit(\"updateMenulist\");\n      // if (pathArr.length >= 2) {\n      //   this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      // }\n      // let userInfo = JSON.parse(Cookies.get(\"userInfo\"));\n      // this.username = userInfo.username;\n      // this.userId = userInfo.id;\n      //this.checkTag(this.$route.name);\n    },\n    // checkTag(name) {\n    //   let openpageHasTag = this.pageTagsList.some(item => {\n    //     if (item.name === name) {\n    //       return true;\n    //     }\n    //   });\n    //   if (!openpageHasTag) {\n    //     //  解决关闭当前标签后再点击回退按钮会退到当前页时没有标签的问题\n    //     util.openNewPage(\n    //       this,\n    //       name,\n    //       this.$route.params || {},\n    //       this.$route.query || {}\n    //     );\n    //   }\n    // },\n    handleSubmenuChange: function handleSubmenuChange(val) {// console.log(val)\n    },\n    beforePush: function beforePush(name) {\n      // console.log(name)\n      return true;\n    }\n  },\n  watch: {\n    $route: function $route(to) {\n      this.$store.commit(\"setCurrentPageName\", to.name);\n      var pathArr = util.setCurrentPath(this, to.name);\n\n      if (pathArr.length > 2) {\n        this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      } //this.checkTag(to.name);\n\n\n      localStorage.currentPageName = to.name;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  created: function created() {\n    // 显示打开的页面的列表\n    this.$store.commit(\"setOpenedList\");\n  }\n};",null]}