{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\libs\\axios.js","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\libs\\axios.js","mtime":1564969187138},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { getStore, setStore } from './storage';\nimport { router } from '../router/index';\nimport { Message } from 'iview';\nimport Cookies from 'js-cookie'; // 统一请求路径前缀\n\nvar base = process.env.VUE_APP_BASE_API; // 超时设定\n\naxios.defaults.timeout = 15000;\naxios.interceptors.request.use(function (config) {\n  return config;\n}, function (err) {\n  Message.error('请求超时');\n  return Promise.resolve(err);\n}); // http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  var data = response.data; // 根据返回的code值来做不同的处理(和后端约定)\n\n  switch (data.code) {\n    case 401:\n      // 未登录 清除已登录状态\n      Cookies.set('userInfo', '');\n      setStore('accessToken', '');\n      router.push('/login');\n      break;\n\n    case 403:\n      // 没有权限\n      if (data.message !== null) {\n        Message.error(data.message);\n      } else {\n        Message.error(\"未知错误\");\n      }\n\n      break;\n\n    case 500:\n      // 错误\n      if (data.message !== null) {\n        Message.error(data.message);\n      } else {\n        Message.error(\"未知错误\");\n      }\n\n      break;\n\n    default:\n      return data;\n  }\n\n  return data;\n}, function (err) {\n  // 返回状态码不为200时候的错误处理\n  Message.error(err.toString());\n  return Promise.resolve(err);\n});\nexport var getRequest = function getRequest(url, params) {\n  var accessToken = getStore('accessToken');\n  return axios({\n    method: 'get',\n    url: \"\".concat(base).concat(url),\n    params: params,\n    headers: {\n      'accessToken': accessToken\n    }\n  });\n};\nexport var postRequest = function postRequest(url, params) {\n  var accessToken = getStore(\"accessToken\");\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    data: params,\n    transformRequest: [function (data) {\n      var ret = '';\n\n      for (var it in data) {\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';\n      }\n\n      return ret;\n    }],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'accessToken': accessToken\n    }\n  });\n};\nexport var putRequest = function putRequest(url, params) {\n  var accessToken = getStore(\"accessToken\");\n  return axios({\n    method: 'put',\n    url: \"\".concat(base).concat(url),\n    data: params,\n    transformRequest: [function (data) {\n      var ret = '';\n\n      for (var it in data) {\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';\n      }\n\n      return ret;\n    }],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'accessToken': accessToken\n    }\n  });\n};\nexport var deleteRequest = function deleteRequest(url, params) {\n  var accessToken = getStore('accessToken');\n  return axios({\n    method: 'delete',\n    url: \"\".concat(base).concat(url),\n    params: params,\n    headers: {\n      'accessToken': accessToken\n    }\n  });\n};\nexport var uploadFileRequest = function uploadFileRequest(url, params) {\n  var accessToken = getStore('accessToken');\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    params: params,\n    headers: {\n      'accessToken': accessToken\n    }\n  });\n};",null]}