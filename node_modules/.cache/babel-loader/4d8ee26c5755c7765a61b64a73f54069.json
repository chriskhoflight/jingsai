{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\custom\\user-choose.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\custom\\user-choose.vue","mtime":1564969187189},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = require(\"@/api/index\");\n\nvar _departmentChoose = _interopRequireDefault(require(\"./department-choose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"userChoose\",\n  components: {\n    departmentChoose: _departmentChoose.default\n  },\n  props: {\n    buttonText: {\n      type: String,\n      default: \"选择用户\"\n    },\n    icon: {\n      type: String,\n      default: \"md-person-add\"\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      userLoading: true,\n      userModalVisible: false,\n      selectUsers: [],\n      searchUserForm: {\n        username: \"\",\n        type: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 9,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\" // 默认排序方式\n\n      },\n      userColumns: [{\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"用户名\",\n        key: \"username\",\n        width: 145,\n        sortable: true\n      }, {\n        title: \"头像\",\n        key: \"avatar\",\n        width: 80,\n        align: \"center\",\n        render: function render(h, params) {\n          return h(\"Avatar\", {\n            props: {\n              src: params.row.avatar\n            }\n          });\n        }\n      }, {\n        title: \"所属部门\",\n        key: \"departmentTitle\",\n        width: 120\n      }, {\n        title: \"手机\",\n        key: \"mobile\",\n        width: 115,\n        sortable: true\n      }, {\n        title: \"邮箱\",\n        key: \"email\",\n        width: 180,\n        sortable: true\n      }, {\n        title: \"性别\",\n        key: \"sex\",\n        width: 70,\n        align: \"center\",\n        render: function render(h, params) {\n          var re = \"\";\n\n          _this.dictSex.forEach(function (e) {\n            if (e.value == params.row.sex) {\n              re = e.title;\n            }\n          });\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"用户类型\",\n        key: \"type\",\n        align: \"center\",\n        width: 100,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.type === 1) {\n            re = \"管理员\";\n          } else if (params.row.type === 0) {\n            re = \"普通用户\";\n          }\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 120,\n        render: function render(h, params) {\n          if (params.row.status === 0) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"green\"\n              }\n            }, \"正常启用\")]);\n          } else if (params.row.status === -1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"red\"\n              }\n            }, \"禁用\")]);\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        width: 150\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 130,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"info\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.chooseUser(params.row);\n              }\n            }\n          }, \"添加该用户\")]);\n        }\n      }],\n      userData: [],\n      totalUser: 0,\n      dictMessageType: []\n    };\n  },\n  methods: {\n    getDictDataType: function getDictDataType() {\n      var _this2 = this;\n\n      (0, _index.getDictDataByType)(\"message_type\").then(function (res) {\n        if (res.success) {\n          _this2.dictMessageType = res.result;\n        }\n      }); // 获取性别字典数据\n\n      (0, _index.getDictDataByType)(\"sex\").then(function (res) {\n        if (res.success) {\n          _this2.dictSex = res.result;\n        }\n      });\n    },\n    handleSelectDep: function handleSelectDep(v) {\n      this.searchUserForm.departmentId = v;\n    },\n    changeUserPage: function changeUserPage(v) {\n      this.searchUserForm.pageNumber = v;\n      this.getUserDataList();\n    },\n    changeUserPageSize: function changeUserPageSize(v) {\n      this.searchUserForm.pageSize = v;\n      this.getUserDataList();\n    },\n    getUserDataList: function getUserDataList() {\n      var _this3 = this;\n\n      this.userLoading = true;\n      (0, _index.getUserListData)(this.searchUserForm).then(function (res) {\n        _this3.userLoading = false;\n\n        if (res.success === true) {\n          _this3.userData = res.result.content;\n          _this3.totalUser = res.result.totalElements;\n        }\n      });\n    },\n    handleSearchUser: function handleSearchUser() {\n      this.searchUserForm.pageNumber = 1;\n      this.searchUserForm.pageSize = 9;\n      this.getUserDataList();\n    },\n    handleResetUser: function handleResetUser() {\n      this.$refs.searchUserForm.resetFields();\n      this.searchUserForm.pageNumber = 1;\n      this.searchUserForm.pageSize = 9;\n      this.$refs.dep.clearSelect();\n      this.searchUserForm.departmentId = \"\"; // 重新加载数据\n\n      this.getUserDataList();\n    },\n    setSelectUser: function setSelectUser(v) {\n      this.selectUsers = v; // this.$emit(\"on-change\", this.selectUsers);\n    },\n    setSelectAllUser: function setSelectAllUser() {\n      var data = [];\n      this.userData.forEach(function (e) {\n        var u = {\n          id: e.id,\n          username: e.username\n        };\n        data.push(u);\n      });\n      this.selectUsers = data;\n      this.$emit(\"on-change\", data);\n    },\n    chooseUser: function chooseUser(v) {\n      // 去重\n      var that = this;\n      var flag = true;\n      this.selectUsers.forEach(function (e) {\n        if (v.id == e.id) {\n          that.$Message.warning(\"已经添加过啦，请勿重复选择\");\n          flag = false;\n        }\n      });\n\n      if (flag) {\n        var u = {\n          id: v.id,\n          username: v.username\n        };\n        this.selectUsers.push(u);\n        this.$emit(\"on-change\", this.selectUsers);\n        this.$Message.success(\"\\u6DFB\\u52A0\\u7528\\u6237 \".concat(v.username, \" \\u6210\\u529F\"));\n      }\n    },\n    clearSelectUser: function clearSelectUser() {\n      this.selectUsers = [];\n      this.$emit(\"on-change\", this.selectUsers);\n    },\n    handleCancelUser: function handleCancelUser(e, id) {\n      // 删除所选用户\n      var newArray = [];\n      this.selectUsers.forEach(function (e) {\n        if (id != e.id) {\n          newArray.push(e);\n        }\n      });\n      this.selectUsers = newArray;\n      this.$emit(\"on-change\", this.selectUsers);\n      this.$Message.success(\"删除所选用户成功\");\n    }\n  },\n  created: function created() {\n    this.getDictDataType();\n    this.getUserDataList();\n  }\n};\nexports.default = _default;",{"version":3,"sources":["user-choose.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <Button @click=\"userModalVisible=true\" :icon=\"icon\">{{buttonText}}</Button>\r\n    <span @click=\"clearSelectUser\" class=\"clear\">清空已选</span>\r\n    <Collapse simple class=\"collapse\">\r\n      <Panel name=\"1\">\r\n        已选择\r\n        <span class=\"select-count\">{{selectUsers.length}}</span> 人\r\n        <p slot=\"content\">\r\n          <Tag\r\n            v-for=\"(item, i) in selectUsers\"\r\n            :key=\"i\"\r\n            :name=\"item.id\"\r\n            color=\"default\"\r\n            closable\r\n            @on-close=\"handleCancelUser\"\r\n          >{{item.username}}</Tag>\r\n        </p>\r\n      </Panel>\r\n    </Collapse>\r\n    <Drawer title=\"选择用户\" closable v-model=\"userModalVisible\" width=\"800\" draggable>\r\n      <Form\r\n        ref=\"searchUserForm\"\r\n        :model=\"searchUserForm\"\r\n        inline\r\n        :label-width=\"55\"\r\n        class=\"search-form\"\r\n      >\r\n        <Form-item label=\"用户名\" prop=\"username\">\r\n          <Input\r\n            type=\"text\"\r\n            v-model=\"searchUserForm.username\"\r\n            clearable\r\n            placeholder=\"请输入用户名\"\r\n            style=\"width: 200px\"\r\n          />\r\n        </Form-item>\r\n        <Form-item label=\"部门\" prop=\"department\">\r\n          <department-choose @on-select=\"handleSelectDep\" ref=\"dep\"></department-choose>\r\n        </Form-item>\r\n        <Form-item style=\"margin-left:-35px;\" class=\"br\">\r\n          <Button @click=\"handleSearchUser\" type=\"primary\" icon=\"ios-search\">搜索</Button>\r\n          <Button @click=\"handleResetUser\">重置</Button>\r\n        </Form-item>\r\n      </Form>\r\n      <Table :loading=\"userLoading\" border :columns=\"userColumns\" :data=\"userData\" ref=\"userTable\"></Table>\r\n      <Row type=\"flex\" justify=\"end\" class=\"code-row-bg page\" style=\"margin: 10px 0;\">\r\n        <Page\r\n          :current=\"searchUserForm.pageNumber\"\r\n          :total=\"totalUser\"\r\n          :page-size=\"searchUserForm.pageSize\"\r\n          @on-change=\"changeUserPage\"\r\n          @on-page-size-change=\"changeUserPageSize\"\r\n          :page-size-opts=\"[9,18,36]\"\r\n          size=\"small\"\r\n          show-total\r\n          show-elevator\r\n          show-sizer\r\n        ></Page>\r\n      </Row>\r\n      <div class=\"drawer-footer\">\r\n        已选择\r\n        <span class=\"select-count\">{{selectUsers.length}}</span> 人\r\n        <Button @click=\"clearSelectUser\" style=\"margin-left:10px\">清空已选</Button>\r\n        <Button @click=\"setSelectAllUser\" type=\"info\" style=\"margin-left:10px\">勾选全部</Button>\r\n        <Button @click=\"userModalVisible=false\" type=\"primary\" style=\"margin-left:10px\">关闭</Button>\r\n      </div>\r\n    </Drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUserListData, getDictDataByType } from \"@/api/index\";\r\nimport departmentChoose from \"./department-choose\";\r\nexport default {\r\n  name: \"userChoose\",\r\n  components: {\r\n    departmentChoose\r\n  },\r\n  props: {\r\n    buttonText: {\r\n      type: String,\r\n      default: \"选择用户\"\r\n    },\r\n    icon: {\r\n      type: String,\r\n      default: \"md-person-add\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userLoading: true,\r\n      userModalVisible: false,\r\n      selectUsers: [],\r\n      searchUserForm: {\r\n        username: \"\",\r\n        type: \"\",\r\n        status: \"\",\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 9, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\" // 默认排序方式\r\n      },\r\n      userColumns: [\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"username\",\r\n          width: 145,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"avatar\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\"Avatar\", {\r\n              props: {\r\n                src: params.row.avatar\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          title: \"所属部门\",\r\n          key: \"departmentTitle\",\r\n          width: 120\r\n        },\r\n        {\r\n          title: \"手机\",\r\n          key: \"mobile\",\r\n          width: 115,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\",\r\n          width: 180,\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"性别\",\r\n          key: \"sex\",\r\n          width: 70,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            this.dictSex.forEach(e => {\r\n              if (e.value == params.row.sex) {\r\n                re = e.title;\r\n              }\r\n            });\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          key: \"type\",\r\n          align: \"center\",\r\n          width: 100,\r\n          render: (h, params) => {\r\n            let re = \"\";\r\n            if (params.row.type === 1) {\r\n              re = \"管理员\";\r\n            } else if (params.row.type === 0) {\r\n              re = \"普通用户\";\r\n            }\r\n            return h(\"div\", re);\r\n          }\r\n        },\r\n        {\r\n          title: \"状态\",\r\n          key: \"status\",\r\n          align: \"center\",\r\n          width: 120,\r\n          render: (h, params) => {\r\n            if (params.row.status === 0) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"green\"\r\n                    }\r\n                  },\r\n                  \"正常启用\"\r\n                )\r\n              ]);\r\n            } else if (params.row.status === -1) {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"red\"\r\n                    }\r\n                  },\r\n                  \"禁用\"\r\n                )\r\n              ]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"createTime\",\r\n          sortable: true,\r\n          sortType: \"desc\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          key: \"action\",\r\n          width: 130,\r\n          align: \"center\",\r\n          fixed: \"right\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\",\r\n                    size: \"small\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.chooseUser(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"添加该用户\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      userData: [],\r\n      totalUser: 0,\r\n      dictMessageType: []\r\n    };\r\n  },\r\n  methods: {\r\n    getDictDataType() {\r\n      getDictDataByType(\"message_type\").then(res => {\r\n        if (res.success) {\r\n          this.dictMessageType = res.result;\r\n        }\r\n      });\r\n      // 获取性别字典数据\r\n      getDictDataByType(\"sex\").then(res => {\r\n        if (res.success) {\r\n          this.dictSex = res.result;\r\n        }\r\n      });\r\n    },\r\n    handleSelectDep(v) {\r\n      this.searchUserForm.departmentId = v;\r\n    },\r\n    changeUserPage(v) {\r\n      this.searchUserForm.pageNumber = v;\r\n      this.getUserDataList();\r\n    },\r\n    changeUserPageSize(v) {\r\n      this.searchUserForm.pageSize = v;\r\n      this.getUserDataList();\r\n    },\r\n    getUserDataList() {\r\n      this.userLoading = true;\r\n      getUserListData(this.searchUserForm).then(res => {\r\n        this.userLoading = false;\r\n        if (res.success === true) {\r\n          this.userData = res.result.content;\r\n          this.totalUser = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    handleSearchUser() {\r\n      this.searchUserForm.pageNumber = 1;\r\n      this.searchUserForm.pageSize = 9;\r\n      this.getUserDataList();\r\n    },\r\n    handleResetUser() {\r\n      this.$refs.searchUserForm.resetFields();\r\n      this.searchUserForm.pageNumber = 1;\r\n      this.searchUserForm.pageSize = 9;\r\n      this.$refs.dep.clearSelect();\r\n      this.searchUserForm.departmentId = \"\";\r\n      // 重新加载数据\r\n      this.getUserDataList();\r\n    },\r\n    setSelectUser(v) {\r\n      this.selectUsers = v;\r\n      // this.$emit(\"on-change\", this.selectUsers);\r\n    },\r\n    setSelectAllUser() {\r\n      let data = [];\r\n      this.userData.forEach(e => {\r\n        let u = {\r\n          id: e.id,\r\n          username: e.username\r\n        };\r\n        data.push(u);\r\n      });\r\n      this.selectUsers = data;\r\n      this.$emit(\"on-change\", data);\r\n    },\r\n    chooseUser(v) {\r\n      // 去重\r\n      let that = this;\r\n      let flag = true;\r\n      this.selectUsers.forEach(e => {\r\n        if (v.id == e.id) {\r\n          that.$Message.warning(\"已经添加过啦，请勿重复选择\");\r\n          flag = false;\r\n        }\r\n      });\r\n      if (flag) {\r\n        let u = {\r\n          id: v.id,\r\n          username: v.username\r\n        };\r\n        this.selectUsers.push(u);\r\n        this.$emit(\"on-change\", this.selectUsers);\r\n        this.$Message.success(`添加用户 ${v.username} 成功`);\r\n      }\r\n    },\r\n    clearSelectUser() {\r\n      this.selectUsers = [];\r\n      this.$emit(\"on-change\", this.selectUsers);\r\n    },\r\n    handleCancelUser(e, id) {\r\n      // 删除所选用户\r\n      let newArray = [];\r\n      this.selectUsers.forEach(e => {\r\n        if (id != e.id) {\r\n          newArray.push(e);\r\n        }\r\n      });\r\n      this.selectUsers = newArray;\r\n      this.$emit(\"on-change\", this.selectUsers);\r\n      this.$Message.success(\"删除所选用户成功\");\r\n    }\r\n  },\r\n  created() {\r\n    this.getDictDataType();\r\n    this.getUserDataList();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.clear {\r\n  font-size: 12px;\r\n  margin-left: 15px;\r\n  color: #40a9ff;\r\n  cursor: pointer;\r\n}\r\n.collapse {\r\n  font-size: 12px;\r\n  margin-top: 15px;\r\n  width: 500px;\r\n}\r\n.drawer-footer {\r\n  z-index: 10;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  border-top: 1px solid #e8e8e8;\r\n  padding: 10px 16px;\r\n  text-align: right;\r\n  background: #fff;\r\n}\r\n.select-count {\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  color: #40a9ff;\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":"src/views/components/custom"}]}