{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\store\\modules\\app.js","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\store\\modules\\app.js","mtime":1564969187152},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _router = require(\"@/router/router\");\n\nvar _index = require(\"@/router/index\");\n\nvar _util = _interopRequireDefault(require(\"@/libs/util\"));\n\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar app = {\n  state: {\n    cachePage: [],\n    lang: '',\n    isFullScreen: false,\n    openedSubmenuArr: [],\n    // 要展开的菜单数组\n    menuTheme: 'light',\n    // 主题 light,dark\n    themeColor: '',\n    pageOpenedList: [{\n      title: '首页',\n      path: '',\n      name: 'home_index'\n    }],\n    currentPageName: '',\n    currentPath: [{\n      title: '首页',\n      path: '',\n      name: 'home_index'\n    }],\n    // 面包屑数组\n    menuList: [],\n    routers: [_router.otherRouter],\n    tagsList: _toConsumableArray(_router.otherRouter.children),\n    messageCount: 0,\n    // 在这里定义你不想要缓存的页面的name属性值(参见路由配置router.js)\n    dontCache: ['test', 'test']\n  },\n  mutations: {\n    // 动态添加主界面路由，需要缓存\n    updateAppRouter: function updateAppRouter(state, routes) {\n      var _state$routers;\n\n      (_state$routers = state.routers).push.apply(_state$routers, _toConsumableArray(routes));\n\n      _index.router.addRoutes(routes);\n    },\n    // 动态添加全局路由，不需要缓存\n    updateDefaultRouter: function updateDefaultRouter(state, routes) {\n      _index.router.addRoutes(routes);\n    },\n    setTagsList: function setTagsList(state, list) {\n      var _state$tagsList;\n\n      (_state$tagsList = state.tagsList).push.apply(_state$tagsList, _toConsumableArray(list));\n    },\n    updateMenulist: function updateMenulist(state, routes) {\n      //console.log(routes);\n      state.menuList = routes;\n    },\n    addOpenSubmenu: function addOpenSubmenu(state, name) {\n      var hasThisName = false;\n      var isEmpty = false;\n\n      if (name.length === 0) {\n        isEmpty = true;\n      }\n\n      if (state.openedSubmenuArr.indexOf(name) > -1) {\n        hasThisName = true;\n      }\n\n      if (!hasThisName && !isEmpty) {\n        state.openedSubmenuArr.push(name);\n      }\n    },\n    closePage: function closePage(state, name) {\n      state.cachePage.forEach(function (item, index) {\n        if (item === name) {\n          state.cachePage.splice(index, 1);\n        }\n      });\n    },\n    initCachepage: function initCachepage(state) {\n      if (localStorage.cachePage) {\n        state.cachePage = JSON.parse(localStorage.cachePage);\n      }\n    },\n    removeTag: function removeTag(state, name) {\n      state.pageOpenedList.map(function (item, index) {\n        if (item.name === name) {\n          state.pageOpenedList.splice(index, 1);\n        }\n      });\n    },\n    pageOpenedList: function pageOpenedList(state, get) {\n      var openedPage = state.pageOpenedList[get.index];\n\n      if (get.argu) {\n        openedPage.argu = get.argu;\n      }\n\n      if (get.query) {\n        openedPage.query = get.query;\n      }\n\n      state.pageOpenedList.splice(get.index, 1, openedPage);\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    clearAllTags: function clearAllTags(state) {\n      state.pageOpenedList.splice(1);\n      state.cachePage.length = 0;\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    clearOtherTags: function clearOtherTags(state, vm) {\n      var currentName = vm.$route.name;\n      var currentIndex = 0;\n      state.pageOpenedList.forEach(function (item, index) {\n        if (item.name === currentName) {\n          currentIndex = index;\n        }\n      });\n\n      if (currentIndex === 0) {\n        state.pageOpenedList.splice(1);\n      } else {\n        state.pageOpenedList.splice(currentIndex + 1);\n        state.pageOpenedList.splice(1, currentIndex - 1);\n      }\n\n      var newCachepage = state.cachePage.filter(function (item) {\n        return item === currentName;\n      });\n      state.cachePage = newCachepage;\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    },\n    setOpenedList: function setOpenedList(state) {\n      state.pageOpenedList = localStorage.pageOpenedList ? JSON.parse(localStorage.pageOpenedList) : [_router.otherRouter.children[0]];\n    },\n    setCurrentPath: function setCurrentPath(state, pathArr) {\n      state.currentPath = pathArr;\n    },\n    setCurrentPageName: function setCurrentPageName(state, name) {\n      state.currentPageName = name;\n    },\n    setAvatarPath: function setAvatarPath(state, path) {\n      localStorage.avatorImgPath = path;\n    },\n    switchLang: function switchLang(state, lang) {\n      state.lang = lang;\n      _vue.default.config.lang = lang;\n    },\n    clearOpenedSubmenu: function clearOpenedSubmenu(state) {\n      state.openedSubmenuArr.length = 0;\n    },\n    setMessageCount: function setMessageCount(state, count) {\n      state.messageCount = count;\n    },\n    increateTag: function increateTag(state, tagObj) {\n      if (!_util.default.oneOf(tagObj.name, state.dontCache)) {\n        state.cachePage.push(tagObj.name);\n        localStorage.cachePage = JSON.stringify(state.cachePage);\n      }\n\n      state.pageOpenedList.push(tagObj);\n      localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\n    }\n  }\n};\nvar _default = app;\nexports.default = _default;",{"version":3,"sources":["F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\store\\modules\\app.js"],"names":["app","state","cachePage","lang","isFullScreen","openedSubmenuArr","menuTheme","themeColor","pageOpenedList","title","path","name","currentPageName","currentPath","menuList","routers","otherRouter","tagsList","children","messageCount","dontCache","mutations","updateAppRouter","routes","push","router","addRoutes","updateDefaultRouter","setTagsList","list","updateMenulist","addOpenSubmenu","hasThisName","isEmpty","length","indexOf","closePage","forEach","item","index","splice","initCachepage","localStorage","JSON","parse","removeTag","map","get","openedPage","argu","query","stringify","clearAllTags","clearOtherTags","vm","currentName","$route","currentIndex","newCachepage","filter","setOpenedList","setCurrentPath","pathArr","setCurrentPageName","setAvatarPath","avatorImgPath","switchLang","Vue","config","clearOpenedSubmenu","setMessageCount","count","increateTag","tagObj","Util","oneOf"],"mappings":"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","sourcesContent":["import { otherRouter } from '@/router/router';\r\nimport { router } from '@/router/index';\r\nimport Util from '@/libs/util';\r\nimport Cookies from 'js-cookie';\r\nimport Vue from 'vue';\r\n\r\nconst app = {\r\n    state: {\r\n        cachePage: [],\r\n        lang: '',\r\n        isFullScreen: false,\r\n        openedSubmenuArr: [], // 要展开的菜单数组\r\n        menuTheme: 'light', // 主题 light,dark\r\n        themeColor: '',\r\n        pageOpenedList: [{\r\n            title: '首页',\r\n            path: '',\r\n            name: 'home_index'\r\n        }],\r\n        currentPageName: '',\r\n        currentPath: [\r\n            {\r\n                title: '首页',\r\n                path: '',\r\n                name: 'home_index'\r\n            }\r\n        ], \r\n        // 面包屑数组\r\n        menuList: [],\r\n        routers: [\r\n            otherRouter\r\n        ],\r\n        tagsList: [...otherRouter.children],\r\n        messageCount: 0,\r\n        // 在这里定义你不想要缓存的页面的name属性值(参见路由配置router.js)\r\n        dontCache: ['test', 'test']\r\n    },\r\n    mutations: {\r\n        // 动态添加主界面路由，需要缓存\r\n        updateAppRouter(state, routes) {\r\n            state.routers.push(...routes);\r\n            router.addRoutes(routes);\r\n        },\r\n        // 动态添加全局路由，不需要缓存\r\n        updateDefaultRouter(state, routes) {\r\n            router.addRoutes(routes);\r\n        },\r\n        setTagsList(state, list) {\r\n            state.tagsList.push(...list);\r\n        },\r\n        updateMenulist(state, routes) {\r\n            //console.log(routes);\r\n            state.menuList = routes;\r\n        },\r\n        addOpenSubmenu(state, name) {\r\n            let hasThisName = false;\r\n            let isEmpty = false;\r\n            if (name.length === 0) {\r\n                isEmpty = true;\r\n            }\r\n            if (state.openedSubmenuArr.indexOf(name) > -1) {\r\n                hasThisName = true;\r\n            }\r\n            if (!hasThisName && !isEmpty) {\r\n                state.openedSubmenuArr.push(name);\r\n            }\r\n        },\r\n        closePage(state, name) {\r\n            state.cachePage.forEach((item, index) => {\r\n                if (item === name) {\r\n                    state.cachePage.splice(index, 1);\r\n                }\r\n            });\r\n        },\r\n        initCachepage(state) {\r\n            if (localStorage.cachePage) {\r\n                state.cachePage = JSON.parse(localStorage.cachePage);\r\n            }\r\n        },\r\n        removeTag(state, name) {\r\n            state.pageOpenedList.map((item, index) => {\r\n                if (item.name === name) {\r\n                    state.pageOpenedList.splice(index, 1);\r\n                }\r\n            });\r\n        },\r\n        pageOpenedList(state, get) {\r\n            let openedPage = state.pageOpenedList[get.index];\r\n            if (get.argu) {\r\n                openedPage.argu = get.argu;\r\n            }\r\n            if (get.query) {\r\n                openedPage.query = get.query;\r\n            }\r\n            state.pageOpenedList.splice(get.index, 1, openedPage);\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        clearAllTags(state) {\r\n            state.pageOpenedList.splice(1);\r\n            state.cachePage.length = 0;\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        clearOtherTags(state, vm) {\r\n            let currentName = vm.$route.name;\r\n            let currentIndex = 0;\r\n            state.pageOpenedList.forEach((item, index) => {\r\n                if (item.name === currentName) {\r\n                    currentIndex = index;\r\n                }\r\n            });\r\n            if (currentIndex === 0) {\r\n                state.pageOpenedList.splice(1);\r\n            } else {\r\n                state.pageOpenedList.splice(currentIndex + 1);\r\n                state.pageOpenedList.splice(1, currentIndex - 1);\r\n            }\r\n            let newCachepage = state.cachePage.filter(item => {\r\n                return item === currentName;\r\n            });\r\n            state.cachePage = newCachepage;\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        },\r\n        setOpenedList(state) {\r\n            state.pageOpenedList = localStorage.pageOpenedList ? JSON.parse(localStorage.pageOpenedList) : [otherRouter.children[0]];\r\n        },\r\n        setCurrentPath(state, pathArr) {\r\n            state.currentPath = pathArr;\r\n        },\r\n        setCurrentPageName(state, name) {\r\n            state.currentPageName = name;\r\n        },\r\n        setAvatarPath(state, path) {\r\n            localStorage.avatorImgPath = path;\r\n        },\r\n        switchLang(state, lang) {\r\n            state.lang = lang;\r\n            Vue.config.lang = lang;\r\n        },\r\n        clearOpenedSubmenu(state) {\r\n            state.openedSubmenuArr.length = 0;\r\n        },\r\n        setMessageCount(state, count) {\r\n            state.messageCount = count;\r\n        },\r\n        increateTag(state, tagObj) {\r\n            if (!Util.oneOf(tagObj.name, state.dontCache)) {\r\n                state.cachePage.push(tagObj.name);\r\n                localStorage.cachePage = JSON.stringify(state.cachePage);\r\n            }\r\n            state.pageOpenedList.push(tagObj);\r\n            localStorage.pageOpenedList = JSON.stringify(state.pageOpenedList);\r\n        }\r\n    }\r\n};\r\n\r\nexport default app;\r\n"]}]}