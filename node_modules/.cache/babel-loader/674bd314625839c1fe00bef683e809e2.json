{"remainingRequest":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\editContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\src\\views\\lsbusiness\\publish\\editContent.vue","mtime":1564969515800},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\gitProject\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _publishContent = require(\"@/api/publishContent\");\n\nvar _index = require(\"@/api/index\");\n\nvar _vueUeditorWrap = _interopRequireDefault(require(\"vue-ueditor-wrap\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar base = process.env.VUE_APP_BASE_API;\nvar URL = process.env.NODE_ENV === 'production' ? '/rcms-pc-web/' : '/';\nvar _default = {\n  name: \"editContent\",\n  components: {\n    VueUeditorWrap: _vueUeditorWrap.default\n  },\n  data: function data() {\n    return {\n      submitLoading: false,\n      // 内容表单\n      contentForm: {\n        title: \"\",\n        author: \"\",\n        isPublication: \"\",\n        isTop: \"\",\n        seoDescription: \"\",\n        content: \"\",\n        contentType: \"\"\n      },\n      newContentForm: {\n        title: \"\",\n        author: \"\",\n        isPublication: \"\",\n        isTop: \"\",\n        seoDescription: \"\",\n        content: \"\",\n        contentType: \"\"\n      },\n      // 发布内容类别\n      dictContentType: [],\n      // 以下为编辑器data//////////////\n      myConfig: {\n        //   如果需要上传功能,找后端小伙伴要服务器接口地址\n        //   serverUrl: this.$config.baseUrl + 'ueditor/ueditorConfig',\n        serverUrl: base + \"/wechatContent/uploadToQiniu\",\n        // serverUrl: 'http://35.201.165.105:8000/controller.php',\n        // 你的UEditor资源存放的路径,相对于打包后的index.html\n        UEDITOR_HOME_URL: \"/rcms-pc-web/ueditor/\",\n        // 编辑器不自动被内容撑高\n        autoHeightEnabled: false,\n        // 工具栏是否可以浮动\n        autoFloatEnabled: false,\n        // 初始容器高度\n        initialFrameHeight: 340,\n        // 初始容器宽度\n        initialFrameWidth: \"100%\",\n        // 启动自动保存\n        enableAutoSave: true\n      } // 以上为编辑器data/////////\n\n    };\n  },\n  methods: {\n    init: function init() {\n      this.fetchData();\n      this.getDictContenTypeData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n\n      (0, _publishContent.getWechatContent)(this.$route.params.id).then(function (res) {\n        if (res.success) {\n          _this.contentForm = res.result;\n\n          if (_this.contentForm.isPublication == 1) {\n            _this.contentForm.isPublication = true;\n          } else {\n            _this.contentForm.isPublication = false;\n          }\n\n          if (_this.contentForm.isTop == 1) {\n            _this.contentForm.isTop = true;\n          } else {\n            _this.contentForm.isTop = false;\n          }\n        }\n      });\n    },\n    // 获取发布内容类别字典数据\n    getDictContenTypeData: function getDictContenTypeData() {\n      var _this2 = this;\n\n      (0, _index.getDictDataByType)(\"contentType\").then(function (res) {\n        if (res.success) {\n          _this2.dictContentType = res.result;\n        }\n      });\n    },\n    back: function back() {\n      window.history.back();\n    },\n    updateContentInfo: function updateContentInfo() {\n      var _this3 = this;\n\n      // let this.newContentForm.isPublication = Number(this.contentForm.isPublication);\n      var con = JSON.stringify(this.contentForm);\n      var conObj = JSON.parse(con);\n\n      if (this.contentForm.isPublication) {\n        conObj.isPublication = 1;\n      } else {\n        conObj.isPublication = 0;\n      }\n\n      if (this.contentForm.isTop) {\n        conObj.isTop = 1;\n      } else {\n        conObj.isTop = 0;\n      }\n\n      (0, _publishContent.editContent)(conObj).then(function (res) {\n        _this3.submitLoading = false;\n\n        if (res.success) {\n          _this3.$Message.success(\"修改成功\");\n\n          _this3.$router.push({\n            name: \"contentManage\"\n          });\n        }\n      });\n    }\n  },\n  watch: {\n    // 如果路由有变化，会再次执行该方法\n    // $route: \"init\"\n    '$route.name': function $routeName(toC, fromC) {\n      if (fromC === 'contentManage' && toC === 'editContent') {\n        this.fetchData();\n        this.getDictContenTypeData();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n};\nexports.default = _default;",{"version":3,"sources":["editContent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <Row>\r\n    <Card>\r\n      <Col>\r\n        <Row>\r\n          <Col>\r\n            <Button type=\"primary\" icon=\"ios-arrow-back\" @click=\"back\">返回</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Form :label-width=\"70\" class=\"search-form\" v-model=\"contentForm\">\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"标题\">\r\n                  <Input\r\n                    v-model=\"contentForm.title\"\r\n                    type=\"text\"\r\n                    clearable\r\n                    placeholder=\"请输入文章标题\"\r\n                    style=\"width: 200px\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"作者\">\r\n                  <Input\r\n                    v-model=\"contentForm.author\"\r\n                    type=\"text\"\r\n                    clearable\r\n                    placeholder=\"请输入作者\"\r\n                    style=\"width: 200px\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"内容类别\">\r\n                  <Select\r\n                    v-model=\"contentForm.contentType\"\r\n                    placeholder=\"请选择\"\r\n                    clearable\r\n                    style=\"width: 200px\"\r\n                  >\r\n                    <Option\r\n                    v-for=\"(item, i) in dictContentType\"\r\n                    :key=\"i\"\r\n                    :value=\"Number(item.value)\"\r\n                  >{{item.title}}</Option>\r\n                  </Select>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item>\r\n                  <Checkbox v-model=\"contentForm.isPublication\">立即发布</Checkbox>\r\n                </Form-item>\r\n                <Form-item prop=\"isTop\">\r\n                  <Checkbox v-model=\"contentForm.isTop\">置顶内容</Checkbox>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"摘要\">\r\n                  <Input\r\n                    v-model=\"contentForm.seoDescription\"\r\n                    type=\"textarea\"\r\n                    :rows=\"4\"\r\n                    placeholder=\"请输入文章摘要\"\r\n                  />\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form-item label=\"正文\">\r\n                  <vue-ueditor-wrap\r\n                    v-model=\"contentForm.content\"\r\n                    :config=\"myConfig\"\r\n                    style=\"z-index:0;\"\r\n                  ></vue-ueditor-wrap>\r\n                </Form-item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"center\">\r\n          <Col>\r\n            <Button type=\"primary\" :loading=\"submitLoading\" @click=\"updateContentInfo\">更新</Button>\r\n            </Col>\r\n        </Row>\r\n      </Col>\r\n    </Card>\r\n  </Row>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getContentTypeListData,\r\n  editContent,\r\n  getWechatContent\r\n} from \"@/api/publishContent\";\r\nimport {\r\n  getDictDataByType,\r\n} from \"@/api/index\";\r\nimport VueUeditorWrap from \"vue-ueditor-wrap\";\r\nlet base = process.env.VUE_APP_BASE_API;\r\nlet URL = process.env.NODE_ENV === 'production'\r\n  ? '/rcms-pc-web/'\r\n  : '/'\r\nexport default {\r\n  name: \"editContent\",\r\n  components: {\r\n    VueUeditorWrap\r\n  },\r\n  data() {\r\n    return {\r\n      submitLoading:false,\r\n      // 内容表单\r\n      contentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: \"\",\r\n        isTop: \"\",\r\n        seoDescription: \"\",\r\n        content: \"\",\r\n        contentType:\"\"\r\n      },\r\n      newContentForm: {\r\n        title: \"\",\r\n        author: \"\",\r\n        isPublication: \"\",\r\n        isTop: \"\",\r\n        seoDescription: \"\",\r\n        content: \"\",\r\n        contentType:\"\"\r\n      },\r\n      // 发布内容类别\r\n      dictContentType: [],\r\n      // 以下为编辑器data//////////////\r\n      myConfig: {\r\n        //   如果需要上传功能,找后端小伙伴要服务器接口地址\r\n        //   serverUrl: this.$config.baseUrl + 'ueditor/ueditorConfig',\r\n        serverUrl: base+\"/wechatContent/uploadToQiniu\",\r\n        // serverUrl: 'http://35.201.165.105:8000/controller.php',\r\n        // 你的UEditor资源存放的路径,相对于打包后的index.html\r\n        UEDITOR_HOME_URL: \"/rcms-pc-web/ueditor/\",\r\n        // 编辑器不自动被内容撑高\r\n        autoHeightEnabled: false,\r\n        // 工具栏是否可以浮动\r\n        autoFloatEnabled: false,\r\n        // 初始容器高度\r\n        initialFrameHeight: 340,\r\n        // 初始容器宽度\r\n        initialFrameWidth: \"100%\",\r\n        // 启动自动保存\r\n        enableAutoSave: true\r\n      },\r\n      // 以上为编辑器data/////////\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.fetchData();\r\n      this.getDictContenTypeData();\r\n    },\r\n    fetchData() {\r\n      getWechatContent(this.$route.params.id).then(res => {\r\n        if (res.success) {\r\n          this.contentForm = res.result;\r\n          if(this.contentForm.isPublication ==1) {\r\n            this.contentForm.isPublication = true;\r\n          } else {\r\n            this.contentForm.isPublication = false;\r\n          }\r\n          if(this.contentForm.isTop ==1) {\r\n            this.contentForm.isTop = true;\r\n          } else {\r\n            this.contentForm.isTop = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    // 获取发布内容类别字典数据\r\n    getDictContenTypeData() {\r\n      getDictDataByType(\"contentType\").then(res => {\r\n        if (res.success) {\r\n          this.dictContentType = res.result;\r\n        }\r\n      });\r\n    },\r\n    back() {\r\n      window.history.back();\r\n    },\r\n    updateContentInfo() {\r\n      // let this.newContentForm.isPublication = Number(this.contentForm.isPublication);\r\n      let con = JSON.stringify(this.contentForm);\r\n      let conObj = JSON.parse(con);\r\n      if(this.contentForm.isPublication) {\r\n        conObj.isPublication = 1;\r\n      } else {\r\n        conObj.isPublication =0;\r\n      }\r\n      if(this.contentForm.isTop) {\r\n        conObj.isTop = 1;\r\n      } else {\r\n        conObj.isTop =0;\r\n      }\r\n      \r\n      editContent(conObj).then(res => {\r\n        this.submitLoading = false;\r\n        if (res.success) {\r\n          this.$Message.success(\"修改成功\");\r\n          this.$router.push({name: \"contentManage\"});\r\n        }\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    // 如果路由有变化，会再次执行该方法\r\n    // $route: \"init\"\r\n    '$route.name'(toC, fromC){\r\n        if(fromC === 'contentManage' && toC === 'editContent'){\r\n            this.fetchData();\r\n            this.getDictContenTypeData();\r\n        }\r\n    }\r\n      },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n\r\n"],"sourceRoot":"src/views/lsbusiness/publish"}]}