{"remainingRequest":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\header\\app-header.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\src\\views\\components\\header\\app-header.vue","mtime":1566305570147},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jingsai\\rcms_src\\rcms-pc-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport './app-header.less';\nimport navMenu from \"@/views/components/nav-menu/navMenu.vue\";\nimport fullScreen from \"@/views/components/fullscreen.vue\";\nimport lockScreen from \"@/views/components/lockscreen/lockscreen.vue\";\nimport messageTip from \"@/views/components/message-tip.vue\";\nimport Cookies from \"js-cookie\";\nimport util from \"@/libs/util.js\";\nimport setting from \"@/settings.js\";\nexport default {\n  name: 'appHeader',\n  components: {\n    navMenu: navMenu,\n    fullScreen: fullScreen,\n    lockScreen: lockScreen,\n    messageTip: messageTip\n  },\n  props: {\n    activeName: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      username: \"\",\n      userId: \"\",\n      isFullScreen: false,\n      pomnameName: \"\"\n    };\n  },\n  computed: {\n    menuTheme: function menuTheme() {\n      return this.$store.state.app.menuTheme;\n    },\n    menuList: function menuList() {\n      return this.$store.state.app.menuList;\n    },\n    avatarPath: function avatarPath() {\n      return localStorage.avatorImgPath;\n    },\n    lang: function lang() {\n      return this.$store.state.app.lang;\n    },\n    mesCount: function mesCount() {\n      return this.$store.state.app.messageCount;\n    }\n  },\n  methods: {\n    init: function init() {\n      // let pathArr = util.setCurrentPath(this, this.$route.name);\n      // // this.$store.commit(\"updateMenulist\");\n      // if (pathArr.length >= 2) {\n      //   this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      // }\n      var userInfo = JSON.parse(Cookies.get(\"userInfo\"));\n      this.username = userInfo.username;\n      this.userId = userInfo.id;\n    },\n    handleChange: function handleChange(name) {},\n    fullscreenChange: function fullscreenChange(isFullScreen) {// console.log(isFullScreen);\n    },\n    handleLanDropdown: function handleLanDropdown(name) {\n      localStorage.lang = name;\n      this.$store.commit(\"switchLang\", name);\n    },\n    handleClickUserDropdown: function handleClickUserDropdown(name) {\n      if (name === \"ownSpace\") {\n        util.openNewPage(this, \"ownspace_index\");\n        this.$router.push({\n          name: \"ownspace_index\"\n        });\n      } else if (name === \"changePass\") {\n        util.openNewPage(this, \"change_pass\");\n        this.$router.push({\n          name: \"change_pass\"\n        });\n      } else if (name === \"loginout\") {\n        // 退出登录\n        this.$store.commit(\"logout\", this);\n        this.$store.commit(\"clearOpenedSubmenu\"); // 强制刷新页面 重新加载router\n\n        location.reload();\n      }\n    }\n  },\n  watch: {\n    lang: function lang() {\n      util.setCurrentPath(this, this.$route.name); // 在切换语言时用于刷新面包屑\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.pomnameName = setting.title;\n  }\n};",null]}